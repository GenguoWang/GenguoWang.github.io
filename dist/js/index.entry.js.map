{"version":3,"sources":["webpack:///webpack/bootstrap 7e1ac008dfd467c7e92e","webpack:///./src/index.js","webpack:///./src/game.js","webpack:///./src/board.js","webpack:///./src/point.js","webpack:///./src/shape.js","webpack:///./src/render.js","webpack:///./~/@turf/turf/index.js","webpack:///./~/@turf/helpers/index.js","webpack:///./~/@turf/invariant/index.js","webpack:///./~/@turf/isolines/index.js","webpack:///./~/@turf/tin/index.js","webpack:///./~/@turf/inside/index.js","webpack:///./~/@turf/point-grid/index.js","webpack:///./~/@turf/distance/index.js","webpack:///./~/@turf/bbox/index.js","webpack:///./~/@turf/meta/index.js","webpack:///./~/@turf/planepoint/index.js","webpack:///./~/@turf/square/index.js","webpack:///./~/@turf/isolines/conrec.js","webpack:///./~/@turf/convex/index.js","webpack:///./~/convex-hull/ch.js","webpack:///./~/convex-hull/lib/ch1d.js","webpack:///./~/convex-hull/lib/ch2d.js","webpack:///./~/monotone-convex-hull-2d/index.js","webpack:///./~/robust-orientation/orientation.js","webpack:///./~/two-product/two-product.js","webpack:///./~/robust-sum/robust-sum.js","webpack:///./~/robust-scale/robust-scale.js","webpack:///./~/two-sum/two-sum.js","webpack:///./~/robust-subtract/robust-diff.js","webpack:///./~/convex-hull/lib/chnd.js","webpack:///./~/incremental-convex-hull/ich.js","webpack:///./~/simplicial-complex/topology.js","webpack:///./~/bit-twiddle/twiddle.js","webpack:///./~/union-find/index.js","webpack:///./~/affine-hull/aff.js","webpack:///./~/@turf/within/index.js","webpack:///./~/@turf/concave/index.js","webpack:///./~/@turf/union/index.js","webpack:///./~/jsts/dist/jsts.min.js","webpack:///./~/@turf/difference/index.js","webpack:///./~/@turf/dissolve/index.js","webpack:///./~/turf-overlaps/index.js","webpack:///./~/turf-is-clockwise/index.js","webpack:///./~/rbush/index.js","webpack:///./~/quickselect/index.js","webpack:///./~/geojson-utils/geojson-utils.js","webpack:///./~/get-closest/index.js","webpack:///./~/assert/assert.js","webpack:///./~/util/util.js","webpack:///./~/process/browser.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/util/~/inherits/inherits_browser.js","webpack:///./~/@turf/collect/index.js","webpack:///./~/@turf/flip/index.js","webpack:///./~/@turf/simplify/index.js","webpack:///./~/simplify-js/simplify.js","webpack:///./~/@turf/bezier/index.js","webpack:///./~/@turf/bezier/spline.js","webpack:///./~/@turf/tag/index.js","webpack:///./~/@turf/sample/index.js","webpack:///./~/@turf/envelope/index.js","webpack:///./~/@turf/bbox-polygon/index.js","webpack:///./~/@turf/circle/index.js","webpack:///./~/@turf/destination/index.js","webpack:///./~/@turf/midpoint/index.js","webpack:///./~/@turf/bearing/index.js","webpack:///./~/@turf/buffer/index.js","webpack:///./~/@mapbox/geojson-normalize/index.js","webpack:///./~/@turf/center/index.js","webpack:///./~/@turf/center-of-mass/index.js","webpack:///./~/@turf/centroid/index.js","webpack:///./~/@turf/explode/index.js","webpack:///./~/@turf/combine/index.js","webpack:///./~/@turf/tesselate/index.js","webpack:///./~/earcut/src/earcut.js","webpack:///./~/@turf/intersect/index.js","webpack:///./~/@turf/nearest/index.js","webpack:///./~/@turf/random/index.js","webpack:///./~/geojson-random/index.js","webpack:///./~/@turf/kinks/index.js","webpack:///./~/@turf/point-on-surface/index.js","webpack:///./~/@turf/area/index.js","webpack:///./~/@mapbox/geojson-area/index.js","webpack:///./~/wgs84/index.js","webpack:///./~/@turf/along/index.js","webpack:///./~/@turf/line-distance/index.js","webpack:///./~/@turf/flatten/index.js","webpack:///./~/@turf/line-slice/index.js","webpack:///./~/@turf/point-on-line/index.js","webpack:///./~/@turf/line-slice-along/index.js","webpack:///./~/@turf/square-grid/index.js","webpack:///./~/@turf/triangle-grid/index.js","webpack:///./~/@turf/hex-grid/index.js","webpack:///./~/@turf/idw/index.js","webpack:///./~/@turf/truncate/index.js","webpack:///./src/editor.js","webpack:///./src/level.js","webpack:///./~/promise-polyfill/lib/index.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["document","addEventListener","bgCanvas","getElementById","canvas","targetBgCanvas","targetCanvas","editCanvas","fetch","then","response","json","levels","levelString","getCorners","shapes","leftTopX","leftTopY","rightBottomX","rightBottomY","forEach","shape","points","p","op","add","origin","Math","min","x","y","max","getMatric","corners","i","j","matric","blackCnt","fj","fi","c","containsPoint","isBlack","data","Game","workBoard","isMatching","bind","editor","addShape","hide","isEditing","targetBoard","currentLevel","loadLevel","editBtn","console","log","stopEdit","edit","clearBtn","style","display","loadShapes","addBtn","push","initShapes","targetShapes","length","textContent","invalid","targetMatric","localStorage","setItem","JSON","stringify","show","level","f1","f2","Board","width","height","ratio","drawBackground","ctx","getContext","globalCompositeOperation","isMouseDown","startPoint","currentShape","render","mousedown","mouseup","mousemove","map","s","clearRect","fillStyle","save","scale","draw","restore","e","preventDefault","touchPoint","getPointFromMouseEvent","tmp","minus","round","nowPoint","touches","rect","getBoundingClientRect","clientX","left","clientY","top","offsetX","offsetY","bgCtx","fillRect","Point","prototype","equals","crossProduct","p1","p2","p3","ZERO","makeSquare","Shape","getDrawPoint","index","beginPath","moveTo","lineTo","fill","originPoint","pFlag","nFlag","ps","concat","v","size","type","_origin","calculate","match","turf","toTurfPolygon","polygon","drawPoints","pointsArray","polygons","result","tmpResult","leftOver","d","difference","old","fc","featureCollection","combinedResult","combine","features","alert","r","geometry","pl","coordinates","union","apply","translate","f","bbox1","bbox","bbox2","area","d1","d2","Editor","currentPoint","tmpP","lineWidth","stroke","createFromJson","L1","L2","item","LEVELS"],"mappings":"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AAc,CAACkG,MAAM,CAAN,CAAf,EAAyB,CAACA,MAAM,CAAN,CAA1B;AACAzH,WAAQC,GAAR,CAAYqB,EAAZ;AACAtB,WAAQC,GAAR,CAAYsB,EAAZ;AACAvB,WAAQC,GAAR,CAAY4F,KAAK6B,IAAL,CAAUnG,EAAV,CAAZ;AACA,OAAMoG,KAAK9B,KAAKU,UAAL,CAAgBjF,EAAhB,EAAoBC,EAApB,CAAX;AACA,OAAMqG,KAAK/B,KAAKU,UAAL,CAAgBhF,EAAhB,EAAoBD,EAApB,CAAX;AACAtB,WAAQC,GAAR,CAAY0H,EAAZ;AACA3H,WAAQC,GAAR,CAAY2H,EAAZ;AACA,UAAO,CAACD,MAAM,IAAN,IAAc9B,KAAK6B,IAAL,CAAUC,EAAV,IAAgB,GAA/B,MAAwCC,MAAM,IAAN,IAAc/B,KAAK6B,IAAL,CAAUE,EAAV,IAAgB,GAAtE,CAAP;AACD,E;;;;;;AC3HD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AChFA;AACA,qBAAoB,eAAe,eAAe,cAAc;AAChE;AACA;AACA,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,cAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA,mEAAkE,YAAY;AAC9E;AACA;AACA,YAAW,cAAc;AACzB,YAAW,QAAQ,2CAA2C,cAAc;AAC5E;AACA,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,qDAAoD,aAAa,gCAAgC,cAAc;AAC/G;AACA;AACA,YAAW,4BAA4B;AACvC,YAAW,QAAQ;AACnB,cAAa,iBAAiB;AAC9B,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,gCAAgC;AACxC;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,wBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,eAAc,iBAAiB;AAC/B;AACA;AACA;AACA,YAAW,qBAAqB;AAChC,YAAW,QAAQ;AACnB,cAAa,oBAAoB;AACjC,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,8BAA8B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,uBAAsB,uBAAuB,gBAAgB,wBAAwB;AACrF;AACA;AACA,YAAW,UAAU;AACrB,cAAa,kBAAkB;AAC/B;AACA;AACA,oCAAmC,mBAAmB;AACtD,oCAAmC,mBAAmB;AACtD,oCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc,+BAA+B;AAC7C;AACA;AACA;AACA,YAAW,4BAA4B;AACvC,YAAW,QAAQ;AACnB,cAAa,yBAAyB;AACtC,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,eAAc,0BAA0B;AACxC;AACA;AACA;AACA,YAAW,qBAAqB;AAChC,YAAW,QAAQ;AACnB,cAAa,oBAAoB;AACjC,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;;AAGA;AACA,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA,YAAW,mCAAmC;AAC9C,YAAW,QAAQ;AACnB,cAAa,sBAAsB;AACnC,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,eAAc,kCAAkC;AAChD;AACA;AACA;AACA,YAAW,OAAO,SAAS,EAAE;AAC7B,YAAW,QAAQ;AACnB,cAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACnUA;AACA;AACA;AACA,YAAW,mCAAmC;AAC9C,cAAa,cAAc;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,iCAAiC;AAC5C,cAAa,WAAW;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yCAAwC,cAAc;AACtD,0BAAyB,kBAAkB;AAC3C;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAwC,wBAAwB;AAChE,0BAAyB,kBAAkB;AAC3C;AACA;AACA,YAAW,kBAAkB;AAC7B,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAU,mBAAmB;AAC7B;AACA;AACA;AACA,YAAW,yBAAyB;AACpC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,cAAc;AACzB,cAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ,mBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,gCAAgC;AACnD;AACA,wBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,WAAW;AAC9B;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;;;;;;AClGA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,yBAAyB;AACpC,YAAW,OAAO;AAClB;AACA,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,mBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA,mBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACjPA;;AAEA;AACA;AACA;;AAEA;AACA,aAAY,YAAY,QAAQ,cAAc,KAAK,mBAAmB;AACtE;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,gCAAgC;AAC3C,cAAa,QAAQ,2CAA2C;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAuC,iCAAiC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAwC,iBAAiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpEA;AACA;AACA;AACA;;AAEA;AACA,eAAc,YAAY,4BAA4B,wBAAwB,KAAK,cAAc;AACjG;AACA;AACA,YAAW,6CAA6C;AACxD,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAoD;AACpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACnDA;AACA;AACA;AACA;;AAEA;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,eAAe;AAC1B,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;AC3DA;;AAEA;AACA;AACA;AACA;AACA,YAAW,4BAA4B;AACvC,cAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA,YAAW,iBAAiB;AAC5B,YAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,UAAU;;AAEzB;AACA;AACA;AACA;;AAEA,oBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb,4BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA,cAAa;AACb,4BAA2B,mBAAmB;AAC9C,gCAA+B,mCAAmC;AAClE;AACA;AACA;AACA,cAAa;AACb,4BAA2B,mBAAmB;AAC9C,gCAA+B,sBAAsB;AACrD,oCAAmC,sCAAsC;AACzE;AACA;AACA;AACA,cAAa;AACb,4BAA2B,gCAAgC;AAC3D;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb;AACA,YAAW,iBAAiB;AAC5B,YAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,YAAW,QAAQ;AACnB;AACA,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,yBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb;AACA,YAAW,EAAE;AACb,YAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,yBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,MAAK;AACL,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb;AACA,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,yBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,UAAU;;AAEzB;AACA;AACA;AACA;;AAEA,oBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,4BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb;AACA,YAAW,EAAE;AACb,YAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,yBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;;;;;;;ACzoBA;AACA,mCAAkC;AAClC,WAAU,YAAY;AACtB;AACA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,iBAAiB;AAC5B,cAAa,OAAO;AACpB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACvEA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,cAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAoB;AACpB,qBAAoB;AACpB;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA,wBAAuB;AACvB;;AAEA;AACA,qBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,qBAAqB,GAAG,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,kBAAkB,EAAE;AAC1D;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA6B,UAAU;AACvC,4BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,QAAQ;AACzC;AACA,0CAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpgBA;AACA;AACA;;AAEA;AACA,aAAY,cAAc,OAAO,wBAAwB,4BAA4B,cAAc;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,0BAA0B;AACrC,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9FA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA,E;;;;;;ACxBA;;AAEA;;AAEA;AACA;AACA;AACA,eAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA,E;;;;;;ACtBA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAgB,KAAK;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA,eAAc,KAAK;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B,MAAM;AACrC;AACA;AACA,4BAA2B,KAAK;AAChC;AACA;;AAEA;AACA;AACA,E;;;;;;AChFA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAc,YAAY;AAC1B;AACA,qBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,iBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,+CAA+C;AACzG,wBAAuB;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA2B,WAAW;AACtC,4BAA2B,WAAW;AACtC,gC;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA,iDAAgD,yBAAyB,uBAAuB;AAChG;AACA,eAAc,eAAe;AAC7B,4EAA2E;AAC3E;AACA,eAAc,kCAAkC,YAAY,mBAAmB,KAAK,mBAAmB,gBAAgB;AACvH;;AAEA;AACA;AACA,eAAc,eAAe;AAC7B;AACA;AACA;;AAEA,0B;;;;;;AC7LA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;AChCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AC3JA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACjDA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AChBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AC3JA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAc,gBAAgB;AAC9B;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA,iBAAgB,YAAY;AAC5B;AACA;AACA;AACA,QAAO;AACP;AACA,qBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AC3DA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAiC,qBAAqB;AACtD,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,eAAc,cAAc;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,mBAAkB,MAAM;AACxB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wC;AACA;AACA;AACA,qBAAoB,MAAM;AAC1B;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,MAAM;AACxB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,mBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAgB,KAAK;AACrB;AACA;;AAEA;AACA;AACA,E;;;;;;AC7bA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,MAAM;AACrC;AACA,8BAA6B,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B,MAAM;AACrC;AACA;AACA;AACA,kCAAiC,KAAK;AACtC;AACA;AACA,6BAA4B,MAAM;AAClC;AACA;AACA,mBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,gBAAgB;AAC9B;AACA;AACA,iCAAgC,OAAO;AACvC;AACA,8BAA6B,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B,MAAM;AACrC;AACA;AACA,6BAA4B,MAAM;AAClC;AACA,mBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,gBAAgB;AAC9B;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA,mBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA8B,MAAM;AACpC;AACA,6BAA4B,MAAM;AAClC;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc,gBAAgB;AAC9B;AACA,iBAAgB,YAAY;AAC5B,qBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,2BAA2B;AACzC;AACA;AACA,eAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAc,gBAAgB;AAC9B;AACA,iBAAgB,YAAY;AAC5B;AACA,qBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,2BAA2B;AACzC;AACA;AACA,eAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA4B;AAC5B,6BAA4B,cAAc;AAC1C,6BAA4B,cAAc;AAC1C,6BAA4B,cAAc;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,eAAc,OAAO;AACrB;AACA,mBAAkB,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AC1MA,cAAa;;AAEb;;AAEA;AACA;AACA;;AAEA,eAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA,E;;;;;;AC7DA;;AAEA;;AAEA;;AAEA;AACA;AACA,eAAc,iBAAiB;AAC/B;AACA;AACA,eAAc,kBAAkB;AAChC,6BAA4B,MAAM;AAClC;AACA,mBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AClDA;AACA;;AAEA;AACA,oBAAmB,mBAAmB,eAAe,uBAAuB;AAC5E;AACA;AACA,YAAW,yBAAyB;AACpC,YAAW,2BAA2B;AACtC,cAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,YAAW,yBAAyB;AACpC,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB,cAAa,iBAAiB;AAC9B,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpHA;;AAEA;AACA,uBAAsB,uBAAu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AAc,sBAAsB,2BAA2B,wBAAwB,oNAAoN,qBAAqB,mBAAmB,oBAAoB,gCAAgC,mEAAmE,4CAA4C,sBAAsB,2BAA2B,+BAA+B,uCAAuC,EAAE,yBAAyB,kNAAkN,SAAS,EAAE;;;;;;;AClBrg9B;AACA;;AAEA;AACA,sCAAqC,uBAAuB;AAC5D;AACA;AACA;AACA,YAAW,iBAAiB;AAC5B,YAAW,iBAAiB;AAC5B,aAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,2BAA2B;AACtC,YAAW,OAAO;AAClB,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,+CAA+C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,uCAAuC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kCAAiC,gDAAgD;AACjF;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClKA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAsB,6BAA6B;AACnD;AACA,yBAAwB,6BAA6B;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;AACL,IAAG;AACH;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACZA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,8CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,oDAAmD,SAAS;;AAE5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,oDAAmD,SAAS;;AAE5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA,+CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;AACT;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA,6BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kEAAiE;AACjE;AACA;AACA;AACA;AACA;;AAEA,cAAa,mBAAmB;AAChC;AACA;AACA;;AAEA,cAAa,kBAAkB;AAC/B;;AAEA;AACA,MAAK;;AAEL,8BAA6B,aAAa,EAAE;;AAE5C;AACA;;AAEA,0BAAyB,kBAAkB,EAAE;;AAE7C;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAsB,YAAY;;AAElC;;AAEA;;AAEA,wBAAuB,aAAa;;AAEpC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,oDAAmD,SAAS;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAkC;AAClC;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA,oBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,4BAA2B,QAAQ;AACnC;AACA;AACA,MAAK;;AAEL;AACA;AACA,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;;AAEA,kBAAiB;;AAEjB,cAAa;AACb;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA,iDAAgD;;AAEhD;AACA;;AAEA;AACA,sBAAqB;AACrB;AACA;AACA,0CAAyC;AACzC;AACA;;AAEA;AACA;;AAEA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA0B,OAAO;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAgC,wBAAwB;AACxD,iCAAgC,wBAAwB;;AAExD,yBAAwB,8CAA8C;AACtE,yBAAwB,8CAA8C;;AAEtE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;ACjjBA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzDA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,gCAAgC;AACnD,sBAAqB,gCAAgC;AACrD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA,sCAAqC,eAAe;AACpD,sCAAqC,eAAe;;AAEpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAmB,mBAAmB;AACtC,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAwC,iBAAiB;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA,oBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,yBAAyB;AAC5C;AACA,sBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,iCAAgC;AAChC;;AAEA;;AAEA,4CAA2C;;AAE3C;;AAEA;AACA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,+BAA8B;;AAE9B;AACA;;AAEA;AACA;AACA;AACA,wEAAuE;AACvE;;AAEA,6DAA4D,SAAS;;AAErE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kFAAiF;AACjF;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;AACrC;AACA;AACA;AACA,UAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,OAAO;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,YAAY;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAoD;;AAEpD;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;ACvZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,MAAM;AACnB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,QAAO;AACP,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,MAAM;AACnB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,QAAO;AACP,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,MAAM;AACnB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA,cAAa,EAAE;AACf,cAAa,MAAM;AACnB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+BAA8B;AAC9B;AACA,oDAAmD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH,uBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,0BAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA,0BAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAgC,oBAAoB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,wBAAuB,SAAS;AAChC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA,YAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACzkBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACvLtC;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,2BAA2B;AACtC,YAAW,yBAAyB;AACpC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA,iCAAgC,gBAAgB;AAChD,iCAAgC,gBAAgB;AAChD,kCAAiC,gBAAgB;AACjD,kCAAiC,gBAAgB;AACjD,kCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA4C,2DAA2D;AACvG;AACA;AACA,yBAAwB,mDAAmD;AAC3E;AACA;AACA,UAAS;;AAET;AACA,MAAK;;AAEL;AACA;;;;;;;AClEA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,4BAA4B;AACvC,cAAa,4BAA4B;AACzC;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;;;;;;ACnCA;;AAEA;AACA;;AAEA;AACA,aAAY,iBAAiB,KAAK,cAAc;AAChD;AACA;AACA,YAAW,gGAAgG;AAC3G,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA,cAAa,gGAAgG;AAC7G;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB,MAAK;AACL;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,qBAAoB;AACpB,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;;;;;ACpLA;AACA;AACA;AACA;AACA;;AAEA,eAAc;;AAEd;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAwC,SAAS;AACjD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B,UAAU;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yDAAmE,iBAAiB,EAAE;AACtF;AACA;AACA;AACA,EAAC;AACD;;AAEA,EAAC;;;;;;;AC1HD;AACA;;AAEA;AACA,aAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,oBAAoB;AAC/B,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAoB;AACpB,UAAS;AACT;AACA;AACA,MAAK;;AAEL,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAAyG;AACzG;AACA;AACA;AACA,kHAAiH;AACjH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACrIA;;AAEA;AACA,oBAAmB,mBAAmB,eAAe,uBAAuB;AAC5E;AACA;AACA,YAAW,yBAAyB;AACpC,YAAW,2BAA2B;AACtC,YAAW,OAAO,gDAAgD,QAAQ;AAC1E,YAAW,OAAO;AAClB,cAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,UAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,UAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;;;;;;;ACvDA;AACA;;AAEA;AACA,aAAY,wBAAwB,uDAAuD,uBAAuB;AAClH;AACA;AACA,YAAW,kBAAkB;AAC7B,YAAW,OAAO;AAClB,cAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjCA;AACA;;AAEA;AACA,4DAA2D,cAAc;AACzE;AACA;AACA,YAAW,4BAA4B;AACvC,aAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzDA;;AAEA;AACA,4CAA2C,sBAAsB;AACjE;AACA;AACA,YAAW,cAAc;AACzB,aAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;;AAEA;AACA,aAAY,YAAY,4FAA4F;AACpH;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,WAAW;AAC9B;AACA;;AAEA;;AAEA;AACA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAY,YAAY,+GAA+G;AACvI;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC1DA;AACA;AACA;;AAEA;AACA,eAAc,mBAAmB;AACjC;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,eAAe;AAC1B,cAAa,eAAe;AAC5B;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC/CA;AACA;AACA;;AAEA;AACA,eAAc,mBAAmB;AACjC;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,eAAe;AAC1B,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1EA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,4BAA4B;AACvC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,gFAAgF;AAC5F;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;;;;;AC1CA;AACA;;AAEA;AACA,aAAY,cAAc,KAAK,wBAAwB;AACvD;AACA;AACA,YAAW,4BAA4B;AACvC,aAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,0BAA0B;AACrC,cAAa,eAAe;AAC5B;AACA;AACA;AACA,sBAAqB;AACroBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvLA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,4BAA4B;AACvC,cAAa,eAAe;AAC5B;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;;;;;;AC7CA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI,mBAAmB;AACvB;AACA;AACA,YAAW,4BAA4B;AACvC,cAAa,yBAAyB;AACtC,aAAY,MAAM;AAClB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT,MAAK;AACL;AACA;AACA,UAAS;AACT;AACA;AACA;;;;;;;ACnDA;;AAEA;AACA,gBAAe,wBAAwB,KAAK,YAAY;AACxD,KAAI,iBAAiB,MAAM,cAAc;AACzC,UAAS,iBAAiB,GAAG,sBAAsB;AACnD,KAAI,mBAAmB;AACvB;AACA;AACA,YAAW,8CAA8C;AACzD,aAAY,6DAA6D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,gCAAgC;AACrD,2BAA0B,gCAAgC;AAC1D,wBAAuB;AACvB;;AAEA;AACA;AACA;AACA,MAAK,IAAI;;AAET;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;;;;;;ACxFA;AACA;;;AAGA;AACA,kBAAiB,uBAAuB,SAAS,iCAAiC;AAClF;AACA;AACA;AACA,YAAW,iBAAiB;AAC5B,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc;;AAEd;AACA;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAkB,yCAAyC;AAC3D;;AAEA,oBAAmB,iBAAiB;AACpC,wBAAuB,oBAAoB;AAC3C,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC1EA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,2EAA0E;AAC1E;AACA;AACA;;AAEA,0BAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,SAAS;AAChC,MAAK;AACL,4BAA2B,YAAY;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0CAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAAyC;;AAEzC,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,0CAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAe,kBAAkB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA,kCAAiC,+BAA+B;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mDAAkD;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB,yCAAyC;AAC3D;;AAEA,oBAAmB,iBAAiB;AACpC,wBAAuB,oBAAoB;AAC3C,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzoBA;AACA;;AAEA;AACA,eAAc,uBAAuB,0EAA0E;AAC/G;AACA;AACA,YAAW,iBAAiB;AAC5B,YAAW,iBAAiB;AAC5B,cAAa,oBAAoB,uEAAuE,YAAY,MAAM,iBAAiB,yCAAyC,iBAAiB,OAAO,sBAAsB,oCAAoC,cAAc,KAAK,mBAAmB;AAC5S;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;;;;;;;ACzDA;;AAEA;AACA,uBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,yBAAyB;AACpC,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxEA;;AAEA;AACA,sBAAqB,cAAc,kBAAkB,mBAAmB,MAAM,uBAAuB;AACrG;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,cAAc;AACzB,gCAA+B,YAAY;AAC3C,WAAU,cAAc;AACxB,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB;AACA;AACA,cAAa,kBAAkB;AAC/B;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClDA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAe,WAAW;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B;AACA;AACA;;AAEA;AACA;AACA,qDAAoD;;AAEpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA,kCAAiC,2CAA2C;AAC5E;;AAEA,iBAAgB,4BAA4B;AAC5C,iBAAgB,oBAAoB;AACpC,iBAAgB,oBAAoB;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtGA;;AAEA;AACA,aAAY,4BAA4B,GAAG,uCAAuC,GAAG,iCAAiC,MAAM,sBAAsB,cAAc,mBAAmB;AACnL;AACA;AACA,YAAW,yDAAyD;AACpE,cAAa,yBAAyB;AACtC;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,4BAA2B,yBAAyB;AACpD,gCAA+B,yBAAyB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;;;;;AC3HA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC,YAAY;AAC9C;AACA,eAAc,cAAc;AAC5B,eAAc,iBAAiB;AAC/B,eAAc,YAAY;AAC1B;AACA,YAAW,4BAA4B;AACvC,cAAa,QAAQ;AACroBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnJA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,+BAA+B;AAC1C,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI,MAAM;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,kBAAkB;AACrC,0CAAyC;AACzC;AACA;AACA;AACA,cAAa,mCAAmC;AAChD;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;ACxFA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;;AAEA;AACA,aAAY,sBAAsB,gBAAgB,kBAAkB;AACpE;AACA;AACA,YAAW,oBAAoB;AAC/B,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAY,iBAAiB,KAAK,cAAc;AAChD;AACA;AACA,YAAW,sEAAsE;AACjF,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,YAAW,+BAA+B;AAC1C,YAAW,SAAS;AACpB,cAAa;AACb;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,YAAW,+BAA+B;AAC1C,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,cAAc,OAAO,wBAAwB;AAC9D;AACA;AACA,YAAW,QAAQ,oBAAoB,cAAc,sBAAsB,cAAc;AACzF,cAAa,kBAAkB,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,oBAAoB;AAC/B,cAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,yBAAyB;AACpC,cAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,sBAAsB;AACjC,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC,cAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,wBAAwB;AACnC,YAAW,EAAE;AACb,cAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;;;;;;ACrJA;AACA;;AAEA;AACA,aAAY,sBAAsB,WAAW,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,eAAe;AAC1B,YAAW,+BAA+B;AAC1C,aAAY,oBAAoB;AAChC;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,iEAAgE;AAChE,+CAA8C,kCAAkC;AAChF;AACA;AACA;AACA;AACA;;;;;;;AC/EA;AACA;AACA;AACA;;AAEA;AACA,aAAY,YAAY,QAAQ,iBAAiB;AACjD;AACA;AACA,YAAW,oBAAoB;AAC/B,YAAW,eAAe;AAC1B,YAAW,OAAO;AAClB,aAAY,eAAe;AAC3B;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;;;;;AC9JA;AACA;AACA;AACA;;AAEA;AACA,aAAY,sBAAsB,kDAAkD,YAAY;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,+BAA+B;AAC1C,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,oBAAoB;AACjC;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC7FA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAA+C,cAAc,KAAK,wBAAwB;AAC1F;AACA;AACA,YAAW,6CAA6C;AACxD,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAoD;AACpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB,kBAAkB;AAC1C;AACA,0BAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzEA;AACA;AACA;;AAEA;AACA,2EAA0E,uBAAuB;AACjG;AACA;AACA,YAAW,cAAc;AACzB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA,mEAAkE,wBAAwB;AAC1F,eAAc,cAAc;AAC5B;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,aAAa;AAChC,wBAAuB,cAAc;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,yBAAyB;AACpC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA,4BAA2B,mCAAmC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;;;;;ACnDA;AACA;AACA;AACA;AACA,YAAW,4BAA4B;AACvC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B,sCAAsC;;AAEpE;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC,wFAAwF;AAC5H;AACA;AACA;;AAEA;AACA;AACA,yCAAwC,gCAAgC;AACxE;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OA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,C;;;;;;ACvCP;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA,oBAAmB,iBAAiB;AACpC;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,yCAAwC,SAAS;AACjD;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,gEAA+D;AAC/D;AACA;;AAEA;;;;;;;;ACjPA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3DA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAU;AACV;AACA;;AAEA,MAAK;AACL;AACA;;AAEA,MAAK;AACL;AACA;;AAEA,MAAK;AACL;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;;ACzLD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC,mBAAmB;AAC3D;AACA;;AAEA;AACA;AACA,mCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;AACA,yCAAwC,4BAA4B;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,wDAAuD;AACvD,UAAS;AACT;AACA,UAAS;AACT,+EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,uBAAuB;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,wCAAuC,0BAA0B;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,gCAA+B,0BAA0B,eAAe;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;AACL;AACA;AACA,EAAC","file":"index.entry.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7e1ac008dfd467c7e92e","import Game from './game'\nimport {createFromJson} from './level'\nimport 'promise-polyfill'\nimport 'whatwg-fetch'\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const bgCanvas = document.getElementById(\"bg\")\n  const canvas = document.getElementById(\"voi\")\n  const targetBgCanvas = document.getElementById(\"bgTarget\")\n  const targetCanvas = document.getElementById(\"voiTarget\")\n  const editCanvas = document.getElementById(\"editor\")\n  fetch(\"levels.json\").then(response => response.json())\n  .then(levelString=>{\n    const levels = createFromJson(levelString)\n    new Game(canvas, bgCanvas, targetCanvas, targetBgCanvas, levels, editCanvas)\n  })\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Board from './board'\nimport Shape from './shape'\nimport Point from './point'\nimport Editor from './editor'\nimport {calculate, match} from './render'\n\nfunction getCorners(shapes) {\n  let leftTopX = 1000, leftTopY = 1000, rightBottomX = 0, rightBottomY = 0\n  shapes.forEach(shape => {\n    shape.points.forEach(op => {\n      const p = op.add(shape.origin)\n      leftTopX = Math.min(p.x, leftTopX)\n      leftTopY = Math.min(p.y, leftTopY)\n      rightBottomX = Math.max(p.x, rightBottomX)\n      rightBottomY = Math.max(p.y, rightBottomY)\n    })\n  })\n  return [new Point(leftTopX, leftTopY), new Point(rightBottomX, rightBottomY)]\n}\n\nfunction getMatric(shapes) {\n  const corners = getCorners(shapes)\n  let i = 0,j = 0\n  let matric = []\n  let blackCnt = 0\n  let leftTopX = 1000, leftTopY = 1000, rightBottomX = 0, rightBottomY = 0\n  for (let fj = corners[0].y; fj <= corners[1].y; fj += 0.1) {\n    matric[i] = []\n    j = 0\n    for (let fi = corners[0].x; fi <= corners[1].x;fi += 0.1) {\n      let c = 0\n      shapes.forEach(shape=>{\n        if (shape.containsPoint(new Point(fi,fj))) {\n          c += 1\n        }\n      })\n      const isBlack = c % 2\n      matric[i][j] = isBlack\n      blackCnt += isBlack\n      if (isBlack) {\n        leftTopX = Math.min(j, leftTopX)\n        leftTopY = Math.min(i, leftTopY)\n        rightBottomX = Math.max(j, rightBottomX)\n        rightBottomY = Math.max(i, rightBottomY)\n      }\n      j++\n    }\n    i++\n  }\n  return {\n    data:matric,\n    blackCnt:blackCnt,\n    corners:[new Point(leftTopX, leftTopY), new Point(rightBottomX, rightBottomY)]\n  }\n}\n\nclass Game {\n  constructor(canvas, bgCanvas, targetCanvas, targetBgCanvas,levels,editCanvas) {\n    this.workBoard = new Board(canvas, bgCanvas,20,20,20)\n    this.workBoard.isMatching = this.isMatching.bind(this)\n    this.editor = new Editor(editCanvas)\n    this.editor.addShape = this.addShape.bind(this)\n    this.editor.hide()\n    this.isEditing = false\n    this.targetBoard = new Board(targetCanvas, targetBgCanvas,20,20,15, true)\n    this.levels = levels\n    this.currentLevel = 0\n    this.loadLevel()\n\n    this.editBtn = document.getElementById(\"edit\")\n    this.editBtn.addEventListener(\"click\",e=>{\n      console.log(\"eeee\")\n      if (this.isEditing) {\n        this.stopEdit()\n      } else {\n        this.edit()\n      }\n    })\n    this.clearBtn = document.getElementById(\"clear\")\n    this.clearBtn.style.display = \"none\"\n    this.clearBtn.addEventListener(\"click\",e=>{\n      this.targetBoard.loadShapes([])\n      this.workBoard.loadShapes([])\n    })\n    this.addBtn = document.getElementById(\"add\")\n    this.addBtn.addEventListener(\"click\", e=>{\n      this.levels.push({\n        initShapes:[],\n        targetShapes:[]\n      })\n      this.currentLevel = this.levels.length - 1\n      this.loadLevel()\n      this.edit()\n    })\n  }\n  stopEdit() {\n    this.isEditing = false\n    this.editor.hide()\n    this.editBtn.textContent = \"Edit\"\n    this.clearBtn.style.display = \"none\"\n    this.targetBoard.invalid = true\n    this.targetMatric = getMatric(this.targetBoard.shapes)\n    this.levels[this.currentLevel] = {\n      initShapes:this.workBoard.shapes,\n      targetShapes:this.targetBoard.shapes\n    }\n    localStorage.setItem(\"LEVELS\", JSON.stringify(this.levels))\n  }\n  edit() {\n    this.isEditing = true\n    this.editor.show()\n    this.editBtn.textContent = \"Done\"\n    this.clearBtn.style.display = \"inline\"\n    this.targetBoard.invalid = false\n  }\n  loadLevel() {\n    const level = this.levels[this.currentLevel]\n    this.workBoard.loadShapes(level.initShapes)\n    this.targetBoard.loadShapes(level.targetShapes)\n    this.targetMatric = getMatric(level.targetShapes)\n    console.log(this.targetMatric)\n  }\n  addShape(shape) {\n    this.workBoard.addShape(new Shape(shape.points,shape.origin))\n    this.targetBoard.addShape(new Shape(shape.points, shape.origin))\n  }\n  isMatching() {\n    const f1 = calculate(this.targetBoard.shapes)\n    const f2 = calculate(this.workBoard.shapes)\n    if (match(f1,f2)) {\n      console.log(\"Match!\")\n      if (this.currentLevel < this.levels.length - 1) {\n        this.currentLevel += 1\n        this.loadLevel()\n      }\n    }\n    /*\n    const matric = getMatric(this.workBoard.shapes)\n    const targetMatric = this.targetMatric\n    const ratio = matric.blackCnt / targetMatric.blackCnt\n    console.log(matric)\n    if (ratio > 0.9 && ratio < 1.1) {\n      const lx = Math.min(matric.corners[1].x - matric.corners[0].x,\n        targetMatric.corners[1].x - targetMatric.corners[0].x)\n      const ly = Math.min(matric.corners[1].y - matric.corners[0].y,\n        targetMatric.corners[1].y - targetMatric.corners[0].y)\n      let cnt = 0\n      for (let dx = 0; dx < lx;++dx) {\n        for (let dy = 0; dy < ly;++dy) {\n          if (matric.data[dy + matric.corners[0].y][dx + matric.corners[0].x] !==\n            targetMatric.data[dy + targetMatric.corners[0].y][dx + targetMatric.corners[0].x]) {\n            cnt++\n          }\n        }\n      }\n      if (cnt / targetMatric.blackCnt < 0.1) {\n        console.log(\"Match! \"+cnt+\"/\"+targetMatric.blackCnt)\n        if (this.currentLevel < this.levels.length - 1) {\n          this.currentLevel += 1\n          this.loadLevel()\n        }\n      } else {\n        console.log(\"unMatch \"+cnt+\"/\"+targetMatric.blackCnt)\n      }\n    }\n    */\n  }\n}\n\nexport default Game\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","import Point from './point'\nimport Shape from './shape'\nimport {render} from './render'\n\nclass Board {\n  constructor(canvas, bgCanvas, width, height, ratio, invalid) {\n    this.width = width || 40\n    this.height = height || 40\n    this.ratio = ratio || 10\n    this.canvas = canvas\n    this.bgCanvas = bgCanvas\n    this.drawBackground()\n    this.ctx = canvas.getContext(\"2d\")\n    this.ctx.globalCompositeOperation = \"xor\"\n\n    // Init states\n    this.shapes = []\n    this.isMouseDown = false\n    this.startPoint = null\n    this.currentShape = null\n    this.render()\n\n    canvas.addEventListener(\"mousedown\",this.mousedown.bind(this))\n    canvas.addEventListener(\"touchstart\",this.mousedown.bind(this))\n    canvas.addEventListener(\"mouseup\",this.mouseup.bind(this))\n    canvas.addEventListener(\"touchend\",this.mouseup.bind(this))\n    canvas.addEventListener(\"mousemove\",this.mousemove.bind(this))\n    canvas.addEventListener(\"touchmove\",this.mousemove.bind(this))\n    this.invalid = invalid\n  }\n\n  loadShapes(shapes) {\n    this.shapes = shapes.map(s=>new Shape(s.points, s.origin))\n    this.isMouseDown = false\n    this.startPoint = null\n    this.currentShape = null\n    this.render()\n  }\n\n  addShape(shape) {\n    this.shapes.push(new Shape(shape.points, shape.origin))\n    this.isMouseDown = false\n    this.startPoint = null\n    this.currentShape = null\n    this.render()\n  }\n\n  render() {\n    const ctx = this.ctx\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    ctx.fillStyle = \"#000000\"\n    ctx.save()\n    ctx.scale(this.ratio, this.ratio)\n    if (this.isMouseDown) {\n      this.shapes.forEach(function (shape) {\n        if (shape === this.currentShape) {\n          ctx.save()\n          shape.draw(ctx)\n          ctx.restore()\n        } else {\n          shape.draw(ctx)\n        }\n      }, this)\n    } else {\n      render(this.shapes, this.ctx)\n    }\n    ctx.restore()\n  }\n\n  mousedown(e) {\n    e.preventDefault()\n    if (this.invalid) {\n      return\n    }\n    const touchPoint = this.getPointFromMouseEvent(e)\n    this.currentShape = null\n    for (let i = 0; i < this.shapes.length; ++i) {\n      if (this.shapes[i].containsPoint(touchPoint)) {\n        // Move the target shape to the top.\n        const tmp = this.shapes[0]\n        this.shapes[0] = this.shapes[i]\n        this.shapes[i] = tmp\n        this.currentShape = this.shapes[0]\n        this.startPoint = this.currentShape.origin.minus(touchPoint)\n        break\n      }\n    }\n    this.isMouseDown = true\n  }\n\n  mouseup(e) {\n    e.preventDefault()\n    if (this.invalid) {\n      return\n    }\n    if (this.isMouseDown && this.currentShape) {\n      this.isMouseDown = false\n      this.currentShape.origin =\n        new Point(Math.round(this.currentShape.origin.x), Math.round(this.currentShape.origin.y))\n      this.render()\n      this.isMatching && this.isMatching()\n    }\n    this.isMouseDown = false\n    this.currentShape = null\n  }\n\n  mousemove(e) {\n    e.preventDefault()\n    if (this.invalid) {\n      return\n    }\n    if (this.isMouseDown && this.currentShape) {\n      const nowPoint = this.getPointFromMouseEvent(e)\n      this.currentShape.origin = this.startPoint.add(nowPoint)\n      this.render()\n    }\n  }\n\n  getPointFromMouseEvent(e) {\n    if (e.touches) {\n      const rect = this.canvas.getBoundingClientRect()\n      return new Point((e.touches[0].clientX - rect.left) / this.ratio\n      ,(e.touches[0].clientY - rect.top) / this.ratio)\n    }\n    return new Point(e.offsetX / this.ratio, e.offsetY / this.ratio)\n  }\n  drawBackground() {\n    const bgCtx = this.bgCanvas.getContext(\"2d\")\n    bgCtx.fillStyle = \"#ff0000\"\n    for (let i = 0; i <= this.width; i++) {\n      for (let j = 0; j <= this.height; j++) {\n        bgCtx.fillRect(i * this.ratio,j * this.ratio,1,1)\n      }\n    }\n  }\n}\n\nexport default Board\n\n\n// WEBPACK FOOTER //\n// ./src/board.js","function Point(x,y) {\n  this.x = x\n  this.y = y\n}\nPoint.prototype.add = function (p) {\n  return new Point(this.x + p.x, this.y + p.y)\n}\nPoint.prototype.minus = function (p) {\n  return new Point(this.x - p.x, this.y - p.y)\n}\nPoint.prototype.min = function (p) {\n  return new Point(Math.min(this.x, p.x), Math.min(this.y, p.y))\n}\nPoint.prototype.max = function (p) {\n  return new Point(Math.max(this.x, p.x), Math.max(this.y, p.y))\n}\nPoint.prototype.equals = function (p) {\n  return this.x === p.x && this.y === p.y\n}\nPoint.crossProduct = function (p1,p2,p3) {\n  return (p2.x - p1.x) * (p3.y - p1.y) - (p2.y - p1.y) * (p3.x - p1.x)\n}\nPoint.ZERO = new Point(0,0)\n\nexport default Point\n\n\n// WEBPACK FOOTER //\n// ./src/point.js","import Point from './point'\nfunction Shape(points, origin) {\n  this.points = points\n  if (origin) {\n    this.origin = origin\n  } else {\n    this.origin = Point.ZERO\n  }\n}\nShape.prototype.getDrawPoint = function (index) {\n  return this.points[index].add(this.origin)\n}\nShape.prototype.draw = function (ctx) {\n  ctx.beginPath()\n  const startPoint = this.getDrawPoint(0)\n  ctx.moveTo(startPoint.x, startPoint.y)\n  for (let i = 1;i < this.points.length;++i) {\n    const p = this.getDrawPoint(i)\n    ctx.lineTo(p.x, p.y)\n  }\n  ctx.fill()\n}\nShape.prototype.containsPoint = function (p) {\n  const originPoint = p.minus(this.origin)\n  let pFlag = true\n  let nFlag = true\n  const ps = this.points.concat([this.points[0]])\n  for (let i = 0; i < ps.length - 1; ++i) {\n    const v = Point.crossProduct(ps[i],ps[i + 1],originPoint)\n    if (v > 0) {\n      pFlag = false\n    } else if (v < 0) {\n      nFlag = false\n    }\n  }\n  return pFlag || nFlag\n}\n\nexport function makeSquare(size, origin, type) {\n  const _origin = origin || Point.ZERO\n  if (type === 1) {\n    return new Shape([\n      new Point(0,0),\n      new Point(size,size),\n      new Point(0,2 * size),\n      new Point(-size,size),\n    ], _origin)\n  }\n  return new Shape([\n    new Point(0,0),\n    new Point(0,size),\n    new Point(size,size),\n    new Point(size,0),\n  ], _origin)\n}\n\nexport default Shape\n\n\n// WEBPACK FOOTER //\n// ./src/shape.js","import * as turf from '@turf/turf'\nconsole.log(\"wgg\")\nconsole.log(turf)\n\nfunction toTurfPolygon(shape) {\n  const points = shape.points.map(p=>\n    [p.x + shape.origin.x,p.y + shape.origin.y])\n    .concat([[shape.points[0].x + shape.origin.x,shape.points[0].y + shape.origin.y]])\n  return turf.polygon([ points ])\n}\n\nfunction drawPoints(pointsArray, ctx) {\n  pointsArray.forEach(points=>{\n    ctx.beginPath()\n    const startPoint = points[0]\n    ctx.moveTo(startPoint[0], startPoint[1])\n    for (let i = 1;i < points.length;++i) {\n      ctx.lineTo(points[i][0], points[i][1])\n    }\n    ctx.fill()\n  })\n}\n\nexport function calculate(shapes) {\n  if (shapes.length < 1) {\n    return null\n  }\n  const polygons = shapes.map(s=>toTurfPolygon(s))\n  let result = [polygons[0]]\n  let tmpResult = []\n  for (let i = 1; i < polygons.length; ++i) {\n    let leftOver = polygons[i]\n    result.forEach(old=>{\n      if (leftOver) {\n        const d = turf.difference(old, leftOver)\n        leftOver = turf.difference(leftOver, old)\n        if (d) {\n          tmpResult.push(d)\n        }\n      } else {\n        tmpResult.push(old)\n      }\n    })\n    if (leftOver) {\n      tmpResult.push(leftOver)\n    }\n    result = tmpResult\n    tmpResult = []\n  }\n  console.log(polygons)\n  console.log(\"result\")\n  console.log(result)\n  const fc = turf.featureCollection(result)\n  // unkinkPolygon only in new version\n  // const combinedResult = turf.combine(turf.unkinkPolygon(fc))\n  const combinedResult = turf.combine(fc)\n  console.log(combinedResult)\n  if (combinedResult.features.length > 1) {\n    alert(\"combined error\")\n  }\n  if (combinedResult.features.length === 0) {\n    return null\n  }\n  const r = combinedResult.features[0]\n  if (r.geometry.type === \"MultiPolygon\") {\n    // union all the polygons\n    const pl = r.geometry.coordinates.map(points=>turf.polygon(points))\n    return turf.union.apply(null, pl)\n  }\n}\n\nexport function render(shapes,ctx) {\n  const r = calculate(shapes)\n  console.log(\"r\",r)\n  if (r) {\n    var tmp = turf.union(r)\n    console.log(\"tmp\",tmp)\n    if (r.geometry.type === \"MultiPolygon\") {\n      console.log(\"draw\")\n      r.geometry.coordinates.forEach(points=>drawPoints(points, ctx))\n    } else if (r.geometry.type === \"Polygon\") {\n      drawPoints(r.geometry.coordinates,ctx)\n    }\n  }\n}\n\nfunction translate(f,x,y) {\n  if (f.geometry.type === \"MultiPolygon\") {\n    f.geometry.coordinates.forEach(points=> {\n      points[0].forEach(p=>{\n        p[0] += x\n        p[1] += y\n      })\n    })\n  } else if (f.geometry.type === \"Polygon\") {\n    f.geometry.coordinates[0].forEach(p=>{\n      p[0] += x\n      p[1] += y\n    })\n  }\n}\n\nexport function match(f1, f2) {\n  const bbox1 = turf.bbox(f1)\n  const bbox2 = turf.bbox(f2)\n  console.log(f1)\n  console.log(f2)\n  console.log(bbox1)\n  console.log(bbox2)\n  if (bbox1[2] - bbox1[0] !== bbox2[2] - bbox2[0]\n    || bbox1[3] - bbox1[1] !== bbox2[3] - bbox2[1]) {\n    return false\n  }\n  translate(f1, -bbox1[0], -bbox1[1])\n  translate(f2, -bbox2[0], -bbox2[1])\n  console.log(f1)\n  console.log(f2)\n  console.log(turf.area(f2))\n  const d1 = turf.difference(f1, f2)\n  const d2 = turf.difference(f2, f1)\n  console.log(d1)\n  console.log(d2)\n  return (d1 == null || turf.area(d1) < 100) && (d2 == null || turf.area(d2) < 100)\n}\n\n\n// WEBPACK FOOTER //\n// ./src/render.js","/*eslint global-require: 0*/\n\n/**\n * Turf is a modular geospatial analysis engine written in JavaScript. It performs geospatial\n * processing tasks with GeoJSON data and can be run on a server or in a browser.\n *\n * @module turf\n * @summary Geospatial analysis for JavaScript\n */\nvar helpers = require('@turf/helpers');\nvar invariant = require('@turf/invariant');\n\nvar turf = {\n    isolines: require('@turf/isolines'),\n    convex: require('@turf/convex'),\n    within: require('@turf/within'),\n    concave: require('@turf/concave'),\n    difference: require('@turf/difference'),\n    dissolve: require('@turf/dissolve'),\n    collect: require('@turf/collect'),\n    flip: require('@turf/flip'),\n    simplify: require('@turf/simplify'),\n    bezier: require('@turf/bezier'),\n    tag: require('@turf/tag'),\n    sample: require('@turf/sample'),\n    envelope: require('@turf/envelope'),\n    square: require('@turf/square'),\n    circle: require('@turf/circle'),\n    midpoint: require('@turf/midpoint'),\n    buffer: require('@turf/buffer'),\n    center: require('@turf/center'),\n    centerOfMass: require('@turf/center-of-mass'),\n    centroid: require('@turf/centroid'),\n    combine: require('@turf/combine'),\n    distance: require('@turf/distance'),\n    explode: require('@turf/explode'),\n    bbox: require('@turf/bbox'),\n    tesselate: require('@turf/tesselate'),\n    bboxPolygon: require('@turf/bbox-polygon'),\n    inside: require('@turf/inside'),\n    intersect: require('@turf/intersect'),\n    nearest: require('@turf/nearest'),\n    planepoint: require('@turf/planepoint'),\n    random: require('@turf/random'),\n    tin: require('@turf/tin'),\n    union: require('@turf/union'),\n    bearing: require('@turf/bearing'),\n    destination: require('@turf/destination'),\n    kinks: require('@turf/kinks'),\n    pointOnSurface: require('@turf/point-on-surface'),\n    area: require('@turf/area'),\n    along: require('@turf/along'),\n    lineDistance: require('@turf/line-distance'),\n    lineSlice: require('@turf/line-slice'),\n    lineSliceAlong: require('@turf/line-slice-along'),\n    pointOnLine: require('@turf/point-on-line'),\n    pointGrid: require('@turf/point-grid'),\n    squareGrid: require('@turf/square-grid'),\n    triangleGrid: require('@turf/triangle-grid'),\n    hexGrid: require('@turf/hex-grid'),\n    idw: require('@turf/idw'),\n    truncate: require('@turf/truncate'),\n    point: helpers.point,\n    polygon: helpers.polygon,\n    lineString: helpers.lineString,\n    multiPoint: helpers.multiPoint,\n    multiPolygon: helpers.multiPolygon,\n    multiLineString: helpers.multiLineString,\n    feature: helpers.feature,\n    featureCollection: helpers.featureCollection,\n    geometryCollection: helpers.geometryCollection,\n    getCoord: invariant.getCoord,\n    geojsonType: invariant.geojsonType,\n    featureOf: invariant.featureOf,\n    collectionOf: invariant.collectionOf\n};\n\nmodule.exports = turf;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = turf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/turf/index.js\n// module id = 6\n// module chunks = 0","/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} properties properties\n * @returns {FeatureCollection} a FeatureCollection of input features\n * @example\n * var geometry = {\n *      \"type\": \"Point\",\n *      \"coordinates\": [\n *        67.5,\n *        32.84267363195431\n *      ]\n *    }\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties) {\n    if (!geometry) throw new Error('No geometry passed');\n\n    return {\n        type: 'Feature',\n        properties: properties || {},\n        geometry: geometry\n    };\n}\nmodule.exports.feature = feature;\n\n/**\n * Takes coordinates and properties (optional) and returns a new {@link Point} feature.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object=} properties an Object that is used as the {@link Feature}'s\n * properties\n * @returns {Feature<Point>} a Point feature\n * @example\n * var pt1 = turf.point([-75.343, 39.984]);\n *\n * //=pt1\n */\nmodule.exports.point = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n    if (coordinates.length === undefined) throw new Error('Coordinates must be an array');\n    if (coordinates.length < 2) throw new Error('Coordinates must be at least 2 numbers long');\n    if (typeof coordinates[0] !== 'number' || typeof coordinates[1] !== 'number') throw new Error('Coordinates must numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Takes an array of LinearRings and optionally an {@link Object} with properties and returns a {@link Polygon} feature.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object=} properties a properties object\n * @returns {Feature<Polygon>} a Polygon feature\n * @throws {Error} throw an error if a LinearRing of the polygon has too few positions\n * or if a LinearRing of the Polygon does not have matching Positions at the\n * beginning & end.\n * @example\n * var polygon = turf.polygon([[\n *  [-2.275543, 53.464547],\n *  [-2.275543, 53.489271],\n *  [-2.215118, 53.489271],\n *  [-2.215118, 53.464547],\n *  [-2.275543, 53.464547]\n * ]], { name: 'poly1', population: 400});\n *\n * //=polygon\n */\nmodule.exports.polygon = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Creates a {@link LineString} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<LineString>} a LineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var linestring1 = turf.lineString([\n *   [-21.964416, 64.148203],\n *   [-21.956176, 64.141316],\n *   [-21.93901, 64.135924],\n *   [-21.927337, 64.136673]\n * ]);\n * var linestring2 = turf.lineString([\n *   [-21.929054, 64.127985],\n *   [-21.912918, 64.134726],\n *   [-21.916007, 64.141016],\n *   [-21.930084, 64.14446]\n * ], {name: 'line 1', distance: 145});\n *\n * //=linestring1\n *\n * //=linestring2\n */\nmodule.exports.lineString = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @returns {FeatureCollection} a FeatureCollection of input features\n * @example\n * var features = [\n *  turf.point([-75.343, 39.984], {name: 'Location A'}),\n *  turf.point([-75.833, 39.284], {name: 'Location B'}),\n *  turf.point([-75.534, 39.123], {name: 'Location C'})\n * ];\n *\n * var fc = turf.featureCollection(features);\n *\n * //=fc\n */\nmodule.exports.featureCollection = function (features) {\n    if (!features) throw new Error('No features passed');\n\n    return {\n        type: 'FeatureCollection',\n        features: features\n    };\n};\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n *\n */\nmodule.exports.multiLineString = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n *\n */\nmodule.exports.multiPoint = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties);\n};\n\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nmodule.exports.multiPolygon = function (coordinates, properties) {\n    if (!coordinates) throw new Error('No coordinates passed');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties);\n};\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<{Geometry}>} geometries an array of GeoJSON Geometries\n * @param {Object=} properties an Object of key-value pairs to add as properties\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nmodule.exports.geometryCollection = function (geometries, properties) {\n    if (!geometries) throw new Error('No geometries passed');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties);\n};\n\nvar factors = {\n    miles: 3960,\n    nauticalmiles: 3441.145,\n    degrees: 57.2957795,\n    radians: 1,\n    inches: 250905600,\n    yards: 6969600,\n    meters: 6373000,\n    metres: 6373000,\n    kilometers: 6373,\n    kilometres: 6373,\n    feet: 20908792.65\n};\n\n/*\n * Convert a distance measurement from radians to a more friendly unit.\n *\n * @name radiansToDistance\n * @param {number} distance in radians across the sphere\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nmodule.exports.radiansToDistance = function (radians, units) {\n    var factor = factors[units || 'kilometers'];\n    if (factor === undefined) throw new Error('Invalid unit');\n\n    return radians * factor;\n};\n\n/*\n * Convert a distance measurement from a real-world unit into radians\n *\n * @name distanceToRadians\n * @param {number} distance in real units\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nmodule.exports.distanceToRadians = function (distance, units) {\n    var factor = factors[units || 'kilometers'];\n    if (factor === undefined) throw new Error('Invalid unit');\n\n    return distance / factor;\n};\n\n/*\n * Convert a distance measurement from a real-world unit into degrees\n *\n * @name distanceToRadians\n * @param {number} distance in real units\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nmodule.exports.distanceToDegrees = function (distance, units) {\n    var factor = factors[units || 'kilometers'];\n    if (factor === undefined) throw new Error('Invalid unit');\n\n    return (distance / factor) * 57.2958;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/helpers/index.js\n// module id = 7\n// module chunks = 0","/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @param {Array<any>|Geometry|Feature<Point>} obj any value\n * @returns {Array<number>} coordinates\n */\nfunction getCoord(obj) {\n    if (!obj) throw new Error('No obj passed');\n\n    var coordinates = getCoords(obj);\n\n    // getCoord() must contain at least two numbers (Point)\n    if (coordinates.length > 1 &&\n        typeof coordinates[0] === 'number' &&\n        typeof coordinates[1] === 'number') {\n        return coordinates;\n    } else {\n        throw new Error('Coordinate is not a valid Point');\n    }\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array of numbers\n *\n * @param {Array<any>|Geometry|Feature<any>} obj any value\n * @returns {Array<any>} coordinates\n */\nfunction getCoords(obj) {\n    if (!obj) throw new Error('No obj passed');\n    var coordinates;\n\n    // Array of numbers\n    if (obj.length) {\n        coordinates = obj;\n\n    // Geometry Object\n    } else if (obj.coordinates) {\n        coordinates = obj.coordinates;\n\n    // Feature\n    } else if (obj.geometry && obj.geometry.coordinates) {\n        coordinates = obj.geometry.coordinates;\n    }\n    // Checks if coordinates contains a number\n    if (coordinates) {\n        containsNumber(coordinates);\n        return coordinates;\n    }\n    throw new Error('No valid coordinates');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @private\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        typeof coordinates[0] === 'number' &&\n        typeof coordinates[1] === 'number') {\n        return true;\n    }\n    if (coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @alias geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @alias featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @alias collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\nmodule.exports.geojsonType = geojsonType;\nmodule.exports.collectionOf = collectionOf;\nmodule.exports.featureOf = featureOf;\nmodule.exports.getCoord = getCoord;\nmodule.exports.getCoords = getCoords;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/invariant/index.js\n// module id = 8\n// module chunks = 0","//https://github.com/jasondavies/conrec.js\n//http://stackoverflow.com/questions/263305/drawing-a-topographical-map\nvar tin = require('@turf/tin');\nvar inside = require('@turf/inside');\nvar grid = require('@turf/point-grid');\nvar distance = require('@turf/distance');\nvar bbox = require('@turf/bbox');\nvar planepoint = require('@turf/planepoint');\nvar featurecollection = require('@turf/helpers').featureCollection;\nvar linestring = require('@turf/helpers').lineString;\nvar point = require('@turf/helpers').point;\nvar square = require('@turf/square');\nvar Conrec = require('./conrec');\n\n/**\n * Takes {@link Point|points} with z-values and an array of\n * value breaks and generates [isolines](http://en.wikipedia.org/wiki/Isoline).\n *\n * @name isolines\n * @param {FeatureCollection<Point>} points input points\n * @param {string} z the property name in `points` from which z-values will be pulled\n * @param {number} resolution resolution of the underlying grid\n * @param {Array<number>} breaks where to draw contours\n * @returns {FeatureCollection<LineString>} isolines\n * @example\n * // create random points with random\n * // z-values in their properties\n * var points = turf.random('point', 100, {\n *   bbox: [0, 30, 20, 50]\n * });\n * for (var i = 0; i < points.features.length; i++) {\n *   points.features[i].properties.z = Math.random() * 10;\n * }\n * var breaks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n * var isolined = turf.isolines(points, 'z', 15, breaks);\n * //=isolined\n */\nmodule.exports = function (points, z, resolution, breaks) {\n    var tinResult = tin(points, z);\n    var bboxBBox = bbox(points);\n    var squareBBox = square(bboxBBox);\n    var sizeCellGrid = distance(point([squareBBox[0], squareBBox[1]]), point([squareBBox[2], squareBBox[1]]), 'kilometers') / resolution;\n    var gridResult = grid(squareBBox, sizeCellGrid, 'kilometers');\n    var data = [];\n\n    for (var i = 0; i < gridResult.features.length; i++) {\n        var pt = gridResult.features[i];\n        for (var j = 0; j < tinResult.features.length; j++) {\n            var triangle = tinResult.features[j];\n            if (inside(pt, triangle)) {\n                pt.properties = {};\n                pt.properties[z] = planepoint(pt, triangle);\n            }\n        }\n    }\n\n    var depth = Math.sqrt(gridResult.features.length);\n    for (var x = 0; x < depth; x++) {\n        var xGroup = gridResult.features.slice(x * depth, (x + 1) * depth);\n        var xFlat = [];\n\n        for (var g = 0; g < xGroup.length; g++) {\n            if (xGroup[g].properties) {\n                xFlat.push(xGroup[g].properties[z]);\n            } else {\n                xFlat.push(0);\n            }\n        }\n        data.push(xFlat);\n    }\n    var interval = (squareBBox[2] - squareBBox[0]) / depth;\n    var xCoordinates = [];\n    var yCoordinates = [];\n    for (var d = 0; d < depth; d++) {\n        xCoordinates.push(d * interval + squareBBox[0]);\n        yCoordinates.push(d * interval + squareBBox[1]);\n    }\n\n    var c = new Conrec();\n    c.contour(data, 0, resolution, 0, resolution, xCoordinates, yCoordinates, breaks.length, breaks);\n    var contourList = c.contourList();\n\n    var fc = featurecollection([]);\n    contourList.forEach(function (c) {\n        if (c.length > 2) {\n            var polyCoordinates = [];\n            c.forEach(function (coord) {\n                polyCoordinates.push([coord.x, coord.y]);\n            });\n            var poly = linestring(polyCoordinates);\n            poly.properties = {};\n            poly.properties[z] = c.level;\n\n            fc.features.push(poly);\n        }\n    });\n\n    return fc;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/isolines/index.js\n// module id = 9\n// module chunks = 0","//http://en.wikipedia.org/wiki/Delaunay_triangulation\n//https://github.com/ironwallaby/delaunay\nvar polygon = require('@turf/helpers').polygon;\nvar featurecollection = require('@turf/helpers').featureCollection;\n\n/**\n * Takes a set of {@link Point|points} and the name of a z-value property and\n * creates a [Triangulated Irregular Network](http://en.wikipedia.org/wiki/Triangulated_irregular_network),\n * or a TIN for short, returned as a collection of Polygons. These are often used\n * for developing elevation contour maps or stepped heat visualizations.\n *\n * This triangulates the points, as well as adds properties called `a`, `b`,\n * and `c` representing the value of the given `propertyName` at each of\n * the points that represent the corners of the triangle.\n *\n * @name tin\n * @param {FeatureCollection<Point>} points input points\n * @param {String} [z] name of the property from which to pull z values\n * This is optional: if not given, then there will be no extra data added to the derived triangles.\n * @returns {FeatureCollection<Polygon>} TIN output\n * @example\n * // generate some random point data\n * var points = turf.random('points', 30, {\n *   bbox: [50, 30, 70, 50]\n * });\n * //=points\n * // add a random property to each point between 0 and 9\n * for (var i = 0; i < points.features.length; i++) {\n *   points.features[i].properties.z = ~~(Math.random() * 9);\n * }\n * var tin = turf.tin(points, 'z')\n * for (var i = 0; i < tin.features.length; i++) {\n *   var properties  = tin.features[i].properties;\n *   // roughly turn the properties of each\n *   // triangle into a fill color\n *   // so we can visualize the result\n *   properties.fill = '#' + properties.a +\n *     properties.b + properties.c;\n * }\n * //=tin\n */\nmodule.exports = function (points, z) {\n    //break down points\n    return featurecollection(triangulate(points.features.map(function (p) {\n        var point = {\n            x: p.geometry.coordinates[0],\n            y: p.geometry.coordinates[1]\n        };\n        if (z) point.z = p.properties[z];\n        return point;\n    })).map(function (triangle) {\n        return polygon([[\n        [triangle.a.x, triangle.a.y],\n        [triangle.b.x, triangle.b.y],\n        [triangle.c.x, triangle.c.y],\n        [triangle.a.x, triangle.a.y]\n        ]], {\n            a: triangle.a.z,\n            b: triangle.b.z,\n            c: triangle.c.z\n        });\n    }));\n};\n\nfunction Triangle(a, b, c) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n\n    var A = b.x - a.x,\n        B = b.y - a.y,\n        C = c.x - a.x,\n        D = c.y - a.y,\n        E = A * (a.x + b.x) + B * (a.y + b.y),\n        F = C * (a.x + c.x) + D * (a.y + c.y),\n        G = 2 * (A * (c.y - b.y) - B * (c.x - b.x)),\n        dx, dy;\n\n    // If the points of the triangle are collinear, then just find the\n    // extremes and use the midpoint as the center of the circumcircle.\n    this.x = (D * E - B * F) / G;\n    this.y = (A * F - C * E) / G;\n    dx = this.x - a.x;\n    dy = this.y - a.y;\n    this.r = dx * dx + dy * dy;\n}\n\nfunction byX(a, b) {\n    return b.x - a.x;\n}\n\nfunction dedup(edges) {\n    var j = edges.length,\n        a, b, i, m, n;\n\n    outer:\n  while (j) {\n      b = edges[--j];\n      a = edges[--j];\n      i = j;\n      while (i) {\n          n = edges[--i];\n          m = edges[--i];\n          if ((a === m && b === n) || (a === n && b === m)) {\n              edges.splice(j, 2);\n              edges.splice(i, 2);\n              j -= 2;\n              continue outer;\n          }\n      }\n  }\n}\n\nfunction triangulate(vertices) {\n    // Bail if there aren't enough vertices to form any triangles.\n    if (vertices.length < 3)\n        return [];\n\n    // Ensure the vertex array is in order of descending X coordinate\n    // (which is needed to ensure a subquadratic runtime), and then find\n    // the bounding box around the points.\n    vertices.sort(byX);\n\n    var i = vertices.length - 1,\n        xmin = vertices[i].x,\n        xmax = vertices[0].x,\n        ymin = vertices[i].y,\n        ymax = ymin,\n        epsilon = 1e-12;\n\n    var a,\n        b,\n        c,\n        A,\n        B,\n        G;\n\n    while (i--) {\n        if (vertices[i].y < ymin)\n            ymin = vertices[i].y;\n        if (vertices[i].y > ymax)\n            ymax = vertices[i].y;\n    }\n\n    //Find a supertriangle, which is a triangle that surrounds all the\n    //vertices. This is used like something of a sentinel value to remove\n    //cases in the main algorithm, and is removed before we return any\n    // results.\n\n    // Once found, put it in the \"open\" list. (The \"open\" list is for\n    // triangles who may still need to be considered; the \"closed\" list is\n    // for triangles which do not.)\n    var dx = xmax - xmin,\n        dy = ymax - ymin,\n        dmax = (dx > dy) ? dx : dy,\n        xmid = (xmax + xmin) * 0.5,\n        ymid = (ymax + ymin) * 0.5,\n        open = [\n            new Triangle({\n                x: xmid - 20 * dmax,\n                y: ymid - dmax,\n                __sentinel: true\n            }, {\n                x: xmid,\n                y: ymid + 20 * dmax,\n                __sentinel: true\n            }, {\n                x: xmid + 20 * dmax,\n                y: ymid - dmax,\n                __sentinel: true\n            }\n        )],\n        closed = [],\n        edges = [],\n        j;\n\n    // Incrementally add each vertex to the mesh.\n    i = vertices.length;\n    while (i--) {\n        // For each open triangle, check to see if the current point is\n        // inside it's circumcircle. If it is, remove the triangle and add\n        // it's edges to an edge list.\n        edges.length = 0;\n        j = open.length;\n        while (j--) {\n            // If this point is to the right of this triangle's circumcircle,\n            // then this triangle should never get checked again. Remove it\n            // from the open list, add it to the closed list, and skip.\n            dx = vertices[i].x - open[j].x;\n            if (dx > 0 && dx * dx > open[j].r) {\n                closed.push(open[j]);\n                open.splice(j, 1);\n                continue;\n            }\n\n            // If not, skip this triangle.\n            dy = vertices[i].y - open[j].y;\n            if (dx * dx + dy * dy > open[j].r)\n                continue;\n\n            // Remove the triangle and add it's edges to the edge list.\n            edges.push(\n        open[j].a, open[j].b,\n        open[j].b, open[j].c,\n        open[j].c, open[j].a\n      );\n            open.splice(j, 1);\n        }\n\n        // Remove any doubled edges.\n        dedup(edges);\n\n        // Add a new triangle for each edge.\n        j = edges.length;\n        while (j) {\n            b = edges[--j];\n            a = edges[--j];\n            c = vertices[i];\n            // Avoid adding colinear triangles (which have error-prone\n            // circumcircles)\n            A = b.x - a.x;\n            B = b.y - a.y;\n            G = 2 * (A * (c.y - b.y) - B * (c.x - b.x));\n            if (Math.abs(G) > epsilon) {\n                open.push(new Triangle(a, b, c));\n            }\n        }\n    }\n\n    // Copy any remaining open triangles to the closed list, and then\n    // remove any triangles that share a vertex with the supertriangle.\n    Array.prototype.push.apply(closed, open);\n\n    i = closed.length;\n    while (i--)\n        if (closed[i].a.__sentinel ||\n      closed[i].b.__sentinel ||\n      closed[i].c.__sentinel)\n            closed.splice(i, 1);\n\n    return closed;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/tin/index.js\n// module id = 10\n// module chunks = 0","var invariant = require('@turf/invariant');\n\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point resides inside the polygon. The polygon can\n * be convex or concave. The function accounts for holes.\n *\n * @name inside\n * @param {Feature<Point>} point input point\n * @param {Feature<(Polygon|MultiPolygon)>} polygon input polygon or multipolygon\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * var isInside = turf.inside(pt, poly);\n *\n * //=isInside\n */\nmodule.exports = function (point, polygon) {\n    var pt = invariant.getCoord(point);\n    var polys = polygon.geometry.coordinates;\n    // normalize to multipolygon\n    if (polygon.geometry.type === 'Polygon') polys = [polys];\n\n    for (var i = 0, insidePoly = false; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0])) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], true)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) insidePoly = true;\n        }\n    }\n    return insidePoly;\n};\n\n// pt is [x,y] and ring is [[x,y], [x,y],..]\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] && ring[0][1] === ring[ring.length - 1][1]) ring = ring.slice(0, ring.length - 1);\n\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0], yi = ring[i][1];\n        var xj = ring[j][0], yj = ring[j][1];\n        var onBoundary = (pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0) &&\n            ((xi - pt[0]) * (xj - pt[0]) <= 0) && ((yi - pt[1]) * (yj - pt[1]) <= 0);\n        if (onBoundary) return !ignoreBoundary;\n        var intersect = ((yi > pt[1]) !== (yj > pt[1])) &&\n        (pt[0] < (xj - xi) * (pt[1] - yi) / (yj - yi) + xi);\n        if (intersect) isInside = !isInside;\n    }\n    return isInside;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/inside/index.js\n// module id = 11\n// module chunks = 0","var point = require('@turf/helpers').point;\nvar featureCollection = require('@turf/helpers').featureCollection;\nvar distance = require('@turf/distance');\nvar turfBBox = require('@turf/bbox');\n\n/**\n * Creates a {@link Point} grid from a bounding box, {@link FeatureCollection} or {@link Feature}.\n *\n * @name pointGrid\n * @param {Array<number>|FeatureCollection|Feature<any>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSize the distance across each cell\n * @param {string} [units=kilometers] used in calculating cellSize, can be degrees, radians, miles, or kilometers\n * @returns {FeatureCollection<Point>} grid of points\n * @example\n * var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n * var cellSize = 3;\n * var units = 'miles';\n *\n * var grid = turf.pointGrid(extent, cellSize, units);\n *\n * //=grid\n */\nmodule.exports = function (bbox, cellSize, units) {\n    var results = [];\n\n    // validation\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) bbox = turfBBox(bbox); // Convert GeoJSON to bbox\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    var xFraction = cellSize / (distance(point([west, south]), point([east, south]), units));\n    var cellWidth = xFraction * (east - west);\n    var yFraction = cellSize / (distance(point([west, south]), point([west, north]), units));\n    var cellHeight = yFraction * (north - south);\n\n    var currentX = west;\n    while (currentX <= east) {\n        var currentY = south;\n        while (currentY <= north) {\n            results.push(point([currentX, currentY]));\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n\n    return featureCollection(results);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/point-grid/index.js\n// module id = 12\n// module chunks = 0","var getCoord = require('@turf/invariant').getCoord;\nvar radiansToDistance = require('@turf/helpers').radiansToDistance;\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians,\n * miles, or kilometers. This uses the\n * [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula)\n * to account for global curvature.\n *\n * @name distance\n * @param {Feature<Point>} from origin point\n * @param {Feature<Point>} to destination point\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.343, 39.984]\n *   }\n * };\n * var to = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.534, 39.123]\n *   }\n * };\n * var units = \"miles\";\n *\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [from, to]\n * };\n *\n * //=points\n *\n * var distance = turf.distance(from, to, units);\n *\n * //=distance\n */\nmodule.exports = function (from, to, units) {\n    var degrees2radians = Math.PI / 180;\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degrees2radians * (coordinates2[1] - coordinates1[1]);\n    var dLon = degrees2radians * (coordinates2[0] - coordinates1[0]);\n    var lat1 = degrees2radians * coordinates1[1];\n    var lat2 = degrees2radians * coordinates2[1];\n\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n          Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n\n    return radiansToDistance(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/distance/index.js\n// module id = 13\n// module chunks = 0","var each = require('@turf/meta').coordEach;\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {(Feature|FeatureCollection)} geojson input features\n * @returns {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @addToMap features, bboxPolygon\n * @example\n * var pt1 = turf.point([114.175329, 22.2524])\n * var pt2 = turf.point([114.170007, 22.267969])\n * var pt3 = turf.point([114.200649, 22.274641])\n * var pt4 = turf.point([114.200649, 22.274641])\n * var pt5 = turf.point([114.186744, 22.265745])\n * var features = turf.featureCollection([pt1, pt2, pt3, pt4, pt5])\n *\n * var bbox = turf.bbox(features);\n *\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //=bbox\n *\n * //=bboxPolygon\n */\nmodule.exports = function (geojson) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    each(geojson, function (coord) {\n        if (bbox[0] > coord[0]) bbox[0] = coord[0];\n        if (bbox[1] > coord[1]) bbox[1] = coord[1];\n        if (bbox[2] < coord[0]) bbox[2] = coord[0];\n        if (bbox[3] < coord[1]) bbox[3] = coord[1];\n    });\n    return bbox;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/bbox/index.js\n// module id = 14\n// module chunks = 0","/**\n * Callback for coordEach\n *\n * @private\n * @callback coordEachCallback\n * @param {[number, number]} currentCoords The current coordinates being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (currentCoords, currentIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include\n * the final coordinate of LinearRings that wraps the ring in its iteration.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.coordEach(features, function (currentCoords, currentIndex) {\n *   //=currentCoords\n *   //=currentIndex\n * });\n */\nfunction coordEach(layer, callback, excludeWrapCoord) {\n    var i, j, k, g, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        currentIndex = 0,\n        isGeometryCollection,\n        isFeatureCollection = layer.type === 'FeatureCollection',\n        isFeature = layer.type === 'Feature',\n        stop = isFeatureCollection ? layer.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? layer.features[i].geometry :\n        (isFeature ? layer.geometry : layer));\n        isGeometryCollection = geometryMaybeCollection.type === 'GeometryCollection';\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n            geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n            coords = geometry.coordinates;\n\n            wrapShrink = (excludeWrapCoord &&\n                (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon')) ?\n                1 : 0;\n\n            if (geometry.type === 'Point') {\n                callback(coords, currentIndex);\n                currentIndex++;\n            } else if (geometry.type === 'LineString' || geometry.type === 'MultiPoint') {\n                for (j = 0; j < coords.length; j++) {\n                    callback(coords[j], currentIndex);\n                    currentIndex++;\n                }\n            } else if (geometry.type === 'Polygon' || geometry.type === 'MultiLineString') {\n                for (j = 0; j < coords.length; j++)\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        callback(coords[j][k], currentIndex);\n                        currentIndex++;\n                    }\n            } else if (geometry.type === 'MultiPolygon') {\n                for (j = 0; j < coords.length; j++)\n                    for (k = 0; k < coords[j].length; k++)\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            callback(coords[j][k][l], currentIndex);\n                            currentIndex++;\n                        }\n            } else if (geometry.type === 'GeometryCollection') {\n                for (j = 0; j < geometry.geometries.length; j++)\n                    coordEach(geometry.geometries[j], callback, excludeWrapCoord);\n            } else {\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\nmodule.exports.coordEach = coordEach;\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @private\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {[number, number]} currentCoords The current coordinate being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoords, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include\n * the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.coordReduce(features, function (previousValue, currentCoords, currentIndex) {\n *   //=previousValue\n *   //=currentCoords\n *   //=currentIndex\n *   return currentCoords;\n * });\n */\nfunction coordReduce(layer, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(layer, function (currentCoords, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) {\n            previousValue = currentCoords;\n        } else {\n            previousValue = callback(previousValue, currentCoords, currentIndex);\n        }\n    }, excludeWrapCoord);\n    return previousValue;\n}\nmodule.exports.coordReduce = coordReduce;\n\n/**\n * Callback for propEach\n *\n * @private\n * @callback propEachCallback\n * @param {*} currentProperties The current properties being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, currentIndex)\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"foo\": \"bar\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"hello\": \"world\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.propEach(features, function (currentProperties, currentIndex) {\n *   //=currentProperties\n *   //=currentIndex\n * });\n */\nfunction propEach(layer, callback) {\n    var i;\n    switch (layer.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < layer.features.length; i++) {\n            callback(layer.features[i].properties, i);\n        }\n        break;\n    case 'Feature':\n        callback(layer.properties, 0);\n        break;\n    }\n}\nmodule.exports.propEach = propEach;\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @private\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current properties being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"foo\": \"bar\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"hello\": \"world\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.propReduce(features, function (previousValue, currentProperties, currentIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=currentIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(layer, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(layer, function (currentProperties, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) {\n            previousValue = currentProperties;\n        } else {\n            previousValue = callback(previousValue, currentProperties, currentIndex);\n        }\n    });\n    return previousValue;\n}\nmodule.exports.propReduce = propReduce;\n\n/**\n * Callback for featureEach\n *\n * @private\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current feature being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, currentIndex)\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.featureEach(features, function (currentFeature, currentIndex) {\n *   //=currentFeature\n *   //=currentIndex\n * });\n */\nfunction featureEach(layer, callback) {\n    if (layer.type === 'Feature') {\n        callback(layer, 0);\n    } else if (layer.type === 'FeatureCollection') {\n        for (var i = 0; i < layer.features.length; i++) {\n            callback(layer.features[i], i);\n        }\n    }\n}\nmodule.exports.featureEach = featureEach;\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @private\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"foo\": \"bar\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"hello\": \"world\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.featureReduce(features, function (previousValue, currentFeature, currentIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=currentIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(layer, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(layer, function (currentFeature, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) {\n            previousValue = currentFeature;\n        } else {\n            previousValue = callback(previousValue, currentFeature, currentIndex);\n        }\n    });\n    return previousValue;\n}\nmodule.exports.featureReduce = featureReduce;\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {Object} layer any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * var coords = turf.coordAll(features);\n * //=coords\n */\nfunction coordAll(layer) {\n    var coords = [];\n    coordEach(layer, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\nmodule.exports.coordAll = coordAll;\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, currentIndex)\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.geomEach(features, function (currentGeometry, currentIndex) {\n *   //=currentGeometry\n *   //=currentIndex\n * });\n */\nfunction geomEach(layer, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        currentIndex = 0,\n        isFeatureCollection = layer.type === 'FeatureCollection',\n        isFeature = layer.type === 'Feature',\n        stop = isFeatureCollection ? layer.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? layer.features[i].geometry :\n        (isFeature ? layer.geometry : layer));\n        isGeometryCollection = geometryMaybeCollection.type === 'GeometryCollection';\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n            geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            if (geometry.type === 'Point' ||\n                geometry.type === 'LineString' ||\n                geometry.type === 'MultiPoint' ||\n                geometry.type === 'Polygon' ||\n                geometry.type === 'MultiLineString' ||\n                geometry.type === 'MultiPolygon') {\n                callback(geometry, currentIndex);\n                currentIndex++;\n            } else if (geometry.type === 'GeometryCollection') {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    callback(geometry.geometries[j], currentIndex);\n                    currentIndex++;\n                }\n            } else {\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\nmodule.exports.geomEach = geomEach;\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @private\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentGeometry The current Feature being processed.\n * @param {number} currentIndex The index of the current element being processed in the\n * array.Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {Object} layer any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"foo\": \"bar\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [26, 37]\n *       }\n *     },\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\"hello\": \"world\"},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [36, 53]\n *       }\n *     }\n *   ]\n * };\n * turf.geomReduce(features, function (previousValue, currentGeometry, currentIndex) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=currentIndex\n *   return currentGeometry\n * });\n */\nfunction geomReduce(layer, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(layer, function (currentGeometry, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) {\n            previousValue = currentGeometry;\n        } else {\n            previousValue = callback(previousValue, currentGeometry, currentIndex);\n        }\n    });\n    return previousValue;\n}\nmodule.exports.geomReduce = geomReduce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/meta/index.js\n// module id = 15\n// module chunks = 0","/**\n * Takes a triangular plane as a {@link Polygon}\n * and a {@link Point} within that triangle and returns the z-value\n * at that point. The Polygon needs to have properties `a`, `b`, and `c`\n * that define the values at its three corners.\n *\n * @name planepoint\n * @param {Feature<Point>} point the Point for which a z-value will be calculated\n * @param {Feature<Polygon>} triangle a Polygon feature with three vertices\n * @returns {number} the z-value for `interpolatedPoint`\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.3221, 39.529]\n *   }\n * };\n * var point = turf.point([-75.3221, 39.529]);\n * // triangle is a polygon with \"a\", \"b\",\n * // and \"c\" values representing\n * // the values of the coordinates in order.\n * var triangle = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"a\": 11,\n *     \"b\": 122,\n *     \"c\": 44\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-75.1221, 39.57],\n *       [-75.58, 39.18],\n *       [-75.97, 39.86],\n *       [-75.1221, 39.57]\n *     ]]\n *   }\n * };\n *\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [triangle, point]\n * };\n *\n * var zValue = turf.planepoint(point, triangle);\n *\n * //=features\n *\n * //=zValue\n */\nmodule.exports = function (point, triangle) {\n    var x = point.geometry.coordinates[0],\n        y = point.geometry.coordinates[1],\n        x1 = triangle.geometry.coordinates[0][0][0],\n        y1 = triangle.geometry.coordinates[0][0][1],\n        z1 = triangle.properties.a,\n        x2 = triangle.geometry.coordinates[0][1][0],\n        y2 = triangle.geometry.coordinates[0][1][1],\n        z2 = triangle.properties.b,\n        x3 = triangle.geometry.coordinates[0][2][0],\n        y3 = triangle.geometry.coordinates[0][2][1],\n        z3 = triangle.properties.c;\n\n    var z = (z3 * (x - x1) * (y - y2) + z1 * (x - x2) * (y - y3) + z2 * (x - x3) * (y - y1) -\n      z2 * (x - x1) * (y - y3) - z3 * (x - x2) * (y - y1) - z1 * (x - x3) * (y - y2)) /\n      ((x - x1) * (y - y2) + (x - x2) * (y - y3) + (x - x3) * (y - y1) -\n       (x - x1) * (y - y3) - (x - x2) * (y - y1) - (x - x3) * (y - y2));\n\n    return z;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/planepoint/index.js\n// module id = 16\n// module chunks = 0","var distance = require('@turf/distance');\n\n/**\n * Takes a bounding box and calculates the minimum square bounding box that\n * would contain the input.\n *\n * @name square\n * @param {Array<number>} bbox extent in [west, south, east, north] order\n * @returns {Array<number>} a square surrounding `bbox`\n * @addToMap features\n * @example\n * var bbox = [-20,-20,-15,0];\n *\n * var squared = turf.square(bbox);\n *\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     turf.bboxPolygon(bbox),\n *     turf.bboxPolygon(squared)\n *   ]\n * };\n *\n * //=features\n */\nmodule.exports = function (bbox) {\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    var horizontalDistance = distance(bbox.slice(0, 2), [east, south]);\n    var verticalDistance = distance(bbox.slice(0, 2), [west, north]);\n    if (horizontalDistance >= verticalDistance) {\n        var verticalMidpoint = (south + north) / 2;\n        return [\n            west,\n            verticalMidpoint - ((east - west) / 2),\n            east,\n            verticalMidpoint + ((east - west) / 2)\n        ];\n    } else {\n        var horizontalMidpoint = (west + east) / 2;\n        return [\n            horizontalMidpoint - ((north - south) / 2),\n            south,\n            horizontalMidpoint + ((north - south) / 2),\n            north\n        ];\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/square/index.js\n// module id = 17\n// module chunks = 0","/* eslint-disable */\n\n/*\n * Copyright (c) 2010, Jason Davies.\n *\n * All rights reserved.  This code is based on Bradley White's Java version,\n * which is in turn based on Nicholas Yue's C++ version, which in turn is based\n * on Paul D. Bourke's original Fortran version.  See below for the respective\n * copyright notices.\n *\n * See http://local.wasp.uwa.edu.au/~pbourke/papers/conrec/ for the original\n * paper by Paul D. Bourke.\n *\n * The vector conversion code is based on http://apptree.net/conrec.htm by\n * Graham Cox.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the <organization> nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Copyright (c) 1996-1997 Nicholas Yue\n *\n * This software is copyrighted by Nicholas Yue. This code is based on Paul D.\n * Bourke's CONREC.F routine.\n *\n * The authors hereby grant permission to use, copy, and distribute this\n * software and its documentation for any purpose, provided that existing\n * copyright notices are retained in all copies and that this notice is\n * included verbatim in any distributions. Additionally, the authors grant\n * permission to modify this software and its documentation for any purpose,\n * provided that such modifications are not distributed without the explicit\n * consent of the authors and that existing copyright notices are retained in\n * all copies. Some of the algorithms implemented by this software are\n * patented, observe all applicable patent law.\n *\n * IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR\n * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT\n * OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES THEREOF,\n * EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE IS\n * PROVIDED ON AN \"AS IS\" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO\n * OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR\n * MODIFICATIONS.\n */\n\n\n  module.exports = Conrec;\n\n  var EPSILON = 1e-10;\n\n  function pointsEqual(a, b) {\n      var x = a.x - b.x, y = a.y - b.y;\n      return x * x + y * y < EPSILON;\n  }\n\n  function reverseList(list) {\n      var pp = list.head;\n\n      while (pp) {\n      // swap prev/next pointers\n          var temp = pp.next;\n          pp.next = pp.prev;\n          pp.prev = temp;\n\n      // continue through the list\n          pp = temp;\n      }\n\n    // swap head/tail pointers\n      var temp = list.head;\n      list.head = list.tail;\n      list.tail = temp;\n  }\n\n  function ContourBuilder(level) {\n      this.level = level;\n      this.s = null;\n      this.count = 0;\n  }\n  ContourBuilder.prototype.remove_seq = function (list) {\n    // if list is the first item, static ptr s is updated\n      if (list.prev) {\n          list.prev.next = list.next;\n      } else {\n          this.s = list.next;\n      }\n\n      if (list.next) {\n          list.next.prev = list.prev;\n      }\n      --this.count;\n  };\n  ContourBuilder.prototype.addSegment = function (a, b) {\n      var ss = this.s;\n      var ma = null;\n      var mb = null;\n      var prependA = false;\n      var prependB = false;\n\n      while (ss) {\n          if (ma == null) {\n        // no match for a yet\n              if (pointsEqual(a, ss.head.p)) {\n                  ma = ss;\n                  prependA = true;\n              } else if (pointsEqual(a, ss.tail.p)) {\n                  ma = ss;\n              }\n          }\n          if (mb == null) {\n        // no match for b yet\n              if (pointsEqual(b, ss.head.p)) {\n                  mb = ss;\n                  prependB = true;\n              } else if (pointsEqual(b, ss.tail.p)) {\n                  mb = ss;\n              }\n          }\n      // if we matched both no need to continue searching\n          if (mb != null && ma != null) {\n              break;\n          } else {\n              ss = ss.next;\n          }\n      }\n\n    // c is the case selector based on which of ma and/or mb are set\n      var c = ((ma != null) ? 1 : 0) | ((mb != null) ? 2 : 0);\n\n      switch (c) {\n      case 0:   // both unmatched, add as new sequence\n          var aa = {p: a, prev: null};\n          var bb = {p: b, next: null};\n          aa.next = bb;\n          bb.prev = aa;\n\n        // create sequence element and push onto head of main list. The order\n        // of items in this list is unimportant\n          ma = {head: aa, tail: bb, next: this.s, prev: null, closed: false};\n          if (this.s) {\n              this.s.prev = ma;\n          }\n          this.s = ma;\n\n          ++this.count;    // not essential - tracks number of unmerged sequences\n          break;\n\n      case 1:   // a matched, b did not - thus b extends sequence ma\n          var pp = {p: b};\n\n          if (prependA) {\n              pp.next = ma.head;\n              pp.prev = null;\n              ma.head.prev = pp;\n              ma.head = pp;\n          } else {\n              pp.next = null;\n              pp.prev = ma.tail;\n              ma.tail.next = pp;\n              ma.tail = pp;\n          }\n          break;\n\n      case 2:   // b matched, a did not - thus a extends sequence mb\n          var pp = {p: a};\n\n          if (prependB) {\n              pp.next = mb.head;\n              pp.prev = null;\n              mb.head.prev = pp;\n              mb.head = pp;\n          } else {\n              pp.next = null;\n              pp.prev = mb.tail;\n              mb.tail.next = pp;\n              mb.tail = pp;\n          }\n          break;\n\n      case 3:   // both matched, can merge sequences\n        // if the sequences are the same, do nothing, as we are simply closing this path (could set a flag)\n\n          if (ma === mb) {\n              var pp = {p: ma.tail.p, next: ma.head, prev: null};\n              ma.head.prev = pp;\n              ma.head = pp;\n              ma.closed = true;\n              break;\n          }\n\n        // there are 4 ways the sequence pair can be joined. The current setting of prependA and\n        // prependB will tell us which type of join is needed. For head/head and tail/tail joins\n        // one sequence needs to be reversed\n          switch ((prependA ? 1 : 0) | (prependB ? 2 : 0)) {\n          case 0:   // tail-tail\n            // reverse ma and append to mb\n              reverseList(ma);\n            // fall through to head/tail case\n          case 1:   // head-tail\n            // ma is appended to mb and ma discarded\n              mb.tail.next = ma.head;\n              ma.head.prev = mb.tail;\n              mb.tail = ma.tail;\n\n            //discard ma sequence record\n              this.remove_seq(ma);\n              break;\n\n          case 3:   // head-head\n            // reverse ma and append mb to it\n              reverseList(ma);\n            // fall through to tail/head case\n          case 2:   // tail-head\n            // mb is appended to ma and mb is discarded\n              ma.tail.next = mb.head;\n              mb.head.prev = ma.tail;\n              ma.tail = mb.tail;\n\n            //discard mb sequence record\n              this.remove_seq(mb);\n              break;\n          }\n      }\n  };\n\n  /*\n   * Implements CONREC.\n   *\n   * @private\n   * @param {function} drawContour function for drawing contour.  Defaults to a\n   *                               custom \"contour builder\", which populates the\n   *                               contours property.\n   */\n  function Conrec(drawContour) {\n      if (!drawContour) {\n          var c = this;\n          c.contours = {};\n      /**\n       * drawContour - interface for implementing the user supplied method to\n       * render the countours.\n       *\n       * Draws a line between the start and end coordinates.\n       *\n       * @private\n       * @param startX    - start coordinate for X\n       * @param startY    - start coordinate for Y\n       * @param endX      - end coordinate for X\n       * @param endY      - end coordinate for Y\n       * @param contourLevel - Contour level for line.\n       */\n          this.drawContour = function (startX, startY, endX, endY, contourLevel, k) {\n              var cb = c.contours[k];\n              if (!cb) {\n                  cb = c.contours[k] = new ContourBuilder(contourLevel);\n              }\n              cb.addSegment({x: startX, y: startY}, {x: endX, y: endY});\n          };\n          this.contourList = function () {\n              var l = [];\n              var a = c.contours;\n              for (var k in a) {\n                  var s = a[k].s;\n                  var level = a[k].level;\n                  while (s) {\n                      var h = s.head;\n                      var l2 = [];\n                      l2.level = level;\n                      l2.k = k;\n                      while (h && h.p) {\n                          l2.push(h.p);\n                          h = h.next;\n                      }\n                      l.push(l2);\n                      s = s.next;\n                  }\n              }\n              l.sort(function (a, b) { return a.k - b.k; });\n              return l;\n          };\n      } else {\n          this.drawContour = drawContour;\n      }\n      this.h  = new Array(5);\n      this.sh = new Array(5);\n      this.xh = new Array(5);\n      this.yh = new Array(5);\n  }\n\n  /*\n   * contour is a contouring subroutine for rectangularily spaced data\n   *\n   * It emits calls to a line drawing subroutine supplied by the user which\n   * draws a contour map corresponding to real*4data on a randomly spaced\n   * rectangular grid. The coordinates emitted are in the same units given in\n   * the x() and y() arrays.\n   *\n   * Any number of contour levels may be specified but they must be in order of\n   * increasing value.\n   *\n   *\n   * @param {number[][]} d - matrix of data to contour\n   * @param {number} ilb,iub,jlb,jub - index bounds of data matrix\n   *\n   *             The following two, one dimensional arrays (x and y) contain\n   *             the horizontal and vertical coordinates of each sample points.\n   * @param {number[]} x  - data matrix column coordinates\n   * @param {number[]} y  - data matrix row coordinates\n   * @param {number} nc   - number of contour levels\n   * @param {number[]} z  - contour levels in increasing order.\n   */\n  Conrec.prototype.contour = function (d, ilb, iub, jlb, jub, x, y, nc, z) {\n      var h = this.h, sh = this.sh, xh = this.xh, yh = this.yh;\n      var drawContour = this.drawContour;\n      this.contours = {};\n\n      var xsect = function (p1, p2) {\n          return (h[p2] * xh[p1] - h[p1] * xh[p2]) / (h[p2] - h[p1]);\n      };\n\n      var ysect = function (p1, p2) {\n          return (h[p2] * yh[p1] - h[p1] * yh[p2]) / (h[p2] - h[p1]);\n      };\n      var m1;\n      var m2;\n      var m3;\n      var case_value;\n      var dmin;\n      var dmax;\n      var x1 = 0.0;\n      var x2 = 0.0;\n      var y1 = 0.0;\n      var y2 = 0.0;\n\n    // The indexing of im and jm should be noted as it has to start from zero\n    // unlike the fortran counter part\n      var im = [0, 1, 1, 0];\n      var jm = [0, 0, 1, 1];\n\n    // Note that castab is arranged differently from the FORTRAN code because\n    // Fortran and C/C++ arrays are transposed of each other, in this case\n    // it is more tricky as castab is in 3 dimensions\n      var castab = [\n          [\n        [0, 0, 8], [0, 2, 5], [7, 6, 9]\n          ],\n          [\n        [0, 3, 4], [1, 3, 1], [4, 3, 0]\n          ],\n          [\n        [9, 6, 7], [5, 2, 0], [8, 0, 0]\n          ]\n      ];\n\n      for (var j = (jub - 1); j >= jlb; j--) {\n          for (var i = ilb; i <= iub - 1; i++) {\n              var temp1, temp2;\n              temp1 = Math.min(d[i][j], d[i][j + 1]);\n              temp2 = Math.min(d[i + 1][j], d[i + 1][j + 1]);\n              dmin  = Math.min(temp1, temp2);\n              temp1 = Math.max(d[i][j], d[i][j + 1]);\n              temp2 = Math.max(d[i + 1][j], d[i + 1][j + 1]);\n              dmax  = Math.max(temp1, temp2);\n\n              if (dmax >= z[0] && dmin <= z[nc - 1]) {\n                  for (var k = 0; k < nc; k++) {\n                      if (z[k] >= dmin && z[k] <= dmax) {\n                          for (var m = 4; m >= 0; m--) {\n                            if (m > 0) {\n                  // The indexing of im and jm should be noted as it has to\n                  // start from zero\n                              h[m] = d[i + im[m - 1]][j + jm[m - 1]] - z[k];\n                              xh[m] = x[i + im[m - 1]];\n                              yh[m] = y[j + jm[m - 1]];\n                          } else {\n                              h[0] = 0.25 * (h[1] + h[2] + h[3] + h[4]);\n                              xh[0] = 0.5 * (x[i] + x[i + 1]);\n                              yh[0] = 0.5 * (y[j] + y[j + 1]);\n                          }\n                            if (h[m] > EPSILON) {\n                              sh[m] = 1;\n                          } else if (h[m] < -EPSILON) {\n                            sh[m] = -1;\n                        } else\n                  sh[m] = 0;\n                        }\n              //\n              // Note: at this stage the relative heights of the corners and the\n              // centre are in the h array, and the corresponding coordinates are\n              // in the xh and yh arrays. The centre of the box is indexed by 0\n              // and the 4 corners by 1 to 4 as shown below.\n              // Each triangle is then indexed by the parameter m, and the 3\n              // vertices of each triangle are indexed by parameters m1,m2,and\n              // m3.\n              // It is assumed that the centre of the box is always vertex 2\n              // though this isimportant only when all 3 vertices lie exactly on\n              // the same contour level, in which case only the side of the box\n              // is drawn.\n              //\n              //\n              //      vertex 4 +-------------------+ vertex 3\n              //               | \\               / |\n              //               |   \\    m-3    /   |\n              //               |     \\       /     |\n              //               |       \\   /       |\n              //               |  m=2    X   m=2   |       the centre is vertex 0\n              //               |       /   \\       |\n              //               |     /       \\     |\n              //               |   /    m=1    \\   |\n              //               | /               \\ |\n              //      vertex 1 +-------------------+ vertex 2\n              //\n              //\n              //\n              //               Scan each triangle in the box\n              //\n                          for (m = 1; m <= 4; m++) {\n                            m1 = m;\n                            m2 = 0;\n                            if (m != 4) {\n                              m3 = m + 1;\n                          } else {\n                              m3 = 1;\n                          }\n                            case_value = castab[sh[m1] + 1][sh[m2] + 1][sh[m3] + 1];\n                            if (case_value != 0) {\n                              switch (case_value) {\n                            case 1: // Line between vertices 1 and 2\n                                x1 = xh[m1];\n                                y1 = yh[m1];\n                                x2 = xh[m2];\n                                y2 = yh[m2];\n                                break;\n                            case 2: // Line between vertices 2 and 3\n                                x1 = xh[m2];\n                                y1 = yh[m2];\n                                x2 = xh[m3];\n                                y2 = yh[m3];\n                                break;\n                            case 3: // Line between vertices 3 and 1\n                                x1 = xh[m3];\n                                y1 = yh[m3];\n                                x2 = xh[m1];\n                                y2 = yh[m1];\n                                break;\n                            case 4: // Line between vertex 1 and side 2-3\n                                x1 = xh[m1];\n                                y1 = yh[m1];\n                                x2 = xsect(m2, m3);\n                                y2 = ysect(m2, m3);\n                                break;\n                            case 5: // Line between vertex 2 and side 3-1\n                                x1 = xh[m2];\n                                y1 = yh[m2];\n                                x2 = xsect(m3, m1);\n                                y2 = ysect(m3, m1);\n                                break;\n                            case 6: //  Line between vertex 3 and side 1-2\n                                x1 = xh[m3];\n                                y1 = yh[m3];\n                                x2 = xsect(m1, m2);\n                                y2 = ysect(m1, m2);\n                                break;\n                            case 7: // Line between sides 1-2 and 2-3\n                                x1 = xsect(m1, m2);\n                                y1 = ysect(m1, m2);\n                                x2 = xsect(m2, m3);\n                                y2 = ysect(m2, m3);\n                                break;\n                            case 8: // Line between sides 2-3 and 3-1\n                                x1 = xsect(m2, m3);\n                                y1 = ysect(m2, m3);\n                                x2 = xsect(m3, m1);\n                                y2 = ysect(m3, m1);\n                                break;\n                            case 9: // Line between sides 3-1 and 1-2\n                                x1 = xsect(m3, m1);\n                                y1 = ysect(m3, m1);\n                                x2 = xsect(m1, m2);\n                                y2 = ysect(m1, m2);\n                                break;\n                            default:\n                                break;\n                            }\n                  // Put your processing code here and comment out the printf\n                  //printf(\"%f %f %f %f %f\\n\",x1,y1,x2,y2,z[k]);\n                              drawContour(x1, y1, x2, y2, z[k], k);\n                          }\n                        }\n                      }\n                  }\n              }\n          }\n      }\n  };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/isolines/conrec.js\n// module id = 18\n// module chunks = 0","var each = require('@turf/meta').coordEach,\n    convexHull = require('convex-hull'),\n    polygon = require('@turf/helpers').polygon;\n\n/**\n * Takes a {@link Feature} or a {@link FeatureCollection} and returns a convex hull {@link Polygon}.\n *\n * Internally this uses\n * the [convex-hull](https://github.com/mikolalysenko/convex-hull) module that\n * implements a [monotone chain hull](http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain).\n *\n * @name convex\n * @param {Feature|FeatureCollection} feature input Feature or FeatureCollection\n * @returns {Feature<Polygon>} a convex hull\n * @example\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.195312, 43.755225]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.404052, 43.8424511]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.579833, 43.659924]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.360107, 43.516688]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.14038, 43.588348]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [10.195312, 43.755225]\n *       }\n *     }\n *   ]\n * };\n *\n * var hull = turf.convex(points);\n *\n * var resultFeatures = points.features.concat(hull);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\nmodule.exports = function (feature) {\n    var points = [];\n\n    // Remove Z in coordinates because it breaks the convexHull algorithm\n    each(feature, function (coord) {\n        points.push([coord[0], coord[1]]);\n    });\n\n    var hull = convexHull(points);\n\n    // Hull should have at least 3 different vertices in order to create a valid polygon\n    if (hull.length >= 3) {\n        var ring = [];\n        for (var i = 0; i < hull.length; i++) {\n            ring.push(points[hull[i][0]]);\n        }\n        ring.push(points[hull[hull.length - 1][1]]);\n        return polygon([ring]);\n    }\n    return undefined;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/convex/index.js\n// module id = 19\n// module chunks = 0","\"use strict\"\n\nvar convexHull1d = require('./lib/ch1d')\nvar convexHull2d = require('./lib/ch2d')\nvar convexHullnd = require('./lib/chnd')\n\nmodule.exports = convexHull\n\nfunction convexHull(points) {\n  var n = points.length\n  if(n === 0) {\n    return []\n  } else if(n === 1) {\n    return [[0]]\n  }\n  var d = points[0].length\n  if(d === 0) {\n    return []\n  } else if(d === 1) {\n    return convexHull1d(points)\n  } else if(d === 2) {\n    return convexHull2d(points)\n  }\n  return convexHullnd(points, d)\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/convex-hull/ch.js\n// module id = 20\n// module chunks = 0","\"use strict\"\n\nmodule.exports = convexHull1d\n\nfunction convexHull1d(points) {\n  var lo = 0\n  var hi = 0\n  for(var i=1; i<points.length; ++i) {\n    if(points[i][0] < points[lo][0]) {\n      lo = i\n    }\n    if(points[i][0] > points[hi][0]) {\n      hi = i\n    }\n  }\n  if(lo < hi) {\n    return [[lo], [hi]]\n  } else if(lo > hi) {\n    return [[hi], [lo]]\n  } else {\n    return [[lo]]\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/convex-hull/lib/ch1d.js\n// module id = 21\n// module chunks = 0","'use strict'\n\nmodule.exports = convexHull2D\n\nvar monotoneHull = require('monotone-convex-hull-2d')\n\nfunction convexHull2D(points) {\n  var hull = monotoneHull(points)\n  var h = hull.length\n  if(h <= 2) {\n    return []\n  }\n  var edges = new Array(h)\n  var a = hull[h-1]\n  for(var i=0; i<h; ++i) {\n    var b = hull[i]\n    edges[i] = [a,b]\n    a = b\n  }\n  return edges\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/convex-hull/lib/ch2d.js\n// module id = 22\n// module chunks = 0","'use strict'\n\nmodule.exports = monotoneConvexHull2D\n\nvar orient = require('robust-orientation')[3]\n\nfunction monotoneConvexHull2D(points) {\n  var n = points.length\n\n  if(n < 3) {\n    var result = new Array(n)\n    for(var i=0; i<n; ++i) {\n      result[i] = i\n    }\n\n    if(n === 2 &&\n       points[0][0] === points[1][0] &&\n       points[0][1] === points[1][1]) {\n      return [0]\n    }\n\n    return result\n  }\n\n  //Sort point indices along x-axis\n  var sorted = new Array(n)\n  for(var i=0; i<n; ++i) {\n    sorted[i] = i\n  }\n  sorted.sort(function(a,b) {\n    var d = points[a][0]-points[b][0]\n    if(d) {\n      return d\n    }\n    return points[a][1] - points[b][1]\n  })\n\n  //Construct upper and lower hulls\n  var lower = [sorted[0], sorted[1]]\n  var upper = [sorted[0], sorted[1]]\n\n  for(var i=2; i<n; ++i) {\n    var idx = sorted[i]\n    var p   = points[idx]\n\n    //Insert into lower list\n    var m = lower.length\n    while(m > 1 && orient(\n        points[lower[m-2]], \n        points[lower[m-1]], \n        p) <= 0) {\n      m -= 1\n      lower.pop()\n    }\n    lower.push(idx)\n\n    //Insert into upper list\n    m = upper.length\n    while(m > 1 && orient(\n        points[upper[m-2]], \n        points[upper[m-1]], \n        p) >= 0) {\n      m -= 1\n      upper.pop()\n    }\n    upper.push(idx)\n  }\n\n  //Merge lists together\n  var result = new Array(upper.length + lower.length - 2)\n  var ptr    = 0\n  for(var i=0, nl=lower.length; i<nl; ++i) {\n    result[ptr++] = lower[i]\n  }\n  for(var j=upper.length-2; j>0; --j) {\n    result[ptr++] = upper[j]\n  }\n\n  //Return result\n  return result\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monotone-convex-hull-2d/index.js\n// module id = 23\n// module chunks = 0","\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar robustSum = require(\"robust-sum\")\nvar robustScale = require(\"robust-scale\")\nvar robustSubtract = require(\"robust-subtract\")\n\nvar NUM_EXPAND = 5\n\nvar EPSILON     = 1.1102230246251565e-16\nvar ERRBOUND3   = (3.0 + 16.0 * EPSILON) * EPSILON\nvar ERRBOUND4   = (7.0 + 56.0 * EPSILON) * EPSILON\n\nfunction cofactor(m, c) {\n  var result = new Array(m.length-1)\n  for(var i=1; i<m.length; ++i) {\n    var r = result[i-1] = new Array(m.length-1)\n    for(var j=0,k=0; j<m.length; ++j) {\n      if(j === c) {\n        continue\n      }\n      r[k++] = m[i][j]\n    }\n  }\n  return result\n}\n\nfunction matrix(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = new Array(n)\n    for(var j=0; j<n; ++j) {\n      result[i][j] = [\"m\", j, \"[\", (n-i-1), \"]\"].join(\"\")\n    }\n  }\n  return result\n}\n\nfunction sign(n) {\n  if(n & 1) {\n    return \"-\"\n  }\n  return \"\"\n}\n\nfunction generateSum(expr) {\n  if(expr.length === 1) {\n    return expr[0]\n  } else if(expr.length === 2) {\n    return [\"sum(\", expr[0], \",\", expr[1], \")\"].join(\"\")\n  } else {\n    var m = expr.length>>1\n    return [\"sum(\", generateSum(expr.slice(0, m)), \",\", generateSum(expr.slice(m)), \")\"].join(\"\")\n  }\n}\n\nfunction determinant(m) {\n  if(m.length === 2) {\n    return [[\"sum(prod(\", m[0][0], \",\", m[1][1], \"),prod(-\", m[0][1], \",\", m[1][0], \"))\"].join(\"\")]\n  } else {\n    var expr = []\n    for(var i=0; i<m.length; ++i) {\n      expr.push([\"scale(\", generateSum(determinant(cofactor(m, i))), \",\", sign(i), m[0][i], \")\"].join(\"\"))\n    }\n    return expr\n  }\n}\n\nfunction orientation(n) {\n  var pos = []\n  var neg = []\n  var m = matrix(n)\n  var args = []\n  for(var i=0; i<n; ++i) {\n    if((i&1)===0) {\n      pos.push.apply(pos, determinant(cofactor(m, i)))\n    } else {\n      neg.push.apply(neg, determinant(cofactor(m, i)))\n    }\n    args.push(\"m\" + i)\n  }\n  var posExpr = generateSum(pos)\n  var negExpr = generateSum(neg)\n  var funcName = \"orientation\" + n + \"Exact\"\n  var code = [\"function \", funcName, \"(\", args.join(), \"){var p=\", posExpr, \",n=\", negExpr, \",d=sub(p,n);\\\nreturn d[d.length-1];};return \", funcName].join(\"\")\n  var proc = new Function(\"sum\", \"prod\", \"scale\", \"sub\", code)\n  return proc(robustSum, twoProduct, robustScale, robustSubtract)\n}\n\nvar orientation3Exact = orientation(3)\nvar orientation4Exact = orientation(4)\n\nvar CACHED = [\n  function orientation0() { return 0 },\n  function orientation1() { return 0 },\n  function orientation2(a, b) { \n    return b[0] - a[0]\n  },\n  function orientation3(a, b, c) {\n    var l = (a[1] - c[1]) * (b[0] - c[0])\n    var r = (a[0] - c[0]) * (b[1] - c[1])\n    var det = l - r\n    var s\n    if(l > 0) {\n      if(r <= 0) {\n        return det\n      } else {\n        s = l + r\n      }\n    } else if(l < 0) {\n      if(r >= 0) {\n        return det\n      } else {\n        s = -(l + r)\n      }\n    } else {\n      return det\n    }\n    var tol = ERRBOUND3 * s\n    if(det >= tol || det <= -tol) {\n      return det\n    }\n    return orientation3Exact(a, b, c)\n  },\n  function orientation4(a,b,c,d) {\n    var adx = a[0] - d[0]\n    var bdx = b[0] - d[0]\n    var cdx = c[0] - d[0]\n    var ady = a[1] - d[1]\n    var bdy = b[1] - d[1]\n    var cdy = c[1] - d[1]\n    var adz = a[2] - d[2]\n    var bdz = b[2] - d[2]\n    var cdz = c[2] - d[2]\n    var bdxcdy = bdx * cdy\n    var cdxbdy = cdx * bdy\n    var cdxady = cdx * ady\n    var adxcdy = adx * cdy\n    var adxbdy = adx * bdy\n    var bdxady = bdx * ady\n    var det = adz * (bdxcdy - cdxbdy) \n            + bdz * (cdxady - adxcdy)\n            + cdz * (adxbdy - bdxady)\n    var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz)\n                  + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz)\n                  + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz)\n    var tol = ERRBOUND4 * permanent\n    if ((det > tol) || (-det > tol)) {\n      return det\n    }\n    return orientation4Exact(a,b,c,d)\n  }\n]\n\nfunction slowOrient(args) {\n  var proc = CACHED[args.length]\n  if(!proc) {\n    proc = CACHED[args.length] = orientation(args.length)\n  }\n  return proc.apply(undefined, args)\n}\n\nfunction generateOrientationProc() {\n  while(CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length))\n  }\n  var args = []\n  var procArgs = [\"slow\"]\n  for(var i=0; i<=NUM_EXPAND; ++i) {\n    args.push(\"a\" + i)\n    procArgs.push(\"o\" + i)\n  }\n  var code = [\n    \"function getOrientation(\", args.join(), \"){switch(arguments.length){case 0:case 1:return 0;\"\n  ]\n  for(var i=2; i<=NUM_EXPAND; ++i) {\n    code.push(\"case \", i, \":return o\", i, \"(\", args.slice(0, i).join(), \");\")\n  }\n  code.push(\"}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return getOrientation\")\n  procArgs.push(code.join(\"\"))\n\n  var proc = Function.apply(undefined, procArgs)\n  module.exports = proc.apply(undefined, [slowOrient].concat(CACHED))\n  for(var i=0; i<=NUM_EXPAND; ++i) {\n    module.exports[i] = CACHED[i]\n  }\n}\n\ngenerateOrientationProc()\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/robust-orientation/orientation.js\n// module id = 24\n// module chunks = 0","\"use strict\"\n\nmodule.exports = twoProduct\n\nvar SPLITTER = +(Math.pow(2, 27) + 1.0)\n\nfunction twoProduct(a, b, result) {\n  var x = a * b\n\n  var c = SPLITTER * a\n  var abig = c - a\n  var ahi = c - abig\n  var alo = a - ahi\n\n  var d = SPLITTER * b\n  var bbig = d - b\n  var bhi = d - bbig\n  var blo = b - bhi\n\n  var err1 = x - (ahi * bhi)\n  var err2 = err1 - (alo * bhi)\n  var err3 = err2 - (ahi * blo)\n\n  var y = alo * blo - err3\n\n  if(result) {\n    result[0] = y\n    result[1] = x\n    return result\n  }\n\n  return [ y, x ]\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/two-product/two-product.js\n// module id = 25\n// module chunks = 0","\"use strict\"\n\nmodule.exports = linearExpansionSum\n\n//Easy case: Add two scalars\nfunction scalarScalar(a, b) {\n  var x = a + b\n  var bv = x - a\n  var av = x - bv\n  var br = b - bv\n  var ar = a - av\n  var y = ar + br\n  if(y) {\n    return [y, x]\n  }\n  return [x]\n}\n\nfunction linearExpansionSum(e, f) {\n  var ne = e.length|0\n  var nf = f.length|0\n  if(ne === 1 && nf === 1) {\n    return scalarScalar(e[0], f[0])\n  }\n  var n = ne + nf\n  var g = new Array(n)\n  var count = 0\n  var eptr = 0\n  var fptr = 0\n  var abs = Math.abs\n  var ei = e[eptr]\n  var ea = abs(ei)\n  var fi = f[fptr]\n  var fa = abs(fi)\n  var a, b\n  if(ea < fa) {\n    b = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    b = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n      fa = abs(fi)\n    }\n  }\n  if((eptr < ne && ea < fa) || (fptr >= nf)) {\n    a = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    a = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n      fa = abs(fi)\n    }\n  }\n  var x = a + b\n  var bv = x - a\n  var y = b - bv\n  var q0 = y\n  var q1 = x\n  var _x, _bv, _av, _br, _ar\n  while(eptr < ne && fptr < nf) {\n    if(ea < fa) {\n      a = ei\n      eptr += 1\n      if(eptr < ne) {\n        ei = e[eptr]\n        ea = abs(ei)\n      }\n    } else {\n      a = fi\n      fptr += 1\n      if(fptr < nf) {\n        fi = f[fptr]\n        fa = abs(fi)\n      }\n    }\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n  }\n  while(eptr < ne) {\n    a = ei\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n    }\n  }\n  while(fptr < nf) {\n    a = fi\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    } \n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n    }\n  }\n  if(q0) {\n    g[count++] = q0\n  }\n  if(q1) {\n    g[count++] = q1\n  }\n  if(!count) {\n    g[count++] = 0.0  \n  }\n  g.length = count\n  return g\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/robust-sum/robust-sum.js\n// module id = 26\n// module chunks = 0","\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar twoSum = require(\"two-sum\")\n\nmodule.exports = scaleLinearExpansion\n\nfunction scaleLinearExpansion(e, scale) {\n  var n = e.length\n  if(n === 1) {\n    var ts = twoProduct(e[0], scale)\n    if(ts[0]) {\n      return ts\n    }\n    return [ ts[1] ]\n  }\n  var g = new Array(2 * n)\n  var q = [0.1, 0.1]\n  var t = [0.1, 0.1]\n  var count = 0\n  twoProduct(e[0], scale, q)\n  if(q[0]) {\n    g[count++] = q[0]\n  }\n  for(var i=1; i<n; ++i) {\n    twoProduct(e[i], scale, t)\n    var pq = q[1]\n    twoSum(pq, t[0], q)\n    if(q[0]) {\n      g[count++] = q[0]\n    }\n    var a = t[1]\n    var b = q[1]\n    var x = a + b\n    var bv = x - a\n    var y = b - bv\n    q[1] = x\n    if(y) {\n      g[count++] = y\n    }\n  }\n  if(q[1]) {\n    g[count++] = q[1]\n  }\n  if(count === 0) {\n    g[count++] = 0.0\n  }\n  g.length = count\n  return g\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/robust-scale/robust-scale.js\n// module id = 27\n// module chunks = 0","\"use strict\"\n\nmodule.exports = fastTwoSum\n\nfunction fastTwoSum(a, b, result) {\n\tvar x = a + b\n\tvar bv = x - a\n\tvar av = x - bv\n\tvar br = b - bv\n\tvar ar = a - av\n\tif(result) {\n\t\tresult[0] = ar + br\n\t\tresult[1] = x\n\t\treturn result\n\t}\n\treturn [ar+br, x]\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/two-sum/two-sum.js\n// module id = 28\n// module chunks = 0","\"use strict\"\n\nmodule.exports = robustSubtract\n\n//Easy case: Add two scalars\nfunction scalarScalar(a, b) {\n  var x = a + b\n  var bv = x - a\n  var av = x - bv\n  var br = b - bv\n  var ar = a - av\n  var y = ar + br\n  if(y) {\n    return [y, x]\n  }\n  return [x]\n}\n\nfunction robustSubtract(e, f) {\n  var ne = e.length|0\n  var nf = f.length|0\n  if(ne === 1 && nf === 1) {\n    return scalarScalar(e[0], -f[0])\n  }\n  var n = ne + nf\n  var g = new Array(n)\n  var count = 0\n  var eptr = 0\n  var fptr = 0\n  var abs = Math.abs\n  var ei = e[eptr]\n  var ea = abs(ei)\n  var fi = -f[fptr]\n  var fa = abs(fi)\n  var a, b\n  if(ea < fa) {\n    b = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    b = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = -f[fptr]\n      fa = abs(fi)\n    }\n  }\n  if((eptr < ne && ea < fa) || (fptr >= nf)) {\n    a = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    a = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = -f[fptr]\n      fa = abs(fi)\n    }\n  }\n  var x = a + b\n  var bv = x - a\n  var y = b - bv\n  var q0 = y\n  var q1 = x\n  var _x, _bv, _av, _br, _ar\n  while(eptr < ne && fptr < nf) {\n    if(ea < fa) {\n      a = ei\n      eptr += 1\n      if(eptr < ne) {\n        ei = e[eptr]\n        ea = abs(ei)\n      }\n    } else {\n      a = fi\n      fptr += 1\n      if(fptr < nf) {\n        fi = -f[fptr]\n        fa = abs(fi)\n      }\n    }\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n  }\n  while(eptr < ne) {\n    a = ei\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n    }\n  }\n  while(fptr < nf) {\n    a = fi\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    } \n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    fptr += 1\n    if(fptr < nf) {\n      fi = -f[fptr]\n    }\n  }\n  if(q0) {\n    g[count++] = q0\n  }\n  if(q1) {\n    g[count++] = q1\n  }\n  if(!count) {\n    g[count++] = 0.0  \n  }\n  g.length = count\n  return g\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/robust-subtract/robust-diff.js\n// module id = 29\n// module chunks = 0","'use strict'\n\nmodule.exports = convexHullnD\n\nvar ich = require('incremental-convex-hull')\nvar aff = require('affine-hull')\n\nfunction permute(points, front) {\n  var n = points.length\n  var npoints = new Array(n)\n  for(var i=0; i<front.length; ++i) {\n    npoints[i] = points[front[i]]\n  }\n  var ptr = front.length\n  for(var i=0; i<n; ++i) {\n    if(front.indexOf(i) < 0) {\n      npoints[ptr++] = points[i]\n    }\n  }\n  return npoints\n}\n\nfunction invPermute(cells, front) {\n  var nc = cells.length\n  var nf = front.length\n  for(var i=0; i<nc; ++i) {\n    var c = cells[i]\n    for(var j=0; j<c.length; ++j) {\n      var x = c[j]\n      if(x < nf) {\n        c[j] = front[x]\n      } else {\n        x = x - nf\n        for(var k=0; k<nf; ++k) {\n          if(x >= front[k]) {\n            x += 1\n          }\n        }\n        c[j] = x\n      }\n    }\n  }\n  return cells\n}\n\nfunction convexHullnD(points, d) {\n  try {\n    return ich(points, true)\n  } catch(e) {\n    //If point set is degenerate, try to find a basis and rerun it\n    var ah = aff(points)\n    if(ah.length <= d) {\n      //No basis, no try\n      return []\n    }\n    var npoints = permute(points, ah)\n    var nhull   = ich(npoints, true)\n    return invPermute(nhull, ah)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/convex-hull/lib/chnd.js\n// module id = 30\n// module chunks = 0","\"use strict\"\n\n//High level idea:\n// 1. Use Clarkson's incremental construction to find convex hull\n// 2. Point location in triangulation by jump and walk\n\nmodule.exports = incrementalConvexHull\n\nvar orient = require(\"robust-orientation\")\nvar compareCell = require(\"simplicial-complex\").compareCells\n\nfunction compareInt(a, b) {\n  return a - b\n}\n\nfunction Simplex(vertices, adjacent, boundary) {\n  this.vertices = vertices\n  this.adjacent = adjacent\n  this.boundary = boundary\n  this.lastVisited = -1\n}\n\nSimplex.prototype.flip = function() {\n  var t = this.vertices[0]\n  this.vertices[0] = this.vertices[1]\n  this.vertices[1] = t\n  var u = this.adjacent[0]\n  this.adjacent[0] = this.adjacent[1]\n  this.adjacent[1] = u\n}\n\nfunction GlueFacet(vertices, cell, index) {\n  this.vertices = vertices\n  this.cell = cell\n  this.index = index\n}\n\nfunction compareGlue(a, b) {\n  return compareCell(a.vertices, b.vertices)\n}\n\nfunction bakeOrient(d) {\n  var code = [\"function orient(){var tuple=this.tuple;return test(\"]\n  for(var i=0; i<=d; ++i) {\n    if(i > 0) {\n      code.push(\",\")\n    }\n    code.push(\"tuple[\", i, \"]\")\n  }\n  code.push(\")}return orient\")\n  var proc = new Function(\"test\", code.join(\"\"))\n  var test = orient[d+1]\n  if(!test) {\n    test = orient\n  }\n  return proc(test)\n}\n\nvar BAKED = []\n\nfunction Triangulation(dimension, vertices, simplices) {\n  this.dimension = dimension\n  this.vertices = vertices\n  this.simplices = simplices\n  this.interior = simplices.filter(function(c) {\n    return !c.boundary\n  })\n\n  this.tuple = new Array(dimension+1)\n  for(var i=0; i<=dimension; ++i) {\n    this.tuple[i] = this.vertices[i]\n  }\n\n  var o = BAKED[dimension]\n  if(!o) {\n    o = BAKED[dimension] = bakeOrient(dimension)\n  }\n  this.orient = o\n}\n\nvar proto = Triangulation.prototype\n\n//Degenerate situation where we are on boundary, but coplanar to face\nproto.handleBoundaryDegeneracy = function(cell, point) {\n  var d = this.dimension\n  var n = this.vertices.length - 1\n  var tuple = this.tuple\n  var verts = this.vertices\n\n  //Dumb solution: Just do dfs from boundary cell until we find any peak, or terminate\n  var toVisit = [ cell ]\n  cell.lastVisited = -n\n  while(toVisit.length > 0) {\n    cell = toVisit.pop()\n    var cellVerts = cell.vertices\n    var cellAdj = cell.adjacent\n    for(var i=0; i<=d; ++i) {\n      var neighbor = cellAdj[i]\n      if(!neighbor.boundary || neighbor.lastVisited <= -n) {\n        continue\n      }\n      var nv = neighbor.vertices\n      for(var j=0; j<=d; ++j) {\n        var vv = nv[j]\n        if(vv < 0) {\n          tuple[j] = point\n        } else {\n          tuple[j] = verts[vv]\n        }\n      }\n      var o = this.orient()\n      if(o > 0) {\n        return neighbor\n      }\n      neighbor.lastVisited = -n\n      if(o === 0) {\n        toVisit.push(neighbor)\n      }\n    }\n  }\n  return null\n}\n\nproto.walk = function(point, random) {\n  //Alias local properties\n  var n = this.vertices.length - 1\n  var d = this.dimension\n  var verts = this.vertices\n  var tuple = this.tuple\n\n  //Compute initial jump cell\n  var initIndex = random ? (this.interior.length * Math.random())|0 : (this.interior.length-1)\n  var cell = this.interior[ initIndex ]\n\n  //Start walking\nouterLoop:\n  while(!cell.boundary) {\n    var cellVerts = cell.vertices\n    var cellAdj = cell.adjacent\n\n    for(var i=0; i<=d; ++i) {\n      tuple[i] = verts[cellVerts[i]]\n    }\n    cell.lastVisited = n\n\n    //Find farthest adjacent cell\n    for(var i=0; i<=d; ++i) {\n      var neighbor = cellAdj[i]\n      if(neighbor.lastVisited >= n) {\n        continue\n      }\n      var prev = tuple[i]\n      tuple[i] = point\n      var o = this.orient()\n      tuple[i] = prev\n      if(o < 0) {\n        cell = neighbor\n        continue outerLoop\n      } else {\n        if(!neighbor.boundary) {\n          neighbor.lastVisited = n\n        } else {\n          neighbor.lastVisited = -n\n        }\n      }\n    }\n    return\n  }\n\n  return cell\n}\n\nproto.addPeaks = function(point, cell) {\n  var n = this.vertices.length - 1\n  var d = this.dimension\n  var verts = this.vertices\n  var tuple = this.tuple\n  var interior = this.interior\n  var simplices = this.simplices\n\n  //Walking finished at boundary, time to add peaks\n  var tovisit = [ cell ]\n\n  //Stretch initial boundary cell into a peak\n  cell.lastVisited = n\n  cell.vertices[cell.vertices.indexOf(-1)] = n\n  cell.boundary = false\n  interior.push(cell)\n\n  //Record a list of all new boundaries created by added peaks so we can glue them together when we are all done\n  var glueFacets = []\n\n  //Do a traversal of the boundary walking outward from starting peak\n  while(tovisit.length > 0) {\n    //Pop off peak and walk over adjacent cells\n    var cell = tovisit.pop()\n    var cellVerts = cell.vertices\n    var cellAdj = cell.adjacent\n    var indexOfN = cellVerts.indexOf(n)\n    if(indexOfN < 0) {\n      continue\n    }\n\n    for(var i=0; i<=d; ++i) {\n      if(i === indexOfN) {\n        continue\n      }\n\n      //For each boundary neighbor of the cell\n      var neighbor = cellAdj[i]\n      if(!neighbor.boundary || neighbor.lastVisited >= n) {\n        continue\n      }\n\n      var nv = neighbor.vertices\n\n      //Test if neighbor is a peak\n      if(neighbor.lastVisited !== -n) {      \n        //Compute orientation of p relative to each boundary peak\n        var indexOfNeg1 = 0\n        for(var j=0; j<=d; ++j) {\n          if(nv[j] < 0) {\n            indexOfNeg1 = j\n            tuple[j] = point\n          } else {\n            tuple[j] = verts[nv[j]]\n          }\n        }\n        var o = this.orient()\n\n        //Test if neighbor cell is also a peak\n        if(o > 0) {\n          nv[indexOfNeg1] = n\n          neighbor.boundary = false\n          interior.push(neighbor)\n          tovisit.push(neighbor)\n          neighbor.lastVisited = n\n          continue\n        } else {\n          neighbor.lastVisited = -n\n        }\n      }\n\n      var na = neighbor.adjacent\n\n      //Otherwise, replace neighbor with new face\n      var vverts = cellVerts.slice()\n      var vadj = cellAdj.slice()\n      var ncell = new Simplex(vverts, vadj, true)\n      simplices.push(ncell)\n\n      //Connect to neighbor\n      var opposite = na.indexOf(cell)\n      if(opposite < 0) {\n        continue\n      }\n      na[opposite] = ncell\n      vadj[indexOfN] = neighbor\n\n      //Connect to cell\n      vverts[i] = -1\n      vadj[i] = cell\n      cellAdj[i] = ncell\n\n      //Flip facet\n      ncell.flip()\n\n      //Add to glue list\n      for(var j=0; j<=d; ++j) {\n        var uu = vverts[j]\n        if(uu < 0 || uu === n) {\n          continue\n        }\n        var nface = new Array(d-1)\n        var nptr = 0\n        for(var k=0; k<=d; ++k) {\n          var vv = vverts[k]\n          if(vv < 0 || k === j) {\n            continue\n          }\n          nface[nptr++] = vv\n        }\n        glueFacets.push(new GlueFacet(nface, ncell, j))\n      }\n    }\n  }\n\n  //Glue boundary facets together\n  glueFacets.sort(compareGlue)\n\n  for(var i=0; i+1<glueFacets.length; i+=2) {\n    var a = glueFacets[i]\n    var b = glueFacets[i+1]\n    var ai = a.index\n    var bi = b.index\n    if(ai < 0 || bi < 0) {\n      continue\n    }\n    a.cell.adjacent[a.index] = b.cell\n    b.cell.adjacent[b.index] = a.cell\n  }\n}\n\nproto.insert = function(point, random) {\n  //Add point\n  var verts = this.vertices\n  verts.push(point)\n\n  var cell = this.walk(point, random)\n  if(!cell) {\n    return\n  }\n\n  //Alias local properties\n  var d = this.dimension\n  var tuple = this.tuple\n\n  //Degenerate case: If point is coplanar to cell, then walk until we find a non-degenerate boundary\n  for(var i=0; i<=d; ++i) {\n    var vv = cell.vertices[i]\n    if(vv < 0) {\n      tuple[i] = point\n    } else {\n      tuple[i] = verts[vv]\n    }\n  }\n  var o = this.orient(tuple)\n  if(o < 0) {\n    return\n  } else if(o === 0) {\n    cell = this.handleBoundaryDegeneracy(cell, point)\n    if(!cell) {\n      return\n    }\n  }\n\n  //Add peaks\n  this.addPeaks(point, cell)\n}\n\n//Extract all boundary cells\nproto.boundary = function() {\n  var d = this.dimension\n  var boundary = []\n  var cells = this.simplices\n  var nc = cells.length\n  for(var i=0; i<nc; ++i) {\n    var c = cells[i]\n    if(c.boundary) {\n      var bcell = new Array(d)\n      var cv = c.vertices\n      var ptr = 0\n      var parity = 0\n      for(var j=0; j<=d; ++j) {\n        if(cv[j] >= 0) {\n          bcell[ptr++] = cv[j]\n        } else {\n          parity = j&1\n        }\n      }\n      if(parity === (d&1)) {\n        var t = bcell[0]\n        bcell[0] = bcell[1]\n        bcell[1] = t\n      }\n      boundary.push(bcell)\n    }\n  }\n  return boundary\n}\n\nfunction incrementalConvexHull(points, randomSearch) {\n  var n = points.length\n  if(n === 0) {\n    throw new Error(\"Must have at least d+1 points\")\n  }\n  var d = points[0].length\n  if(n <= d) {\n    throw new Error(\"Must input at least d+1 points\")\n  }\n\n  //FIXME: This could be degenerate, but need to select d+1 non-coplanar points to bootstrap process\n  var initialSimplex = points.slice(0, d+1)\n\n  //Make sure initial simplex is positively oriented\n  var o = orient.apply(void 0, initialSimplex)\n  if(o === 0) {\n    throw new Error(\"Input not in general position\")\n  }\n  var initialCoords = new Array(d+1)\n  for(var i=0; i<=d; ++i) {\n    initialCoords[i] = i\n  }\n  if(o < 0) {\n    initialCoords[0] = 1\n    initialCoords[1] = 0\n  }\n\n  //Create initial topological index, glue pointers together (kind of messy)\n  var initialCell = new Simplex(initialCoords, new Array(d+1), false)\n  var boundary = initialCell.adjacent\n  var list = new Array(d+2)\n  for(var i=0; i<=d; ++i) {\n    var verts = initialCoords.slice()\n    for(var j=0; j<=d; ++j) {\n      if(j === i) {\n        verts[j] = -1\n      }\n    }\n    var t = verts[0]\n    verts[0] = verts[1]\n    verts[1] = t\n    var cell = new Simplex(verts, new Array(d+1), true)\n    boundary[i] = cell\n    list[i] = cell\n  }\n  list[d+1] = initialCell\n  for(var i=0; i<=d; ++i) {\n    var verts = boundary[i].vertices\n    var adj = boundary[i].adjacent\n    for(var j=0; j<=d; ++j) {\n      var v = verts[j]\n      if(v < 0) {\n        adj[j] = initialCell\n        continue\n      }\n      for(var k=0; k<=d; ++k) {\n        if(boundary[k].vertices.indexOf(v) < 0) {\n          adj[j] = boundary[k]\n        }\n      }\n    }\n  }\n\n  //Initialize triangles\n  var triangles = new Triangulation(d, initialSimplex, list)\n\n  //Insert remaining points\n  var useRandom = !!randomSearch\n  for(var i=d+1; i<n; ++i) {\n    triangles.insert(points[i], useRandom)\n  }\n  \n  //Extract boundary cells\n  return triangles.boundary()\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/incremental-convex-hull/ich.js\n// module id = 31\n// module chunks = 0","\"use strict\"; \"use restrict\";\n\nvar bits      = require(\"bit-twiddle\")\n  , UnionFind = require(\"union-find\")\n\n//Returns the dimension of a cell complex\nfunction dimension(cells) {\n  var d = 0\n    , max = Math.max\n  for(var i=0, il=cells.length; i<il; ++i) {\n    d = max(d, cells[i].length)\n  }\n  return d-1\n}\nexports.dimension = dimension\n\n//Counts the number of vertices in faces\nfunction countVertices(cells) {\n  var vc = -1\n    , max = Math.max\n  for(var i=0, il=cells.length; i<il; ++i) {\n    var c = cells[i]\n    for(var j=0, jl=c.length; j<jl; ++j) {\n      vc = max(vc, c[j])\n    }\n  }\n  return vc+1\n}\nexports.countVertices = countVertices\n\n//Returns a deep copy of cells\nfunction cloneCells(cells) {\n  var ncells = new Array(cells.length)\n  for(var i=0, il=cells.length; i<il; ++i) {\n    ncells[i] = cells[i].slice(0)\n  }\n  return ncells\n}\nexports.cloneCells = cloneCells\n\n//Ranks a pair of cells up to permutation\nfunction compareCells(a, b) {\n  var n = a.length\n    , t = a.length - b.length\n    , min = Math.min\n  if(t) {\n    return t\n  }\n  switch(n) {\n    case 0:\n      return 0;\n    case 1:\n      return a[0] - b[0];\n    case 2:\n      var d = a[0]+a[1]-b[0]-b[1]\n      if(d) {\n        return d\n      }\n      return min(a[0],a[1]) - min(b[0],b[1])\n    case 3:\n      var l1 = a[0]+a[1]\n        , m1 = b[0]+b[1]\n      d = l1+a[2] - (m1+b[2])\n      if(d) {\n        return d\n      }\n      var l0 = min(a[0], a[1])\n        , m0 = min(b[0], b[1])\n        , d  = min(l0, a[2]) - min(m0, b[2])\n      if(d) {\n        return d\n      }\n      return min(l0+a[2], l1) - min(m0+b[2], m1)\n    \n    //TODO: Maybe optimize n=4 as well?\n    \n    default:\n      var as = a.slice(0)\n      as.sort()\n      var bs = b.slice(0)\n      bs.sort()\n      for(var i=0; i<n; ++i) {\n        t = as[i] - bs[i]\n        if(t) {\n          return t\n        }\n      }\n      return 0\n  }\n}\nexports.compareCells = compareCells\n\nfunction compareZipped(a, b) {\n  return compareCells(a[0], b[0])\n}\n\n//Puts a cell complex into normal order for the purposes of findCell queries\nfunction normalize(cells, attr) {\n  if(attr) {\n    var len = cells.length\n    var zipped = new Array(len)\n    for(var i=0; i<len; ++i) {\n      zipped[i] = [cells[i], attr[i]]\n    }\n    zipped.sort(compareZipped)\n    for(var i=0; i<len; ++i) {\n      cells[i] = zipped[i][0]\n      attr[i] = zipped[i][1]\n    }\n    return cells\n  } else {\n    cells.sort(compareCells)\n    return cells\n  }\n}\nexports.normalize = normalize\n\n//Removes all duplicate cells in the complex\nfunction unique(cells) {\n  if(cells.length === 0) {\n    return []\n  }\n  var ptr = 1\n    , len = cells.length\n  for(var i=1; i<len; ++i) {\n    var a = cells[i]\n    if(compareCells(a, cells[i-1])) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      cells[ptr++] = a\n    }\n  }\n  cells.length = ptr\n  return cells\n}\nexports.unique = unique;\n\n//Finds a cell in a normalized cell complex\nfunction findCell(cells, c) {\n  var lo = 0\n    , hi = cells.length-1\n    , r  = -1\n  while (lo <= hi) {\n    var mid = (lo + hi) >> 1\n      , s   = compareCells(cells[mid], c)\n    if(s <= 0) {\n      if(s === 0) {\n        r = mid\n      }\n      lo = mid + 1\n    } else if(s > 0) {\n      hi = mid - 1\n    }\n  }\n  return r\n}\nexports.findCell = findCell;\n\n//Builds an index for an n-cell.  This is more general than dual, but less efficient\nfunction incidence(from_cells, to_cells) {\n  var index = new Array(from_cells.length)\n  for(var i=0, il=index.length; i<il; ++i) {\n    index[i] = []\n  }\n  var b = []\n  for(var i=0, n=to_cells.length; i<n; ++i) {\n    var c = to_cells[i]\n    var cl = c.length\n    for(var k=1, kn=(1<<cl); k<kn; ++k) {\n      b.length = bits.popCount(k)\n      var l = 0\n      for(var j=0; j<cl; ++j) {\n        if(k & (1<<j)) {\n          b[l++] = c[j]\n        }\n      }\n      var idx=findCell(from_cells, b)\n      if(idx < 0) {\n        continue\n      }\n      while(true) {\n        index[idx++].push(i)\n        if(idx >= from_cells.length || compareCells(from_cells[idx], b) !== 0) {\n          break\n        }\n      }\n    }\n  }\n  return index\n}\nexports.incidence = incidence\n\n//Computes the dual of the mesh.  This is basically an optimized version of buildIndex for the situation where from_cells is just the list of vertices\nfunction dual(cells, vertex_count) {\n  if(!vertex_count) {\n    return incidence(unique(skeleton(cells, 0)), cells, 0)\n  }\n  var res = new Array(vertex_count)\n  for(var i=0; i<vertex_count; ++i) {\n    res[i] = []\n  }\n  for(var i=0, len=cells.length; i<len; ++i) {\n    var c = cells[i]\n    for(var j=0, cl=c.length; j<cl; ++j) {\n      res[c[j]].push(i)\n    }\n  }\n  return res\n}\nexports.dual = dual\n\n//Enumerates all cells in the complex\nfunction explode(cells) {\n  var result = []\n  for(var i=0, il=cells.length; i<il; ++i) {\n    var c = cells[i]\n      , cl = c.length|0\n    for(var j=1, jl=(1<<cl); j<jl; ++j) {\n      var b = []\n      for(var k=0; k<cl; ++k) {\n        if((j >>> k) & 1) {\n          b.push(c[k])\n        }\n      }\n      result.push(b)\n    }\n  }\n  return normalize(result)\n}\nexports.explode = explode\n\n//Enumerates all of the n-cells of a cell complex\nfunction skeleton(cells, n) {\n  if(n < 0) {\n    return []\n  }\n  var result = []\n    , k0     = (1<<(n+1))-1\n  for(var i=0; i<cells.length; ++i) {\n    var c = cells[i]\n    for(var k=k0; k<(1<<c.length); k=bits.nextCombination(k)) {\n      var b = new Array(n+1)\n        , l = 0\n      for(var j=0; j<c.length; ++j) {\n        if(k & (1<<j)) {\n          b[l++] = c[j]\n        }\n      }\n      result.push(b)\n    }\n  }\n  return normalize(result)\n}\nexports.skeleton = skeleton;\n\n//Computes the boundary of all cells, does not remove duplicates\nfunction boundary(cells) {\n  var res = []\n  for(var i=0,il=cells.length; i<il; ++i) {\n    var c = cells[i]\n    for(var j=0,cl=c.length; j<cl; ++j) {\n      var b = new Array(c.length-1)\n      for(var k=0, l=0; k<cl; ++k) {\n        if(k !== j) {\n          b[l++] = c[k]\n        }\n      }\n      res.push(b)\n    }\n  }\n  return normalize(res)\n}\nexports.boundary = boundary;\n\n//Computes connected components for a dense cell complex\nfunction connectedComponents_dense(cells, vertex_count) {\n  var labels = new UnionFind(vertex_count)\n  for(var i=0; i<cells.length; ++i) {\n    var c = cells[i]\n    for(var j=0; j<c.length; ++j) {\n      for(var k=j+1; k<c.length; ++k) {\n        labels.link(c[j], c[k])\n      }\n    }\n  }\n  var components = []\n    , component_labels = labels.ranks\n  for(var i=0; i<component_labels.length; ++i) {\n    component_labels[i] = -1\n  }\n  for(var i=0; i<cells.length; ++i) {\n    var l = labels.find(cells[i][0])\n    if(component_labels[l] < 0) {\n      component_labels[l] = components.length\n      components.push([cells[i].slice(0)])\n    } else {\n      components[component_labels[l]].push(cells[i].slice(0))\n    }\n  }\n  return components\n}\n\n//Computes connected components for a sparse graph\nfunction connectedComponents_sparse(cells) {\n  var vertices  = unique(normalize(skeleton(cells, 0)))\n    , labels    = new UnionFind(vertices.length)\n  for(var i=0; i<cells.length; ++i) {\n    var c = cells[i]\n    for(var j=0; j<c.length; ++j) {\n      var vj = findCell(vertices, [c[j]])\n      for(var k=j+1; k<c.length; ++k) {\n        labels.link(vj, findCell(vertices, [c[k]]))\n      }\n    }\n  }\n  var components        = []\n    , component_labels  = labels.ranks\n  for(var i=0; i<component_labels.length; ++i) {\n    component_labels[i] = -1\n  }\n  for(var i=0; i<cells.length; ++i) {\n    var l = labels.find(findCell(vertices, [cells[i][0]]));\n    if(component_labels[l] < 0) {\n      component_labels[l] = components.length\n      components.push([cells[i].slice(0)])\n    } else {\n      components[component_labels[l]].push(cells[i].slice(0))\n    }\n  }\n  return components\n}\n\n//Computes connected components for a cell complex\nfunction connectedComponents(cells, vertex_count) {\n  if(vertex_count) {\n    return connectedComponents_dense(cells, vertex_count)\n  }\n  return connectedComponents_sparse(cells)\n}\nexports.connectedComponents = connectedComponents\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/simplicial-complex/topology.js\n// module id = 32\n// module chunks = 0","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bit-twiddle/twiddle.js\n// module id = 33\n// module chunks = 0","\"use strict\"; \"use restrict\";\n\nmodule.exports = UnionFind;\n\nfunction UnionFind(count) {\n  this.roots = new Array(count);\n  this.ranks = new Array(count);\n  \n  for(var i=0; i<count; ++i) {\n    this.roots[i] = i;\n    this.ranks[i] = 0;\n  }\n}\n\nvar proto = UnionFind.prototype\n\nObject.defineProperty(proto, \"length\", {\n  \"get\": function() {\n    return this.roots.length\n  }\n})\n\nproto.makeSet = function() {\n  var n = this.roots.length;\n  this.roots.push(n);\n  this.ranks.push(0);\n  return n;\n}\n\nproto.find = function(x) {\n  var x0 = x\n  var roots = this.roots;\n  while(roots[x] !== x) {\n    x = roots[x]\n  }\n  while(roots[x0] !== x) {\n    var y = roots[x0]\n    roots[x0] = x\n    x0 = y\n  }\n  return x;\n}\n\nproto.link = function(x, y) {\n  var xr = this.find(x)\n    , yr = this.find(y);\n  if(xr === yr) {\n    return;\n  }\n  var ranks = this.ranks\n    , roots = this.roots\n    , xd    = ranks[xr]\n    , yd    = ranks[yr];\n  if(xd < yd) {\n    roots[xr] = yr;\n  } else if(yd < xd) {\n    roots[yr] = xr;\n  } else {\n    roots[yr] = xr;\n    ++ranks[xr];\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/union-find/index.js\n// module id = 34\n// module chunks = 0","'use strict'\n\nmodule.exports = affineHull\n\nvar orient = require('robust-orientation')\n\nfunction linearlyIndependent(points, d) {\n  var nhull = new Array(d+1)\n  for(var i=0; i<points.length; ++i) {\n    nhull[i] = points[i]\n  }\n  for(var i=0; i<=points.length; ++i) {\n    for(var j=points.length; j<=d; ++j) {\n      var x = new Array(d)\n      for(var k=0; k<d; ++k) {\n        x[k] = Math.pow(j+1-i, k)\n      }\n      nhull[j] = x\n    }\n    var o = orient.apply(void 0, nhull)\n    if(o) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction affineHull(points) {\n  var n = points.length\n  if(n === 0) {\n    return []\n  }\n  if(n === 1) {\n    return [0]\n  }\n  var d = points[0].length\n  var frame = [ points[0] ]\n  var index = [ 0 ]\n  for(var i=1; i<n; ++i) {\n    frame.push(points[i])\n    if(!linearlyIndependent(frame, d)) {\n      frame.pop()\n      continue\n    }\n    index.push(i)\n    if(index.length === d+1) {\n      return index\n    }\n  }\n  return index\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/affine-hull/aff.js\n// module id = 35\n// module chunks = 0","var inside = require('@turf/inside');\nvar featureCollection = require('@turf/helpers').featureCollection;\n\n/**\n * Takes a set of {@link Point|points} and a set of {@link Polygon|polygons} and returns the points that fall within the polygons.\n *\n * @name within\n * @param {FeatureCollection<Point>} points input points\n * @param {FeatureCollection<Polygon>} polygons input polygons\n * @returns {FeatureCollection<Point>} points that land within at least one polygon\n * @example\n * var searchWithin = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Polygon\",\n *         \"coordinates\": [[\n *           [-46.653,-23.543],\n *           [-46.634,-23.5346],\n *           [-46.613,-23.543],\n *           [-46.614,-23.559],\n *           [-46.631,-23.567],\n *           [-46.653,-23.560],\n *           [-46.653,-23.543]\n *         ]]\n *       }\n *     }\n *   ]\n * };\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.6318, -23.5523]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.6246, -23.5325]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.6062, -23.5513]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.663, -23.554]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-46.643, -23.557]\n *       }\n *     }\n *   ]\n * };\n *\n * var ptsWithin = turf.within(points, searchWithin);\n *\n * //=points\n *\n * //=searchWithin\n *\n * //=ptsWithin\n */\nmodule.exports = function (points, polygons) {\n    var pointsWithin = featureCollection([]);\n    for (var i = 0; i < polygons.features.length; i++) {\n        for (var j = 0; j < points.features.length; j++) {\n            var isInside = inside(points.features[j], polygons.features[i]);\n            if (isInside) {\n                pointsWithin.features.push(points.features[j]);\n            }\n        }\n    }\n    return pointsWithin;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/within/index.js\n// module id = 36\n// module chunks = 0","// 1. run tin on points\n// 2. calculate lenth of all edges and area of all triangles\n// 3. remove triangles that fail the max length test\n// 4. buffer the results slightly\n// 5. merge the results\nvar tin = require('@turf/tin');\nvar union = require('@turf/union');\nvar distance = require('@turf/distance');\n\n/**\n * Takes a set of {@link Point|points} and returns a concave hull polygon.\n *\n * Internally, this uses [turf-tin](https://github.com/Turfjs/turf-tin) to generate geometries.\n *\n * @param {FeatureCollection<Point>} points input points\n * @param {number} maxEdge the size of an edge necessary for part of the\n * hull to become concave (in miles)\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Polygon>} a concave hull\n * @throws {Error} if maxEdge parameter is missing or unable to compute hull\n * @example\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.601226, 44.642643]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.591442, 44.651436]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.580799, 44.648749]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.573589, 44.641788]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.587665, 44.64533]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-63.595218, 44.64765]\n *       }\n *     }\n *   ]\n * };\n *\n * var hull = turf.concave(points, 1, 'miles');\n *\n * var resultFeatures = points.features.concat(hull);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\nfunction concave(points, maxEdge, units) {\n    if (typeof maxEdge !== 'number') throw new Error('maxEdge parameter is required');\n\n    var tinPolys = tin(points);\n    var filteredPolys = tinPolys.features.filter(filterTriangles);\n    tinPolys.features = filteredPolys;\n    if (tinPolys.features.length < 1) {\n        throw new Error('too few polygons found to compute concave hull');\n    }\n\n    function filterTriangles(triangle) {\n        var pt1 = triangle.geometry.coordinates[0][0];\n        var pt2 = triangle.geometry.coordinates[0][1];\n        var pt3 = triangle.geometry.coordinates[0][2];\n        var dist1 = distance(pt1, pt2, units);\n        var dist2 = distance(pt2, pt3, units);\n        var dist3 = distance(pt1, pt3, units);\n        return (dist1 <= maxEdge && dist2 <= maxEdge && dist3 <= maxEdge);\n    }\n\n    return merge(tinPolys);\n}\n\nfunction merge(polygons) {\n    var merged = JSON.parse(JSON.stringify(polygons.features[0])),\n        features = polygons.features;\n\n    for (var i = 0, len = features.length; i < len; i++) {\n        var poly = features[i];\n        if (poly.geometry) {\n            merged = union(merged, poly);\n        }\n    }\n    return merged;\n}\n\nmodule.exports = concave;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/concave/index.js\n// module id = 37\n// module chunks = 0","var jsts = require('jsts');\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-82.574787, 35.594087],\n *       [-82.574787, 35.615581],\n *       [-82.545261, 35.615581],\n *       [-82.545261, 35.594087],\n *       [-82.574787, 35.594087]\n *     ]]\n *   }\n * };\n * var poly2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#00f\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-82.560024, 35.585153],\n *       [-82.560024, 35.602602],\n *       [-82.52964, 35.602602],\n *       [-82.52964, 35.585153],\n *       [-82.560024, 35.585153]\n *     ]]\n *   }\n * };\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly1, poly2]\n * };\n *\n * var union = turf.union(poly1, poly2);\n *\n * //=polygons\n *\n * //=union\n */\nmodule.exports = function () {\n    var reader = new jsts.io.GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = result.union(reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new jsts.io.GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/union/index.js\n// module id = 38\n// module chunks = 0","// JSTS. See https://github.com/bjornharrtell/jsts\n// Licenses:\n// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EDLv1.txt\n// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EPLv1.txt\n// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_LICENSE_ES6_COLLECTIONS.txt\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e(t.jsts=t.jsts||{})}(this,function(t){\"use strict\";function e(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])}function n(){}function i(){}function r(){}function s(){}function o(){}function a(){}function u(){}function l(t){this.name=\"RuntimeException\",this.message=t,this.stack=(new Error).stack,Error.call(this,t)}function h(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t}function c(){if(0===arguments.length)l.call(this);else if(1===arguments.length){var t=arguments[0];l.call(this,t)}}function f(){}function g(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)g.call(this,0,0);else if(1===arguments.length){var t=arguments[0];g.call(this,t.x,t.y,t.z)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];g.call(this,e,n,g.NULL_ORDINATE)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];this.x=i,this.y=r,this.z=s}}function d(){if(this.dimensionsToTest=2,0===arguments.length)d.call(this,2);else if(1===arguments.length){var t=arguments[0];if(2!==t&&3!==t)throw new i(\"only 2 or 3 dimensions may be specified\");this.dimensionsToTest=t}}function p(){}function v(){}function m(t){this.message=t||\"\"}function y(){}function x(t){this.message=t||\"\"}function E(t){this.message=t||\"\"}function I(){this.array_=[],arguments[0]instanceof v&&this.addAll(arguments[0])}function N(){if(I.apply(this),0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.ensureCapacity(t.length),this.add(t,!0)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.ensureCapacity(e.length),this.add(e,n)}}function C(){if(this.minx=null,this.maxx=null,this.miny=null,this.maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof C){var e=arguments[0];this.init(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3];this.init(r,s,o,a)}}function S(){}function w(){S.call(this,\"Projective point not representable on the Cartesian plane.\")}function L(){}function R(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1}function T(){}function P(t){this.str=t}function b(t){this.value=t}function O(){}function _(){if(this.hi=0,this.lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this.init(t)}else if(arguments[0]instanceof _){var e=arguments[0];this.init(e)}else if(\"string\"==typeof arguments[0]){var n=arguments[0];_.call(this,_.parse(n))}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.init(i,r)}}function M(){}function D(){}function A(){}function F(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var t=arguments[0];this.x=t.x,this.y=t.y,this.w=1}else if(2===arguments.length){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];this.x=e,this.y=n,this.w=1}else if(arguments[0]instanceof F&&arguments[1]instanceof F){var i=arguments[0],r=arguments[1];this.x=i.y*r.w-r.y*i.w,this.y=r.x*i.w-i.x*r.w,this.w=i.x*r.y-r.x*i.y}else if(arguments[0]instanceof g&&arguments[1]instanceof g){var s=arguments[0],o=arguments[1];this.x=s.y-o.y,this.y=o.x-s.x,this.w=s.x*o.y-o.x*s.y}}else if(3===arguments.length){var a=arguments[0],u=arguments[1],l=arguments[2];this.x=a,this.y=u,this.w=l}else if(4===arguments.length){var h=arguments[0],c=arguments[1],f=arguments[2],d=arguments[3],p=h.y-c.y,v=c.x-h.x,m=h.x*c.y-c.x*h.y,y=f.y-d.y,x=d.x-f.x,E=f.x*d.y-d.x*f.y;this.x=v*E-x*m,this.y=y*m-p*E,this.w=p*x-y*v}}function G(){}function q(){}function B(){this.envelope=null,this.factory=null,this.SRID=null,this.userData=null;var t=arguments[0];this.factory=t,this.SRID=t.getSRID()}function z(){}function V(){}function k(){}function Y(){}function U(){}function X(){}function H(){}function W(){}function j(){}function K(){}function Z(){}function Q(){}function J(){this.array_=[],arguments[0]instanceof v&&this.addAll(arguments[0])}function $(t){return null==t?$s:t.color}function tt(t){return null==t?null:t.parent}function et(t,e){null!==t&&(t.color=e)}function nt(t){return null==t?null:t.left}function it(t){return null==t?null:t.right}function rt(){this.root_=null,this.size_=0}function st(){}function ot(){}function at(){this.array_=[],arguments[0]instanceof v&&this.addAll(arguments[0])}function ut(){}function lt(){}function ht(){}function ct(){}function ft(){this.geometries=null;var t=arguments[0],e=arguments[1];if(B.call(this,e),null===t&&(t=[]),B.hasNullElements(t))throw new i(\"geometries must not contain null elements\");this.geometries=t}function gt(){var t=arguments[0],e=arguments[1];ft.call(this,t,e)}function dt(){if(this.geom=null,this.geomFact=null,this.bnRule=null,this.endpointMap=null,1===arguments.length){var t=arguments[0];dt.call(this,t,V.MOD2_BOUNDARY_RULE)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.geom=e,this.geomFact=e.getFactory(),this.bnRule=n}}function pt(){this.count=null}function vt(){}function mt(){}function yt(){}function xt(){}function Et(){}function It(){}function Nt(){}function Ct(){}function St(){this.points=null;var t=arguments[0],e=arguments[1];B.call(this,e),this.init(t)}function wt(){}function Lt(){this.coordinates=null;var t=arguments[0],e=arguments[1];B.call(this,e),this.init(t)}function Rt(){}function Tt(){this.shell=null,this.holes=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(B.call(this,n),null===t&&(t=this.getFactory().createLinearRing()),null===e&&(e=[]),B.hasNullElements(e))throw new i(\"holes must not contain null elements\");if(t.isEmpty()&&B.hasNonEmptyElements(e))throw new i(\"shell is empty but holes are not\");this.shell=t,this.holes=e}function Pt(){var t=arguments[0],e=arguments[1];ft.call(this,t,e)}function bt(){if(arguments[0]instanceof g&&arguments[1]instanceof ie){var t=arguments[0],e=arguments[1];bt.call(this,e.getCoordinateSequenceFactory().create(t),e)}else if(R(arguments[0],D)&&arguments[1]instanceof ie){var n=arguments[0],i=arguments[1];St.call(this,n,i),this.validateConstruction()}}function Ot(){var t=arguments[0],e=arguments[1];ft.call(this,t,e)}function _t(){if(this.factory=null,this.isUserDataCopied=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.factory=t}}function Mt(){}function Dt(){}function At(){}function Ft(){}function Gt(){if(this.dimension=3,this.coordinates=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];Gt.call(this,t,3)}else if(Number.isInteger(arguments[0])){var e=arguments[0];this.coordinates=new Array(e).fill(null);for(var n=0;n<e;n++)this.coordinates[n]=new g}else if(R(arguments[0],D)){var i=arguments[0];if(null===i)return this.coordinates=new Array(0).fill(null),null;this.dimension=i.getDimension(),this.coordinates=new Array(i.size()).fill(null);for(var n=0;n<this.coordinates.length;n++)this.coordinates[n]=i.getCoordinateCopy(n)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var r=arguments[0],s=arguments[1];this.coordinates=r,this.dimension=s,null===r&&(this.coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var o=arguments[0],a=arguments[1];this.coordinates=new Array(o).fill(null),this.dimension=a;for(var n=0;n<o;n++)this.coordinates[n]=new g}}function qt(){}function Bt(t,e){return t===e||t!==t&&e!==e}function zt(t,e){function n(t){return this&&this.constructor===n?(this._keys=[],this._values=[],this._itp=[],this.objectOnly=e,void(t&&Vt.call(this,t))):new n(t)}return e||io(t,\"size\",{get:Jt}),t.constructor=n,n.prototype=t,n}function Vt(t){this.add?t.forEach(this.add,this):t.forEach(function(t){this.set(t[0],t[1])},this)}function kt(t){return this.has(t)&&(this._keys.splice(no,1),this._values.splice(no,1),this._itp.forEach(function(t){no<t[0]&&t[0]--})),no>-1}function Yt(t){return this.has(t)?this._values[no]:void 0}function Ut(t,e){if(this.objectOnly&&e!==Object(e))throw new TypeError(\"Invalid value used as weak collection key\");if(e!==e||0===e)for(no=t.length;no--&&!Bt(t[no],e););else no=t.indexOf(e);return no>-1}function Xt(t){return Ut.call(this,this._keys,t)}function Ht(t,e){return this.has(t)?this._values[no]=e:this._values[this._keys.push(t)-1]=e,this}function Wt(){(this._keys||0).length=this._values.length=0}function jt(){return Qt(this._itp,this._keys)}function Kt(){return Qt(this._itp,this._values)}function Zt(){return Qt(this._itp,this._keys,this._values)}function Qt(t,e,n){var i=[0],r=!1;return t.push(i),{next:function(){var s,o=i[0];return!r&&o<e.length?(s=n?[e[o],n[o]]:e[o],i[0]++):(r=!0,t.splice(t.indexOf(i),1)),{done:r,value:s}}}}function Jt(){return this._values.length}function $t(t,e){for(var n=this.entries();;){var i=n.next();if(i.done)break;t.call(e,i.value[1],i.value[0],this)}}function te(){this.map_=new so}function ee(){if(this.modelType=null,this.scale=null,0===arguments.length)this.modelType=ee.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof ne){var t=arguments[0];this.modelType=t,t===ee.FIXED&&this.setScale(1)}else if(\"number\"==typeof arguments[0]){var e=arguments[0];this.modelType=ee.FIXED,this.setScale(e)}else if(arguments[0]instanceof ee){var n=arguments[0];this.modelType=n.modelType,this.scale=n.scale}}function ne(){this.name=null;var t=arguments[0];this.name=t,ne.nameToTypeMap.put(t,this)}function ie(){if(this.precisionModel=null,this.coordinateSequenceFactory=null,this.SRID=null,0===arguments.length)ie.call(this,new ee,0);else if(1===arguments.length){if(R(arguments[0],G)){var t=arguments[0];ie.call(this,new ee,0,t)}else if(arguments[0]instanceof ee){var e=arguments[0];ie.call(this,e,0,ie.getDefaultCoordinateSequenceFactory())}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];ie.call(this,n,i,ie.getDefaultCoordinateSequenceFactory())}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.precisionModel=r,this.coordinateSequenceFactory=o,this.SRID=s}}function re(t){this.geometryFactory=t||new ie}function se(t){this.parser=new re(t)}function oe(){this.result=null,this.inputLines=Array(2).fill().map(function(){return Array(2)}),this.intPt=new Array(2).fill(null),this.intLineIndex=null,this._isProper=null,this.pa=null,this.pb=null,this.precisionModel=null,this.intPt[0]=new g,this.intPt[1]=new g,this.pa=this.intPt[0],this.pb=this.intPt[1],this.result=0}function ae(){oe.apply(this)}function ue(){}function le(){this.p=null,this.crossingCount=0,this.isPointOnSegment=!1;var t=arguments[0];this.p=t}function he(){}function ce(){if(this.p0=null,this.p1=null,0===arguments.length)ce.call(this,new g,new g);else if(1===arguments.length){var t=arguments[0];ce.call(this,t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0=e,this.p1=n}else if(4===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3];ce.call(this,new g(i,r),new g(s,o))}}function fe(){if(this.matrix=null,0===arguments.length)this.matrix=Array(3).fill().map(function(){return Array(3)}),this.setAll(lt.FALSE);else if(1===arguments.length)if(\"string\"==typeof arguments[0]){var t=arguments[0];fe.call(this),this.set(t)}else if(arguments[0]instanceof fe){var e=arguments[0];fe.call(this),this.matrix[L.INTERIOR][L.INTERIOR]=e.matrix[L.INTERIOR][L.INTERIOR],this.matrix[L.INTERIOR][L.BOUNDARY]=e.matrix[L.INTERIOR][L.BOUNDARY],this.matrix[L.INTERIOR][L.EXTERIOR]=e.matrix[L.INTERIOR][L.EXTERIOR],this.matrix[L.BOUNDARY][L.INTERIOR]=e.matrix[L.BOUNDARY][L.INTERIOR],this.matrix[L.BOUNDARY][L.BOUNDARY]=e.matrix[L.BOUNDARY][L.BOUNDARY],this.matrix[L.BOUNDARY][L.EXTERIOR]=e.matrix[L.BOUNDARY][L.EXTERIOR],this.matrix[L.EXTERIOR][L.INTERIOR]=e.matrix[L.EXTERIOR][L.INTERIOR],this.matrix[L.EXTERIOR][L.BOUNDARY]=e.matrix[L.EXTERIOR][L.BOUNDARY],this.matrix[L.EXTERIOR][L.EXTERIOR]=e.matrix[L.EXTERIOR][L.EXTERIOR]}}function ge(){this.areaBasePt=null,this.triangleCent3=new g,this.areasum2=0,this.cg3=new g,this.lineCentSum=new g,this.totalLength=0,this.ptCount=0,this.ptCentSum=new g;var t=arguments[0];this.areaBasePt=null,this.add(t)}function de(t){this.message=t||\"\"}function pe(){this.array_=[]}function ve(){this.treeSet=new at,this.list=new I}function me(){if(this.geomFactory=null,this.inputPts=null,1===arguments.length){var t=arguments[0];me.call(this,me.extractCoordinates(t),t.getFactory())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.inputPts=ve.filterCoordinates(e),this.geomFactory=n}}function ye(){this.origin=null;var t=arguments[0];this.origin=t}function xe(){this.inputGeom=null,this.factory=null,this.pruneEmptyGeometry=!0,this.preserveGeometryCollectionType=!0,this.preserveCollections=!1,this.preserveType=!1}function Ee(){if(this.snapTolerance=0,this.srcPts=null,this.seg=new ce,this.allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof St&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];Ee.call(this,t.getCoordinates(),e)}else if(arguments[0]instanceof Array&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];this.srcPts=n,this._isClosed=Ee.isClosed(n),this.snapTolerance=i}}function Ie(){this.srcGeom=null;var t=arguments[0];this.srcGeom=t}function Ne(){if(xe.apply(this),this.snapTolerance=null,this.snapPts=null,this.isSelfSnap=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this.snapTolerance=t,this.snapPts=e}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.snapTolerance=n,this.snapPts=i,this.isSelfSnap=r}}function Ce(){this.isFirst=!0,this.commonMantissaBitsCount=53,this.commonBits=0,this.commonSignExp=null}function Se(){this.commonCoord=null,this.ccFilter=new we}function we(){this.commonBitsX=new Ce,this.commonBitsY=new Ce}function Le(){this.trans=null;var t=arguments[0];this.trans=t}function Re(){this.parent=null,this.atStart=null,this.max=null,this.index=null,this.subcollectionIterator=null;var t=arguments[0];this.parent=t,this.atStart=!0,this.index=0,this.max=t.getNumGeometries()}function Te(){if(this.boundaryRule=V.OGC_SFS_BOUNDARY_RULE,this.isIn=null,this.numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new i(\"Rule must be non-null\");this.boundaryRule=t}}function Pe(){}function be(){}function Oe(){this.pts=null,this.data=null;var t=arguments[0],e=arguments[1];this.pts=t,this.data=e}function _e(){}function Me(){this.bounds=null,this.item=null;var t=arguments[0],e=arguments[1];this.bounds=t,this.item=e}function De(){this._size=null,this.items=null,this._size=0,this.items=new I,this.items.add(null)}function Ae(){}function Fe(){}function Ge(){if(this.childBoundables=new I,this.bounds=null,this.level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.level=t}}function qe(){this.boundable1=null,this.boundable2=null,this._distance=null,this.itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.boundable1=t,this.boundable2=e,this.itemDistance=n,this._distance=this.distance()}function Be(){if(this.root=null,this.built=!1,this.itemBoundables=new I,this.nodeCapacity=null,0===arguments.length)Be.call(this,Be.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];f.isTrue(t>1,\"Node capacity must be greater than 1\"),this.nodeCapacity=t}}function ze(){}function Ve(){}function ke(){if(0===arguments.length)ke.call(this,ke.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];Be.call(this,t)}}function Ye(){var t=arguments[0];Ge.call(this,t)}function Ue(){}function Xe(){this.segString=null,this.coord=null,this.segmentIndex=null,this.segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.segString=t,this.coord=new g(e),this.segmentIndex=n,this.segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))}function He(){this.nodeMap=new rt,this.edge=null;var t=arguments[0];this.edge=t}function We(){this.nodeList=null,this.edge=null,this.nodeIt=null,this.currNode=null,this.nextNode=null,this.currSegIndex=0;var t=arguments[0];this.nodeList=t,this.edge=t.getEdge(),this.nodeIt=t.iterator(),this.readNextNode()}function je(){}function Ke(){this.nodeList=new He(this),this.pts=null,this.data=null;var t=arguments[0],e=arguments[1];this.pts=t,this.data=e}function Ze(){this.tempEnv1=new C,this.tempEnv2=new C,this.overlapSeg1=new ce,this.overlapSeg2=new ce}function Qe(){this.pts=null,this.start=null,this.end=null,this.env=null,this.context=null,this.id=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.pts=t,this.start=e,this.end=n,this.context=i}function Je(){}function $e(){}function tn(){}function en(){if(this.segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}}function nn(){if(this.monoChains=new I,this.index=new ke,this.idCounter=0,this.nodedSegStrings=null,this.nOverlaps=0,0===arguments.length);else if(1===arguments.length){var t=arguments[0];en.call(this,t)}}function rn(){Ze.apply(this),this.si=null;var t=arguments[0];this.si=t}function sn(){if(this.pt=null,1===arguments.length){var t=arguments[0];l.call(this,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];l.call(this,sn.msgWithCoord(e,n)),this.name=\"TopologyException\",this.pt=new g(n)}}function on(){}function an(){this.findAllIntersections=!1,this.isCheckEndSegmentsOnly=!1,this.li=null,this.interiorIntersection=null,this.intSegments=null,this.intersections=new I,this.intersectionCount=0,this.keepIntersections=!0;var t=arguments[0];this.li=t,this.interiorIntersection=null}function un(){this.li=new ae,this.segStrings=null,this.findAllIntersections=!1,this.segInt=null,this._isValid=!0;var t=arguments[0];this.segStrings=t}function ln(){this.nv=null;var t=arguments[0];this.nv=new un(ln.toSegmentStrings(t))}function hn(){this.mapOp=null;var t=arguments[0];this.mapOp=t}function cn(){}function fn(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];this.init(t.length)}else if(Number.isInteger(arguments[0])){var e=arguments[0];this.init(1),this.location[cn.ON]=e}else if(arguments[0]instanceof fn){var n=arguments[0];if(this.init(n.location.length),null!==n)for(var i=0;i<this.location.length;i++)this.location[i]=n.location[i]}}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.init(3),this.location[cn.ON]=r,this.location[cn.LEFT]=s,this.location[cn.RIGHT]=o}}function gn(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var t=arguments[0];this.elt[0]=new fn(t),this.elt[1]=new fn(t)}else if(arguments[0]instanceof gn){var e=arguments[0];this.elt[0]=new fn(e.elt[0]),this.elt[1]=new fn(e.elt[1])}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.elt[0]=new fn(L.NONE),this.elt[1]=new fn(L.NONE),this.elt[n].setLocation(i)}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.elt[0]=new fn(r,s,o),this.elt[1]=new fn(r,s,o)}else if(4===arguments.length){var a=arguments[0],u=arguments[1],l=arguments[2],h=arguments[3];this.elt[0]=new fn(L.NONE,L.NONE,L.NONE),this.elt[1]=new fn(L.NONE,L.NONE,L.NONE),this.elt[a].setLocations(u,l,h)}}function dn(){this.startDe=null,this.maxNodeDegree=-1,this.edges=new I,this.pts=new I,this.label=new gn(L.NONE),this.ring=null,this._isHole=null,this.shell=null,this.holes=new I,this.geometryFactory=null;var t=arguments[0],e=arguments[1];this.geometryFactory=e,this.computePoints(t),this.computeRing()}function pn(){var t=arguments[0],e=arguments[1];dn.call(this,t,e)}function vn(){var t=arguments[0],e=arguments[1];dn.call(this,t,e)}function mn(){if(this.label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.label=t}}function yn(){mn.apply(this),this.coord=null,this.edges=null;var t=arguments[0],e=arguments[1];this.coord=t,this.edges=e,this.label=new gn(0,L.NONE)}function xn(){this.nodeMap=new rt,this.nodeFact=null;var t=arguments[0];this.nodeFact=t}function En(){if(this.edge=null,this.label=null,this.node=null,this.p0=null,this.p1=null,this.dx=null,this.dy=null,this.quadrant=null,1===arguments.length){var t=arguments[0];this.edge=t}else if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];En.call(this,e,n,i,null)}else if(4===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3];En.call(this,r),this.init(s,o),this.label=a}}function In(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this.sym=null,this.next=null,this.nextMin=null,this.edgeRing=null,this.minEdgeRing=null,this.depth=[0,-999,-999];var t=arguments[0],e=arguments[1];if(En.call(this,t),this._isForward=e,e)this.init(t.getCoordinate(0),t.getCoordinate(1));else{var n=t.getNumPoints()-1;this.init(t.getCoordinate(n),t.getCoordinate(n-1))}this.computeDirectedLabel()}function Nn(){}function Cn(){if(this.edges=new I,this.nodes=null,this.edgeEndList=new I,0===arguments.length)this.nodes=new xn(new Nn);else if(1===arguments.length){var t=arguments[0];this.nodes=new xn(t)}}function Sn(){this.geometryFactory=null,this.shellList=new I;var t=arguments[0];this.geometryFactory=t}function wn(){this.op=null,this.geometryFactory=null,this.ptLocator=null,this.lineEdgesList=new I,this.resultLineList=new I;var t=arguments[0],e=arguments[1],n=arguments[2];this.op=t,this.geometryFactory=e,this.ptLocator=n}function Ln(){this.op=null,this.geometryFactory=null,this.resultPointList=new I;var t=arguments[0],e=arguments[1];arguments[2];this.op=t,this.geometryFactory=e}function Rn(){}function Tn(){this.geom=null;var t=arguments[0];this.geom=t}function Pn(){this.edgeMap=new rt,this.edgeList=null,this.ptInAreaLocation=[L.NONE,L.NONE]}function bn(){Pn.apply(this),this.resultAreaEdgeList=null,this.label=null,this.SCANNING_FOR_INCOMING=1,this.LINKING_TO_OUTGOING=2}function On(){Nn.apply(this)}function _n(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e}function Mn(){if(this.label=null,this.xValue=null,this.eventType=null,this.insertEvent=null,this.deleteEventIndex=null,this.obj=null,2===arguments.length){var t=arguments[0],e=arguments[1];this.eventType=Mn.DELETE,this.xValue=t,this.insertEvent=e}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.eventType=Mn.INSERT,this.label=n,this.xValue=i,this.obj=r}}function Dn(){}function An(){this._hasIntersection=!1,this.hasProper=!1,this.hasProperInterior=!1,this.properIntersectionPoint=null,this.li=null,this.includeProper=null,this.recordIsolated=null,this.isSelfIntersection=null,this.numIntersections=0,this.numTests=0,this.bdyNodes=null,this._isDone=!1,this.isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this.li=t,this.includeProper=e,this.recordIsolated=n}function Fn(){Dn.apply(this),this.events=new I,this.nOverlaps=null}function Gn(){this.min=r.POSITIVE_INFINITY,this.max=r.NEGATIVE_INFINITY}function qn(){}function Bn(){Gn.apply(this),this.item=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.min=t,this.max=e,this.item=n}function zn(){Gn.apply(this),this.node1=null,this.node2=null;var t=arguments[0],e=arguments[1];this.node1=t,this.node2=e,this.buildExtent(this.node1,this.node2)}function Vn(){this.leaves=new I,this.root=null,this.level=0}function kn(){if(this.lines=null,this.isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this.lines=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.lines=e,this.isForcedToLineString=n}}function Yn(){this.items=new I}function Un(){this.index=null;var t=arguments[0];if(!R(t,Rt))throw new i(\"Argument must be Polygonal\");this.index=new Hn(t)}function Xn(){this.counter=null;var t=arguments[0];this.counter=t}function Hn(){this.index=new Vn;var t=arguments[0];this.init(t)}function Wn(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new g(t),this.segmentIndex=e,this.dist=n}function jn(){this.nodeMap=new rt,this.edge=null;var t=arguments[0];this.edge=t}function Kn(){}function Zn(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new C,this.env2=new C;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new Kn;this.startIndex=e.getChainStartIndices(this.pts)}function Qn(){this.depth=Array(2).fill().map(function(){return Array(3)});for(var t=0;t<2;t++)for(var e=0;e<3;e++)this.depth[t][e]=Qn.NULL_VALUE}function Jn(){if(mn.apply(this),this.pts=null,this.env=null,this.eiList=new jn(this),this.name=null,this.mce=null,this._isIsolated=!0,this.depth=new Qn,this.depthDelta=0,1===arguments.length){var t=arguments[0];Jn.call(this,t,null)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.pts=e,this.label=n}}function $n(){if(Cn.apply(this),this.parentGeom=null,this.lineEdgeMap=new te,this.boundaryNodeRule=null,this.useBoundaryDeterminationRule=!0,this.argIndex=null,this.boundaryNodes=null,this._hasTooFewPoints=!1,this.invalidPoint=null,this.areaPtLocator=null,this.ptLocator=new Te,2===arguments.length){var t=arguments[0],e=arguments[1];$n.call(this,t,e,V.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.argIndex=n,this.parentGeom=i,this.boundaryNodeRule=r,null!==i&&this.add(i)}}function ti(){if(this.li=new ae,this.resultPrecisionModel=null,this.arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this.arg=new Array(1).fill(null),this.arg[0]=new $n(0,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];ti.call(this,e,n,V.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];i.getPrecisionModel().compareTo(r.getPrecisionModel())>=0?this.setComputationPrecision(i.getPrecisionModel()):this.setComputationPrecision(r.getPrecisionModel()),this.arg=new Array(2).fill(null),this.arg[0]=new $n(0,i,s),this.arg[1]=new $n(1,r,s)}}function ei(){this.pts=null,this._orientation=null;var t=arguments[0];this.pts=t,this._orientation=ei.orientation(t)}function ni(){this.edges=new I,this.ocaMap=new rt}function ii(){this.ptLocator=new Te,this.geomFact=null,this.resultGeom=null,this.graph=null,this.edgeList=new ni,this.resultPolyList=new I,this.resultLineList=new I,this.resultPointList=new I;var t=arguments[0],e=arguments[1];ti.call(this,t,e),this.graph=new Cn(new On),this.geomFact=t.getFactory()}function ri(){this.geom=new Array(2).fill(null),this.snapTolerance=null,this.cbr=null;var t=arguments[0],e=arguments[1];this.geom[0]=t,this.geom[1]=e,this.computeSnapTolerance()}function si(){this.geom=new Array(2).fill(null);var t=arguments[0],e=arguments[1];this.geom[0]=t,this.geom[1]=e}function oi(){this.factory=null,this.interiorPoint=null,this.maxWidth=0;var t=arguments[0];this.factory=t.getFactory(),this.add(t)}function ai(){this.poly=null,this.centreY=null,this.hiY=r.MAX_VALUE,this.loY=-r.MAX_VALUE;var t=arguments[0];this.poly=t,this.hiY=t.getEnvelopeInternal().getMaxY(),this.loY=t.getEnvelopeInternal().getMinY(),this.centreY=oi.avg(this.loY,this.hiY)}function ui(){this.centroid=null,this.minDistance=r.MAX_VALUE,this.interiorPoint=null;var t=arguments[0];this.centroid=t.getCentroid().getCoordinate(),this.addInterior(t),null===this.interiorPoint&&this.addEndpoints(t)}function li(){this.centroid=null,this.minDistance=r.MAX_VALUE,this.interiorPoint=null;var t=arguments[0];this.centroid=t.getCentroid().getCoordinate(),this.add(t)}function hi(){this.tempEnv1=new C,this.selectedSegment=new ce}function ci(){this.items=new I,this.subnode=[null,null]}function fi(){if(this.min=null,this.max=null,0===arguments.length)this.min=0,this.max=0;else if(1===arguments.length){var t=arguments[0];this.init(t.min,t.max)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.init(e,n)}}function gi(){}function di(t,e){var n,i,r,s,o={32:{d:127,c:128,b:0,a:0},64:{d:32752,c:0,b:0,a:0}},a={32:8,64:11}[t];if(s||(n=e<0||1/e<0,isFinite(e)||(s=o[t],n&&(s.d+=1<<t/4-1),i=Math.pow(2,a)-1,r=0)),!s){for(i={32:127,64:1023}[t],r=Math.abs(e);r>=2;)i++,r/=2;for(;r<1&&i>0;)i--,r*=2;i<=0&&(r/=2),32===t&&i>254&&(s={d:n?255:127,c:128,b:0,a:0},i=Math.pow(2,a)-1,r=0)}return i}function pi(){this.pt=0,this.level=0,this.interval=null;var t=arguments[0];this.computeKey(t)}function vi(){ci.apply(this),this.interval=null,this.centre=null,this.level=null;var t=arguments[0],e=arguments[1];this.interval=t,this.level=e,this.centre=(t.getMin()+t.getMax())/2}function mi(){}function yi(){ci.apply(this)}function xi(){this.root=null,this.minExtent=1,this.root=new yi}function Ei(){}function Ii(){this.ring=null,this.tree=null,this.crossings=0,this.interval=new fi;var t=arguments[0];this.ring=t,this.buildIndex()}function Ni(){hi.apply(this),this.mcp=null,this.p=null;var t=arguments[0],e=arguments[1];this.mcp=t,this.p=e}function Ci(){}function Si(){this.p0=null,this.p1=null,this.p2=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.p0=t,this.p1=e,this.p2=n}function wi(){this.input=null,this.extremalPts=null,this.centre=null,this.radius=0;var t=arguments[0];this.input=t}function Li(){if(this.inputGeom=null,this.isConvex=null,this.convexHullPts=null,this.minBaseSeg=new ce,this.minWidthPt=null,this.minPtIndex=null,this.minWidth=0,1===arguments.length){var t=arguments[0];Li.call(this,t,!1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.inputGeom=e,this.isConvex=n}}function Ri(){this.inputGeom=null,this.distanceTolerance=null;var t=arguments[0];this.inputGeom=t}function Ti(){xe.apply(this),this.distanceTolerance=null;var t=arguments[0];this.distanceTolerance=t}function Pi(){this._orig=null,this._sym=null,this._next=null;var t=arguments[0];this._orig=t}function bi(){this._isMarked=!1;var t=arguments[0];Pi.call(this,t)}function Oi(){this.vertexMap=new te}function _i(){this._isStart=!1;var t=arguments[0];bi.call(this,t)}function Mi(){Oi.apply(this)}function Di(){this.result=null,this.factory=null,this.graph=null,this.lines=new I,this.nodeEdgeStack=new pe,this.ringStartEdge=null,this.graph=new Mi}function Ai(){this.items=new I,this.subnode=new Array(4).fill(null)}function Fi(){this.pt=new g,this.level=0,this.env=null;var t=arguments[0];this.computeKey(t)}function Gi(){Ai.apply(this),this.env=null,this.centrex=null,this.centrey=null,this.level=null;var t=arguments[0],e=arguments[1];this.env=t,this.level=e,this.centrex=(t.getMinX()+t.getMaxX())/2,this.centrey=(t.getMinY()+t.getMaxY())/2}function qi(){Ai.apply(this)}function Bi(){this.root=null,this.minExtent=1,this.root=new qi}function zi(t){this.geometryFactory=t||new ie}function Vi(t){this.geometryFactory=t||new ie,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new zi(this.geometryFactory)}function ki(){this.parser=new zi(this.geometryFactory)}function Yi(t){this.geometryFactory=t||new ie,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new re(this.geometryFactory)}function Ui(t){return[t.x,t.y]}function Xi(t,e){this.geometryFactory=t||new ie,this.ol=e||\"undefined\"!=typeof ol&&ol}function Hi(){if(this.noder=null,this.scaleFactor=null,this.offsetX=null,this.offsetY=null,this.isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];Hi.call(this,t,e,0,0)}else if(4===arguments.length){var n=arguments[0],i=arguments[1];arguments[2],arguments[3];this.noder=n,this.scaleFactor=i,this.isScaled=!this.isIntegerPrecision()}}function Wi(){if(this.inputGeom=null,this.isClosedEndpointsInInterior=!0,this.nonSimpleLocation=null,1===arguments.length){var t=arguments[0];this.inputGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];\nthis.inputGeom=e,this.isClosedEndpointsInInterior=!n.isInBoundary(2)}}function ji(){this.pt=null,this.isClosed=null,this.degree=null;var t=arguments[0];this.pt=t,this.isClosed=!1,this.degree=0}function Ki(){if(this.quadrantSegments=Ki.DEFAULT_QUADRANT_SEGMENTS,this.endCapStyle=Ki.CAP_ROUND,this.joinStyle=Ki.JOIN_ROUND,this.mitreLimit=Ki.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this.simplifyFactor=Ki.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setQuadrantSegments(t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.setQuadrantSegments(e),this.setEndCapStyle(n)}else if(4===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3];this.setQuadrantSegments(i),this.setEndCapStyle(r),this.setJoinStyle(s),this.setMitreLimit(o)}}function Zi(){this.minIndex=-1,this.minCoord=null,this.minDe=null,this.orientedDe=null}function Qi(){this.array_=[]}function Ji(){this.finder=null,this.dirEdgeList=new I,this.nodes=new I,this.rightMostCoord=null,this.env=null,this.finder=new Zi}function $i(){this.inputLine=null,this.distanceTol=null,this.isDeleted=null,this.angleOrientation=he.COUNTERCLOCKWISE;var t=arguments[0];this.inputLine=t}function tr(){this.ptList=null,this.precisionModel=null,this.minimimVertexDistance=0,this.ptList=new I}function er(){this.maxCurveSegmentError=0,this.filletAngleQuantum=null,this.closingSegLengthFactor=1,this.segList=null,this.distance=0,this.precisionModel=null,this.bufParams=null,this.li=null,this.s0=null,this.s1=null,this.s2=null,this.seg0=new ce,this.seg1=new ce,this.offset0=new ce,this.offset1=new ce,this.side=0,this._hasNarrowConcaveAngle=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this.precisionModel=t,this.bufParams=e,this.li=new ae,this.filletAngleQuantum=Math.PI/2/e.getQuadrantSegments(),e.getQuadrantSegments()>=8&&e.getJoinStyle()===Ki.JOIN_ROUND&&(this.closingSegLengthFactor=er.MAX_CLOSING_SEG_LEN_FACTOR),this.init(n)}function nr(){this.distance=0,this.precisionModel=null,this.bufParams=null;var t=arguments[0],e=arguments[1];this.precisionModel=t,this.bufParams=e}function ir(){this.subgraphs=null,this.seg=new ce,this.cga=new he;var t=arguments[0];this.subgraphs=t}function rr(){this.upwardSeg=null,this.leftDepth=null;var t=arguments[0],e=arguments[1];this.upwardSeg=new ce(t),this.leftDepth=e}function sr(){this.inputGeom=null,this.distance=null,this.curveBuilder=null,this.curveList=new I;var t=arguments[0],e=arguments[1],n=arguments[2];this.inputGeom=t,this.distance=e,this.curveBuilder=n}function or(){this._hasIntersection=!1,this.hasProper=!1,this.hasProperInterior=!1,this.hasInterior=!1,this.properIntersectionPoint=null,this.li=null,this.isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this.li=t}function ar(){this.bufParams=null,this.workingPrecisionModel=null,this.workingNoder=null,this.geomFact=null,this.graph=null,this.edgeList=new ni;var t=arguments[0];this.bufParams=t}function ur(){this.li=new ae,this.segStrings=null;var t=arguments[0];this.segStrings=t}function lr(){this.li=null,this.pt=null,this.originalPt=null,this.ptScaled=null,this.p0Scaled=null,this.p1Scaled=null,this.scaleFactor=null,this.minx=null,this.maxx=null,this.miny=null,this.maxy=null,this.corner=new Array(4).fill(null),this.safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this.originalPt=t,this.pt=t,this.scaleFactor=e,this.li=n,e<=0)throw new i(\"Scale factor must be non-zero\");1!==e&&(this.pt=new g(this.scale(t.x),this.scale(t.y)),this.p0Scaled=new g,this.p1Scaled=new g),this.initCorners(this.pt)}function hr(){this.index=null;var t=arguments[0];this.index=t}function cr(){hi.apply(this),this.hotPixel=null,this.parentEdge=null,this.hotPixelVertexIndex=null,this._isNodeAdded=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this.hotPixel=t,this.parentEdge=e,this.hotPixelVertexIndex=n}function fr(){this.li=null,this.interiorIntersections=null;var t=arguments[0];this.li=t,this.interiorIntersections=new I}function gr(){this.pm=null,this.li=null,this.scaleFactor=null,this.noder=null,this.pointSnapper=null,this.nodedSegStrings=null;var t=arguments[0];this.pm=t,this.li=new ae,this.li.setPrecisionModel(t),this.scaleFactor=t.getScale()}function dr(){if(this.argGeom=null,this.distance=null,this.bufParams=new Ki,this.resultGeometry=null,this.saveException=null,1===arguments.length){var t=arguments[0];this.argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.argGeom=e,this.bufParams=n}}function pr(){this.comps=null;var t=arguments[0];this.comps=t}function vr(){if(this.component=null,this.segIndex=null,this.pt=null,2===arguments.length){var t=arguments[0],e=arguments[1];vr.call(this,t,vr.INSIDE_AREA,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.component=n,this.segIndex=i,this.pt=r}}function mr(){this.pts=null;var t=arguments[0];this.pts=t}function yr(){this.locations=null;var t=arguments[0];this.locations=t}function xr(){if(this.geom=null,this.terminateDistance=0,this.ptLocator=new Te,this.minDistanceLocation=null,this.minDistance=r.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];xr.call(this,t,e,0)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],s=arguments[2];this.geom=new Array(2).fill(null),this.geom[0]=n,this.geom[1]=i,this.terminateDistance=s}}function Er(){this.factory=null,this.directedEdges=new I,this.coordinates=null;var t=arguments[0];this.factory=t}function Ir(){this._isMarked=!1,this._isVisited=!1,this.data=null}function Nr(){Ir.apply(this),this.parentEdge=null,this.from=null,this.to=null,this.p0=null,this.p1=null,this.sym=null,this.edgeDirection=null,this.quadrant=null,this.angle=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.from=t,this.to=e,this.edgeDirection=i,this.p0=t.getCoordinate(),this.p1=n;var r=this.p1.x-this.p0.x,s=this.p1.y-this.p0.y;this.quadrant=Je.quadrant(r,s),this.angle=Math.atan2(s,r)}function Cr(){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];Nr.call(this,t,e,n,i)}function Sr(){if(Ir.apply(this),this.dirEdge=null,0===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.setDirectedEdges(t,e)}}function wr(){this.outEdges=new I,this.sorted=!1}function Lr(){if(Ir.apply(this),this.pt=null,this.deStar=null,1===arguments.length){var t=arguments[0];Lr.call(this,t,new wr)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.pt=e,this.deStar=n}}function Rr(){Sr.apply(this),this.line=null;var t=arguments[0];this.line=t}function Tr(){this.nodeMap=new rt}function Pr(){this.edges=new J,this.dirEdges=new J,this.nodeMap=new Tr}function br(){Pr.apply(this)}function Or(){this.graph=new br,this.mergedLineStrings=null,this.factory=null,this.edgeStrings=null}function _r(){this.edgeRing=null,this.next=null,this.label=-1;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];Nr.call(this,t,e,n,i)}function Mr(){Sr.apply(this),this.line=null;var t=arguments[0];this.line=t}function Dr(){this.geometryFactory=new ie,this.geomGraph=null,this.disconnectedRingcoord=null;var t=arguments[0];this.geomGraph=t}function Ar(){}function Fr(){if(this.edgeEnds=new I,1===arguments.length){var t=arguments[0];Fr.call(this,null,t)}else if(2===arguments.length){var e=(arguments[0],arguments[1]);En.call(this,e.getEdge(),e.getCoordinate(),e.getDirectedCoordinate(),new gn(e.getLabel())),this.insert(e)}}function Gr(){Pn.apply(this)}function qr(){var t=arguments[0],e=arguments[1];yn.call(this,t,e)}function Br(){Nn.apply(this)}function zr(){this.nodes=new xn(new Br)}function Vr(){this.li=new ae,this.geomGraph=null,this.nodeGraph=new zr,this.invalidPoint=null;var t=arguments[0];this.geomGraph=t}function kr(){this.graph=null,this.rings=new I,this.totalEnv=new C,this.index=null,this.nestedPt=null;var t=arguments[0];this.graph=t}function Yr(){if(this.errorType=null,this.pt=null,1===arguments.length){var t=arguments[0];Yr.call(this,t,null)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.errorType=e,null!==n&&(this.pt=n.copy())}}function Ur(){this.parentGeometry=null,this.isSelfTouchingRingFormingHoleValid=!1,this.validErr=null;var t=arguments[0];this.parentGeometry=t}function Xr(){this.factory=null,this.deList=new I,this.lowestEdge=null,this.ring=null,this.ringPts=null,this.holes=null,this.shell=null,this._isHole=null,this._isProcessed=!1,this._isIncludedSet=!1,this._isIncluded=!1;var t=arguments[0];this.factory=t}function Hr(){}function Wr(){Pr.apply(this),this.factory=null;var t=arguments[0];this.factory=t}function jr(){if(this.lineStringAdder=new Kr(this),this.graph=null,this.dangles=new I,this.cutEdges=new I,this.invalidRingLines=new I,this.holeList=null,this.shellList=null,this.polyList=null,this.isCheckingRingsValid=!0,this.extractOnlyPolygonal=null,this.geomFactory=null,0===arguments.length)jr.call(this,!1);else if(1===arguments.length){var t=arguments[0];this.extractOnlyPolygonal=t}}function Kr(){this.p=null;var t=arguments[0];this.p=t}function Zr(){this.li=new ae,this.ptLocator=new Te,this.arg=null,this.nodes=new xn(new Br),this.im=null,this.isolatedEdges=new I,this.invalidPoint=null;var t=arguments[0];this.arg=t}function Qr(){this.rectEnv=null;var t=arguments[0];this.rectEnv=t.getEnvelopeInternal()}function Jr(){this.li=new ae,this.rectEnv=null,this.diagUp0=null,this.diagUp1=null,this.diagDown0=null,this.diagDown1=null;var t=arguments[0];this.rectEnv=t,this.diagUp0=new g(t.getMinX(),t.getMinY()),this.diagUp1=new g(t.getMaxX(),t.getMaxY()),this.diagDown0=new g(t.getMinX(),t.getMaxY()),this.diagDown1=new g(t.getMaxX(),t.getMinY())}function $r(){this._isDone=!1}function ts(){this.rectangle=null,this.rectEnv=null;var t=arguments[0];this.rectangle=t,this.rectEnv=t.getEnvelopeInternal()}function es(){$r.apply(this),this.rectEnv=null,this._intersects=!1;var t=arguments[0];this.rectEnv=t}function ns(){$r.apply(this),this.rectSeq=null,this.rectEnv=null,this._containsPoint=!1;var t=arguments[0];this.rectSeq=t.getExteriorRing().getCoordinateSequence(),this.rectEnv=t.getEnvelopeInternal()}function is(){$r.apply(this),this.rectEnv=null,this.rectIntersector=null,this.hasIntersection=!1,this.p0=new g,this.p1=new g;var t=arguments[0];this.rectEnv=t.getEnvelopeInternal(),this.rectIntersector=new Jr(this.rectEnv)}function rs(){if(this._relate=null,2===arguments.length){var t=arguments[0],e=arguments[1];ti.call(this,t,e),this._relate=new Zr(this.arg)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];ti.call(this,n,i,r),this._relate=new Zr(this.arg)}}function ss(){this.geomFactory=null,this.skipEmpty=!1,this.inputGeoms=null;var t=arguments[0];this.geomFactory=ss.extractFactory(t),this.inputGeoms=t}function os(){this.pointGeom=null,this.otherGeom=null,this.geomFact=null;var t=arguments[0],e=arguments[1];this.pointGeom=t,this.otherGeom=e,this.geomFact=e.getFactory()}function as(){this.sortIndex=-1,this.comps=null;var t=arguments[0],e=arguments[1];this.sortIndex=t,this.comps=e}function us(){this.inputPolys=null,this.geomFactory=null;var t=arguments[0];this.inputPolys=t,null===this.inputPolys&&(this.inputPolys=new I)}function ls(){if(this.polygons=new I,this.lines=new I,this.points=new I,this.geomFact=null,1===arguments.length){if(R(arguments[0],v)){var t=arguments[0];this.extract(t)}else if(arguments[0]instanceof B){var e=arguments[0];this.extract(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.geomFact=i,this.extract(n)}}function hs(){_t.CoordinateOperation.apply(this),this.targetPM=null,this.removeCollapsed=!0;var t=arguments[0],e=arguments[1];this.targetPM=t,this.removeCollapsed=e}function cs(){this.targetPM=null,this.removeCollapsed=!0,this.changePrecisionModel=!1,this.isPointwise=!1;var t=arguments[0];this.targetPM=t}function fs(){this.pts=null,this.usePt=null,this.distanceTolerance=null,this.seg=new ce;var t=arguments[0];this.pts=t}function gs(){this.inputGeom=null,this.distanceTolerance=null,this.isEnsureValidTopology=!0;var t=arguments[0];this.inputGeom=t}function ds(){xe.apply(this),this.isEnsureValidTopology=!0,this.distanceTolerance=null;var t=arguments[0],e=arguments[1];this.isEnsureValidTopology=t,this.distanceTolerance=e}function ps(){if(this.parent=null,this.index=null,2===arguments.length){var t=arguments[0],e=arguments[1];ps.call(this,t,e,null,-1)}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],s=arguments[3];ce.call(this,n,i),this.parent=r,this.index=s}}function vs(){if(this.parentLine=null,this.segs=null,this.resultSegs=new I,this.minimumSize=null,1===arguments.length){var t=arguments[0];vs.call(this,t,2)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.parentLine=e,this.minimumSize=n,this.init()}}function ms(){this.index=new Bi}function ys(){this.querySeg=null,this.items=new I;var t=arguments[0];this.querySeg=t}function xs(){this.li=new ae,this.inputIndex=new ms,this.outputIndex=new ms,this.line=null,this.linePts=null,this.distanceTolerance=0;var t=arguments[0],e=arguments[1];this.inputIndex=t,this.outputIndex=e}function Es(){this.inputIndex=new ms,this.outputIndex=new ms,this.distanceTolerance=0}function Is(){this.inputGeom=null,this.lineSimplifier=new Es,this.linestringMap=null;var t=arguments[0];this.inputGeom=t}function Ns(){xe.apply(this),this.linestringMap=null;var t=arguments[0];this.linestringMap=t}function Cs(){this.tps=null;var t=arguments[0];this.tps=t}function Ss(){this.seg=null,this.segLen=null,this.splitPt=null,this.minimumLen=0;var t=arguments[0];this.seg=t,this.segLen=t.getLength()}function ws(){}function Ls(){}function Rs(){}function Ts(){if(this.p=null,1===arguments.length){var t=arguments[0];this.p=new g(t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p=new g(e,n)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];this.p=new g(i,r,s)}}function Ps(){this._isOnConstraint=null,this.constraint=null;var t=arguments[0];Ts.call(this,t)}function bs(){this._rot=null,this.vertex=null,this.next=null,this.data=null}function Os(){this.subdiv=null,this.isUsingTolerance=!1;var t=arguments[0];this.subdiv=t,this.isUsingTolerance=t.getTolerance()>0}function _s(){}function Ms(){this.subdiv=null,this.lastEdge=null;var t=arguments[0];this.subdiv=t,this.init()}function Ds(){if(this.seg=null,1===arguments.length){if(\"string\"==typeof arguments[0]){var t=arguments[0];l.call(this,t)}else if(arguments[0]instanceof ce){var e=arguments[0];l.call(this,\"Locate failed to converge (at edge: \"+e+\").  Possible causes include invalid Subdivision topology or very close sites\"),this.seg=new ce(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];l.call(this,Ds.msgWithSpatial(n,i)),this.seg=new ce(i)}}function As(){}function Fs(){this.visitedKey=0,this.quadEdges=new I,this.startingEdge=null,this.tolerance=null,this.edgeCoincidenceTolerance=null,this.frameVertex=new Array(3).fill(null),this.frameEnv=null,this.locator=null,this.seg=new ce,this.triEdges=new Array(3).fill(null);var t=arguments[0],e=arguments[1];this.tolerance=e,this.edgeCoincidenceTolerance=e/Fs.EDGE_COINCIDENCE_TOL_FACTOR,this.createFrame(t),this.startingEdge=this.initSubdiv(),this.locator=new Ms(this)}function Gs(){}function qs(){this.triList=new I}function Bs(){this.triList=new I}function zs(){this.coordList=new N,this.triCoords=new I}function Vs(){if(this.ls=null,this.data=null,2===arguments.length){var t=arguments[0],e=arguments[1];this.ls=new ce(t,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.ls=new ce(n,i),this.data=r}else if(6===arguments.length){var s=arguments[0],o=arguments[1],a=arguments[2],u=arguments[3],l=arguments[4],h=arguments[5];Vs.call(this,new g(s,o,a),new g(u,l,h))}else if(7===arguments.length){var c=arguments[0],f=arguments[1],d=arguments[2],p=arguments[3],v=arguments[4],m=arguments[5],y=arguments[6];Vs.call(this,new g(c,f,d),new g(p,v,m),y)}}function ks(){}function Ys(){if(this.p=null,this.data=null,this.left=null,this.right=null,this.count=null,2===arguments.length){var t=arguments[0],e=arguments[1];this.p=new g(t),this.left=null,this.right=null,this.count=1,this.data=e}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.p=new g(n,i),this.left=null,this.right=null,this.count=1,this.data=r}}function Us(){if(this.root=null,this.numberOfNodes=null,this.tolerance=null,0===arguments.length)Us.call(this,0);else if(1===arguments.length){var t=arguments[0];this.tolerance=t}}function Xs(){this.tolerance=null,this.matchNode=null,this.matchDist=0,this.p=null;var t=arguments[0],e=arguments[1];this.p=t,this.tolerance=e}function Hs(){this.initialVertices=null,this.segVertices=null,this.segments=new I,this.subdiv=null,this.incDel=null,this.convexHull=null,this.splitFinder=new Ls,this.kdt=null,this.vertexFactory=null,this.computeAreaEnv=null,this.splitPt=null,this.tolerance=null;var t=arguments[0],e=arguments[1];this.initialVertices=new I(t),this.tolerance=e,this.kdt=new Us(e)}function Ws(){this.siteCoords=null,this.tolerance=0,this.subdiv=null}function js(){this.siteCoords=null,this.constraintLines=null,this.tolerance=0,this.subdiv=null,this.constraintVertexMap=new rt}function Ks(){this.siteCoords=null,this.tolerance=0,this.subdiv=null,this.clipEnv=null,this.diagramEnv=null}function Zs(){}\"fill\"in Array.prototype||Object.defineProperty(Array.prototype,\"fill\",{configurable:!0,value:function(t){if(void 0===this||null===this)throw new TypeError(this+\" is not an object\");var e=Object(this),n=Math.max(Math.min(e.length,9007199254740991),0)||0,i=1 in arguments?parseInt(Number(arguments[1]),10)||0:0;i=i<0?Math.max(n+i,0):Math.min(i,n);var r=2 in arguments&&void 0!==arguments[2]?parseInt(Number(arguments[2]),10)||0:n;for(r=r<0?Math.max(n+arguments[2],0):Math.min(r,n);i<r;)e[i]=t,++i;return e},writable:!0}),Number.isFinite=Number.isFinite||function(t){return\"number\"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return\"number\"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!==t},Math.trunc=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)},e(n.prototype,{interfaces_:function(){return[]},getClass:function(){return n}}),n.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n},r.isNaN=function(t){return Number.isNaN(t)},r.doubleToLongBits=function(t){return t},r.longBitsToDouble=function(t){return t},r.isInfinite=function(t){return!Number.isFinite(t)},r.MAX_VALUE=Number.MAX_VALUE,l.prototype=Object.create(Error.prototype),l.prototype.constructor=Error,h(c,l),e(c.prototype,{interfaces_:function(){return[]},getClass:function(){return c}}),e(f.prototype,{interfaces_:function(){return[]},getClass:function(){return f}}),f.shouldNeverReachHere=function(){if(0===arguments.length)f.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new c(\"Should never reach here\"+(null!==t?\": \"+t:\"\"))}},f.isTrue=function(){if(1===arguments.length){var t=arguments[0];f.isTrue(t,null)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!e)throw null===n?new c:new c(n)}},f.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];f.equals(t,e,null)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];if(!i.equals(n))throw new c(\"Expected \"+n+\" but encountered \"+i+(null!==r?\": \"+r:\"\"))}},e(g.prototype,{setOrdinate:function(t,e){switch(t){case g.X:this.x=e;break;case g.Y:this.y=e;break;case g.Z:this.z=e;break;default:throw new i(\"Invalid ordinate index: \"+t)}},equals2D:function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],i=arguments[1];return!!n.equalsWithTolerance(this.x,e.x,i)&&!!n.equalsWithTolerance(this.y,e.y,i)}},getOrdinate:function(t){switch(t){case g.X:return this.x;case g.Y:return this.y;case g.Z:return this.z}throw new i(\"Invalid ordinate index: \"+t)},equals3D:function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||r.isNaN(this.z)&&r.isNaN(t.z))},equals:function(t){return t instanceof g&&this.equals2D(t)},equalInZ:function(t,e){return n.equalsWithTolerance(this.z,t.z,e)},compareTo:function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},clone:function(){try{var t=null;return t}catch(t){if(t instanceof CloneNotSupportedException)return f.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\"),null;throw t}finally{}},copy:function(){return new g(this)},toString:function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\")\"},distance3D:function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return Math.sqrt(e*e+n*n+i*i)},distance:function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},hashCode:function(){var t=17;return t=37*t+g.hashCode(this.x),t=37*t+g.hashCode(this.y)},setCoordinate:function(t){this.x=t.x,this.y=t.y,this.z=t.z},interfaces_:function(){return[s,o,u]},getClass:function(){return g}}),g.hashCode=function(){if(1===arguments.length){var t=arguments[0],e=r.doubleToLongBits(t);return Math.trunc(e^e>>>32)}},e(d.prototype,{compare:function(t,e){var n=t,i=e,r=d.compare(n.x,i.x);if(0!==r)return r;var s=d.compare(n.y,i.y);if(0!==s)return s;if(this.dimensionsToTest<=2)return 0;var o=d.compare(n.z,i.z);return o},interfaces_:function(){return[a]},getClass:function(){return d}}),d.compare=function(t,e){return t<e?-1:t>e?1:r.isNaN(t)?r.isNaN(e)?0:-1:r.isNaN(e)?1:0},g.DimensionalComparator=d,g.serialVersionUID=0x5cbf2c235c7e5800,g.NULL_ORDINATE=r.NaN,g.X=0,g.Y=1,g.Z=2,p.prototype.hasNext=function(){},p.prototype.next=function(){},p.prototype.remove=function(){},v.prototype.add=function(){},v.prototype.addAll=function(){},v.prototype.isEmpty=function(){},v.prototype.iterator=function(){},v.prototype.size=function(){},v.prototype.toArray=function(){},v.prototype.remove=function(){},m.prototype=new Error,m.prototype.name=\"IndexOutOfBoundsException\",y.prototype=Object.create(v.prototype),y.prototype.constructor=y,y.prototype.get=function(){},y.prototype.set=function(){},y.prototype.isEmpty=function(){},x.prototype=new Error,x.prototype.name=\"NoSuchElementException\",E.prototype=new Error,E.prototype.name=\"OperationNotSupported\",I.prototype=Object.create(y.prototype),I.prototype.constructor=I,I.prototype.ensureCapacity=function(){},I.prototype.interfaces_=function(){return[y,v]},I.prototype.add=function(t){return 1===arguments.length?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]),!0},I.prototype.clear=function(){this.array_=[]},I.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},I.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},I.prototype.iterator=function(){return new Qs(this)},I.prototype.get=function(t){if(t<0||t>=this.size())throw new m;return this.array_[t]},I.prototype.isEmpty=function(){return 0===this.array_.length},I.prototype.size=function(){return this.array_.length},I.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},I.prototype.remove=function(t){for(var e=!1,n=0,i=this.array_.length;n<i;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e};var Qs=function(t){this.arrayList_=t,this.position_=0};Qs.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new x;return this.arrayList_.get(this.position_++)},Qs.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},Qs.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},Qs.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},h(N,I),e(N.prototype,{getCoordinate:function(t){return this.get(t)},addAll:function(){if(2===arguments.length){for(var t=arguments[0],e=arguments[1],n=!1,i=t.iterator();i.hasNext();)this.add(i.next(),e),n=!0;return n}return I.prototype.addAll.apply(this,arguments)},clone:function t(){for(var t=I.prototype.clone.call(this),e=0;e<this.size();e++)t.add(e,this.get(e).copy());return t},toCoordinateArray:function(){return this.toArray(N.coordArrayType)},add:function(){if(1===arguments.length){var t=arguments[0];I.prototype.add.call(this,t)}else if(2===arguments.length){if(arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];return this.add(e,n,!0),!0}if(arguments[0]instanceof g&&\"boolean\"==typeof arguments[1]){var i=arguments[0],r=arguments[1];if(!r&&this.size()>=1){var s=this.get(this.size()-1);if(s.equals2D(i))return null}I.prototype.add.call(this,i)}else if(arguments[0]instanceof Object&&\"boolean\"==typeof arguments[1]){var o=arguments[0],a=arguments[1];return this.add(o,a),!0}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var u=arguments[0],l=arguments[1],h=arguments[2];if(h)for(var c=0;c<u.length;c++)this.add(u[c],l);else for(var c=u.length-1;c>=0;c--)this.add(u[c],l);return!0}if(\"boolean\"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof g){var f=arguments[0],d=arguments[1],p=arguments[2];if(!p){var v=this.size();if(v>0){if(f>0){var m=this.get(f-1);if(m.equals2D(d))return null}if(f<v){var y=this.get(f);if(y.equals2D(d))return null}}}I.prototype.add.call(this,f,d)}}else if(4===arguments.length){var x=arguments[0],E=arguments[1],N=arguments[2],C=arguments[3],S=1;N>C&&(S=-1);for(var c=N;c!==C;c+=S)this.add(x[c],E);return!0}},closeRing:function(){this.size()>0&&this.add(new g(this.get(0)),!1)},interfaces_:function(){return[]},getClass:function(){return N}}),N.coordArrayType=new Array(0).fill(null),e(C.prototype,{getArea:function(){return this.getWidth()*this.getHeight()},equals:function(t){if(!(t instanceof C))return!1;var e=t;return this.isNull()?e.isNull():this.maxx===e.getMaxX()&&this.maxy===e.getMaxY()&&this.minx===e.getMinX()&&this.miny===e.getMinY()},intersection:function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new C;var e=this.minx>t.minx?this.minx:t.minx,n=this.miny>t.miny?this.miny:t.miny,i=this.maxx<t.maxx?this.maxx:t.maxx,r=this.maxy<t.maxy?this.maxy:t.maxy;return new C(e,i,n,r)},isNull:function(){return this.maxx<this.minx},getMaxX:function(){return this.maxx},covers:function(){if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof C){var e=arguments[0];return!this.isNull()&&!e.isNull()&&(e.getMinX()>=this.minx&&e.getMaxX()<=this.maxx&&e.getMinY()>=this.miny&&e.getMaxY()<=this.maxy)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&(n>=this.minx&&n<=this.maxx&&i>=this.miny&&i<=this.maxy)}},intersects:function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t.minx>this.maxx||t.maxx<this.minx||t.miny>this.maxy||t.maxy<this.miny)}if(arguments[0]instanceof g){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&!(n>this.maxx||n<this.minx||i>this.maxy||i<this.miny)}},getMinY:function(){return this.miny},getMinX:function(){return this.minx},expandToInclude:function(){if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof C){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this.minx=e.getMinX(),this.maxx=e.getMaxX(),this.miny=e.getMinY(),this.maxy=e.getMaxY()):(e.minx<this.minx&&(this.minx=e.minx),e.maxx>this.maxx&&(this.maxx=e.maxx),e.miny<this.miny&&(this.miny=e.miny),e.maxy>this.maxy&&(this.maxy=e.maxy))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.isNull()?(this.minx=n,this.maxx=n,this.miny=i,this.maxy=i):(n<this.minx&&(this.minx=n),n>this.maxx&&(this.maxx=n),i<this.miny&&(this.miny=i),i>this.maxy&&(this.maxy=i))}},minExtent:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e},getWidth:function(){return this.isNull()?0:this.maxx-this.minx},compareTo:function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this.minx<e.minx?-1:this.minx>e.minx?1:this.miny<e.miny?-1:this.miny>e.miny?1:this.maxx<e.maxx?-1:this.maxx>e.maxx?1:this.maxy<e.maxy?-1:this.maxy>e.maxy?1:0},translate:function(t,e){return this.isNull()?null:void this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},toString:function(){return\"Env[\"+this.minx+\" : \"+this.maxx+\", \"+this.miny+\" : \"+this.maxy+\"]\"},setToNull:function(){this.minx=0,this.maxx=-1,this.miny=0,this.maxy=-1},getHeight:function(){return this.isNull()?0:this.maxy-this.miny},maxExtent:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},expandBy:function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this.minx-=e,this.maxx+=e,this.miny-=n,this.maxy+=n,(this.minx>this.maxx||this.miny>this.maxy)&&this.setToNull()}},contains:function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof g){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.covers(n,i)}},centre:function(){return this.isNull()?null:new g((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},init:function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof C){var e=arguments[0];this.minx=e.minx,this.maxx=e.maxx,this.miny=e.miny,this.maxy=e.maxy}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3];r<s?(this.minx=r,this.maxx=s):(this.minx=s,this.maxx=r),o<a?(this.miny=o,this.maxy=a):(this.miny=a,this.maxy=o)}},getMaxY:function(){return this.maxy},distance:function(t){if(this.intersects(t))return 0;var e=0;this.maxx<t.minx?e=t.minx-this.maxx:this.minx>t.maxx&&(e=this.minx-t.maxx);var n=0;return this.maxy<t.miny?n=t.miny-this.maxy:this.miny>t.maxy&&(n=this.miny-t.maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},hashCode:function(){var t=17;return t=37*t+g.hashCode(this.minx),t=37*t+g.hashCode(this.maxx),t=37*t+g.hashCode(this.miny),t=37*t+g.hashCode(this.maxy)},interfaces_:function(){return[s,u]},getClass:function(){return C}}),C.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3],a=Math.min(s.x,o.x),u=Math.max(s.x,o.x),l=Math.min(i.x,r.x),h=Math.max(i.x,r.x);return!(l>u)&&(!(h<a)&&(a=Math.min(s.y,o.y),u=Math.max(s.y,o.y),l=Math.min(i.y,r.y),h=Math.max(i.y,r.y),!(l>u)&&!(h<a)))}},C.serialVersionUID=0x51845cd552189800,h(w,S),e(w.prototype,{interfaces_:function(){return[]},getClass:function(){return w}}),e(L.prototype,{interfaces_:function(){return[]},getClass:function(){return L}}),L.toLocationSymbol=function(t){switch(t){case L.EXTERIOR:return\"e\";case L.BOUNDARY:return\"b\";case L.INTERIOR:return\"i\";case L.NONE:return\"-\"}throw new i(\"Unknown location value: \"+t)},L.INTERIOR=0,L.BOUNDARY=1,L.EXTERIOR=2,L.NONE=-1,e(T.prototype,{interfaces_:function(){return[]},getClass:function(){return T}}),T.log10=function(t){var e=Math.log(t);return r.isInfinite(e)?e:r.isNaN(e)?e:e/T.LOG_10},T.min=function(t,e,n,i){var r=t;return e<r&&(r=e),n<r&&(r=n),i<r&&(r=i),r},T.clamp=function(){if(\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];\nreturn t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var i=arguments[0],r=arguments[1],s=arguments[2];return i<r?r:i>s?s:i}},T.wrap=function(t,e){return t<0?e- -t%e:t%e},T.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=t;return e>i&&(i=e),n>i&&(i=n),i}if(4===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3],i=r;return s>i&&(i=s),o>i&&(i=o),a>i&&(i=a),i}},T.average=function(t,e){return(t+e)/2},T.LOG_10=Math.log(10),P.prototype.append=function(t){this.str+=t},P.prototype.setCharAt=function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)},P.prototype.toString=function(t){return this.str},b.prototype.intValue=function(){return this.value},b.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},b.isNaN=function(t){return Number.isNaN(t)},O.isWhitespace=function(t){return t<=32&&t>=0||127==t},O.toUpperCase=function(t){return t.toUpperCase()},e(_.prototype,{le:function(t){return this.hi<t.hi||this.hi===t.hi&&this.lo<=t.lo},extractSignificantDigits:function(t,e){var n=this.abs(),i=_.magnitude(n.hi),r=_.TEN.pow(i);n=n.divide(r),n.gt(_.TEN)?(n=n.divide(_.TEN),i+=1):n.lt(_.ONE)&&(n=n.multiply(_.TEN),i-=1);for(var s=i+1,o=new P,a=_.MAX_PRINT_DIGITS-1,u=0;u<=a;u++){t&&u===s&&o.append(\".\");var l=Math.trunc(n.hi);if(l<0)break;var h=!1,c=0;l>9?(h=!0,c=\"9\"):c=\"0\"+l,o.append(c),n=n.subtract(_.valueOf(l)).multiply(_.TEN),h&&n.selfAdd(_.TEN);var f=!0,g=_.magnitude(n.hi);if(g<0&&Math.abs(g)>=a-u&&(f=!1),!f)break}return e[0]=i,o.toString()},sqr:function(){return this.multiply(this)},doubleValue:function(){return this.hi+this.lo},subtract:function(){if(arguments[0]instanceof _){var t=arguments[0];return this.add(t.negate())}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.add(-e)}},equals:function(){if(1===arguments.length){var t=arguments[0];return this.hi===t.hi&&this.lo===t.lo}},isZero:function(){return 0===this.hi&&0===this.lo},selfSubtract:function(){if(arguments[0]instanceof _){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t.hi,-t.lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}},getSpecialNumberString:function(){return this.isZero()?\"0.0\":this.isNaN()?\"NaN \":null},min:function(t){return this.le(t)?this:t},selfDivide:function(){if(1===arguments.length){if(arguments[0]instanceof _){var t=arguments[0];return this.selfDivide(t.hi,t.lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,s=null,o=null,a=null,u=null,l=null,h=null,c=null;return u=this.hi/n,l=_.SPLIT*u,r=l-u,c=_.SPLIT*n,r=l-r,s=u-r,o=c-n,h=u*n,o=c-o,a=n-o,c=r*o-h+r*a+s*o+s*a,l=(this.hi-h-c+this.lo-u*i)/n,c=u+l,this.hi=c,this.lo=u-c+l,this}},dump:function(){return\"DD<\"+this.hi+\", \"+this.lo+\">\"},divide:function(){if(arguments[0]instanceof _){var t=arguments[0],e=null,n=null,i=null,s=null,o=null,a=null,u=null,l=null;o=this.hi/t.hi,a=_.SPLIT*o,e=a-o,l=_.SPLIT*t.hi,e=a-e,n=o-e,i=l-t.hi,u=o*t.hi,i=l-i,s=t.hi-i,l=e*i-u+e*s+n*i+n*s,a=(this.hi-u-l+this.lo-o*t.lo)/t.hi,l=o+a;var h=l,c=o-l+a;return new _(h,c)}if(\"number\"==typeof arguments[0]){var f=arguments[0];return r.isNaN(f)?_.createNaN():_.copy(this).selfDivide(f,0)}},ge:function(t){return this.hi>t.hi||this.hi===t.hi&&this.lo>=t.lo},pow:function(t){if(0===t)return _.valueOf(1);var e=new _(this),n=_.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2===1&&n.selfMultiply(e),i/=2,i>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n},ceil:function(){if(this.isNaN())return _.NaN;var t=Math.ceil(this.hi),e=0;return t===this.hi&&(e=Math.ceil(this.lo)),new _(t,e)},compareTo:function(t){var e=t;return this.hi<e.hi?-1:this.hi>e.hi?1:this.lo<e.lo?-1:this.lo>e.lo?1:0},rint:function(){if(this.isNaN())return this;var t=this.add(.5);return t.floor()},setValue:function(){if(arguments[0]instanceof _){var t=arguments[0];return this.init(t),this}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.init(e),this}},max:function(t){return this.ge(t)?this:t},sqrt:function(){if(this.isZero())return _.valueOf(0);if(this.isNegative())return _.NaN;var t=1/Math.sqrt(this.hi),e=this.hi*t,n=_.valueOf(e),i=this.subtract(n.sqr()),r=i.hi*(.5*t);return n.add(r)},selfAdd:function(){if(1===arguments.length){if(arguments[0]instanceof _){var t=arguments[0];return this.selfAdd(t.hi,t.lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0],n=null,i=null,r=null,s=null,o=null,a=null;return r=this.hi+e,o=r-this.hi,s=r-o,s=e-o+(this.hi-s),a=s+this.lo,n=r+a,i=a+(r-n),this.hi=n+i,this.lo=i+(n-this.hi),this}}else if(2===arguments.length){var u=arguments[0],l=arguments[1],n=null,i=null,h=null,c=null,r=null,s=null,o=null,a=null;r=this.hi+u,h=this.lo+l,o=r-this.hi,a=h-this.lo,s=r-o,c=h-a,s=u-o+(this.hi-s),c=l-a+(this.lo-c),o=s+h,n=r+o,i=o+(r-n),o=c+i;var f=n+o,g=o+(n-f);return this.hi=f,this.lo=g,this}},selfMultiply:function(){if(1===arguments.length){if(arguments[0]instanceof _){var t=arguments[0];return this.selfMultiply(t.hi,t.lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,s=null,o=null,a=null,u=null,l=null;u=_.SPLIT*this.hi,r=u-this.hi,l=_.SPLIT*n,r=u-r,s=this.hi-r,o=l-n,u=this.hi*n,o=l-o,a=n-o,l=r*o-u+r*a+s*o+s*a+(this.hi*i+this.lo*n);var h=u+l;r=u-h;var c=l+r;return this.hi=h,this.lo=c,this}},selfSqr:function(){return this.selfMultiply(this)},floor:function(){if(this.isNaN())return _.NaN;var t=Math.floor(this.hi),e=0;return t===this.hi&&(e=Math.floor(this.lo)),new _(t,e)},negate:function(){return this.isNaN()?this:new _((-this.hi),(-this.lo))},clone:function(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return null;throw t}finally{}},multiply:function(){if(arguments[0]instanceof _){var t=arguments[0];return t.isNaN()?_.createNaN():_.copy(this).selfMultiply(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return r.isNaN(e)?_.createNaN():_.copy(this).selfMultiply(e,0)}},isNaN:function(){return r.isNaN(this.hi)},intValue:function(){return Math.trunc(this.hi)},toString:function(){var t=_.magnitude(this.hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()},toStandardNotation:function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),i=e[0]+1,r=n;if(\".\"===n.charAt(0))r=\"0\"+n;else if(i<0)r=\"0.\"+_.stringOfChar(\"0\",-i)+n;else if(n.indexOf(\".\")===-1){var s=i-n.length,o=_.stringOfChar(\"0\",s);r=n+o+\".0\"}return this.isNegative()?\"-\"+r:r},reciprocal:function(){var t=null,e=null,n=null,i=null,r=null,s=null,o=null,a=null;r=1/this.hi,s=_.SPLIT*r,t=s-r,a=_.SPLIT*this.hi,t=s-t,e=r-t,n=a-this.hi,o=r*this.hi,n=a-n,i=this.hi-n,a=t*n-o+t*i+e*n+e*i,s=(1-o-a-r*this.lo)/this.hi;var u=r+s,l=r-u+s;return new _(u,l)},toSciNotation:function(){if(this.isZero())return _.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),i=_.SCI_NOT_EXPONENT_CHAR+e[0];if(\"0\"===n.charAt(0))throw new IllegalStateException(\"Found leading zero: \"+n);var r=\"\";n.length>1&&(r=n.substring(1));var s=n.charAt(0)+\".\"+r;return this.isNegative()?\"-\"+s+i:s+i},abs:function(){return this.isNaN()?_.NaN:this.isNegative()?this.negate():new _(this)},isPositive:function(){return this.hi>0||0===this.hi&&this.lo>0},lt:function(t){return this.hi<t.hi||this.hi===t.hi&&this.lo<t.lo},add:function(){if(arguments[0]instanceof _){var t=arguments[0];return _.copy(this).selfAdd(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return _.copy(this).selfAdd(e)}},init:function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this.hi=t,this.lo=0}else if(arguments[0]instanceof _){var e=arguments[0];this.hi=e.hi,this.lo=e.lo}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.hi=n,this.lo=i}},gt:function(t){return this.hi>t.hi||this.hi===t.hi&&this.lo>t.lo},isNegative:function(){return this.hi<0||0===this.hi&&this.lo<0},trunc:function(){return this.isNaN()?_.NaN:this.isPositive()?this.floor():this.ceil()},signum:function(){return this.hi>0?1:this.hi<0?-1:this.lo>0?1:this.lo<0?-1:0},interfaces_:function(){return[u,s,o]},getClass:function(){return _}}),_.sqr=function(t){return _.valueOf(t).selfMultiply(t)},_.valueOf=function(){if(\"string\"==typeof arguments[0]){var t=arguments[0];return _.parse(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return new _(e)}},_.sqrt=function(t){return _.valueOf(t).sqrt()},_.parse=function(t){for(var e=0,n=t.length;O.isWhitespace(t.charAt(e));)e++;var i=!1;if(e<n){var r=t.charAt(e);\"-\"!==r&&\"+\"!==r||(e++,\"-\"===r&&(i=!0))}for(var s=new _,o=0,a=0,u=0;;){if(e>=n)break;var l=t.charAt(e);if(e++,O.isDigit(l)){var h=l-\"0\";s.selfMultiply(_.TEN),s.selfAdd(h),o++}else{if(\".\"!==l){if(\"e\"===l||\"E\"===l){var c=t.substring(e);try{u=b.parseInt(c)}catch(e){throw e instanceof NumberFormatException?new NumberFormatException(\"Invalid exponent \"+c+\" in string \"+t):e}finally{}break}throw new NumberFormatException(\"Unexpected character '\"+l+\"' at position \"+e+\" in string \"+t)}a=o}}var f=s,g=o-a-u;if(0===g)f=s;else if(g>0){var d=_.TEN.pow(g);f=s.divide(d)}else if(g<0){var d=_.TEN.pow(-g);f=s.multiply(d)}return i?f.negate():f},_.createNaN=function(){return new _(r.NaN,r.NaN)},_.copy=function(t){return new _(t)},_.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),i=Math.trunc(Math.floor(n)),r=Math.pow(10,i);return 10*r<=e&&(i+=1),i},_.stringOfChar=function(t,e){for(var n=new P,i=0;i<e;i++)n.append(t);return n.toString()},_.PI=new _(3.141592653589793,1.2246467991473532e-16),_.TWO_PI=new _(6.283185307179586,2.4492935982947064e-16),_.PI_2=new _(1.5707963267948966,6.123233995736766e-17),_.E=new _(2.718281828459045,1.4456468917292502e-16),_.NaN=new _(r.NaN,r.NaN),_.EPS=1.23259516440783e-32,_.SPLIT=134217729,_.MAX_PRINT_DIGITS=32,_.TEN=_.valueOf(10),_.ONE=_.valueOf(1),_.SCI_NOT_EXPONENT_CHAR=\"E\",_.SCI_NOT_ZERO=\"0.0E0\",e(M.prototype,{interfaces_:function(){return[]},getClass:function(){return M}}),M.orientationIndex=function(t,e,n){var i=M.orientationIndexFilter(t,e,n);if(i<=1)return i;var r=_.valueOf(e.x).selfAdd(-t.x),s=_.valueOf(e.y).selfAdd(-t.y),o=_.valueOf(n.x).selfAdd(-e.x),a=_.valueOf(n.y).selfAdd(-e.y);return r.selfMultiply(a).selfSubtract(s.selfMultiply(o)).signum()},M.signOfDet2x2=function(t,e,n,i){var r=t.multiply(i).selfSubtract(e.multiply(n));return r.signum()},M.intersection=function(t,e,n,i){var r=_.valueOf(i.y).selfSubtract(n.y).selfMultiply(_.valueOf(e.x).selfSubtract(t.x)),s=_.valueOf(i.x).selfSubtract(n.x).selfMultiply(_.valueOf(e.y).selfSubtract(t.y)),o=r.subtract(s),a=_.valueOf(i.x).selfSubtract(n.x).selfMultiply(_.valueOf(t.y).selfSubtract(n.y)),u=_.valueOf(i.y).selfSubtract(n.y).selfMultiply(_.valueOf(t.x).selfSubtract(n.x)),l=a.subtract(u),h=l.selfDivide(o).doubleValue(),c=_.valueOf(t.x).selfAdd(_.valueOf(e.x).selfSubtract(t.x).selfMultiply(h)).doubleValue(),f=_.valueOf(e.x).selfSubtract(t.x).selfMultiply(_.valueOf(t.y).selfSubtract(n.y)),d=_.valueOf(e.y).selfSubtract(t.y).selfMultiply(_.valueOf(t.x).selfSubtract(n.x)),p=f.subtract(d),v=p.selfDivide(o).doubleValue(),m=_.valueOf(n.y).selfAdd(_.valueOf(i.y).selfSubtract(n.y).selfMultiply(v)).doubleValue();return new g(c,m)},M.orientationIndexFilter=function(t,e,n){var i=null,r=(t.x-n.x)*(e.y-n.y),s=(t.y-n.y)*(e.x-n.x),o=r-s;if(r>0){if(s<=0)return M.signum(o);i=r+s}else{if(!(r<0))return M.signum(o);if(s>=0)return M.signum(o);i=-r-s}var a=M.DP_SAFE_EPSILON*i;return o>=a||-o>=a?M.signum(o):2},M.signum=function(t){return t>0?1:t<0?-1:0},M.DP_SAFE_EPSILON=1e-15,e(D.prototype,{setOrdinate:function(t,e,n){},size:function(){},getOrdinate:function(t,e){},getCoordinate:function(){if(1===arguments.length){arguments[0]}else if(2===arguments.length){arguments[0],arguments[1]}},getCoordinateCopy:function(t){},getDimension:function(){},getX:function(t){},clone:function(){},expandEnvelope:function(t){},copy:function(){},getY:function(t){},toCoordinateArray:function(){},interfaces_:function(){return[o]},getClass:function(){return D}}),D.X=0,D.Y=1,D.Z=2,D.M=3,A.arraycopy=function(t,e,n,i,r){for(var s=0,o=e;o<e+r;o++)n[i+s]=t[o],s++},A.getProperty=function(t){return{\"line.separator\":\"\\n\"}[t]},e(F.prototype,{getY:function(){var t=this.y/this.w;if(r.isNaN(t)||r.isInfinite(t))throw new w;return t},getX:function(){var t=this.x/this.w;if(r.isNaN(t)||r.isInfinite(t))throw new w;return t},getCoordinate:function(){var t=new g;return t.x=this.getX(),t.y=this.getY(),t},interfaces_:function(){return[]},getClass:function(){return F}}),F.intersection=function(t,e,n,i){var s=t.y-e.y,o=e.x-t.x,a=t.x*e.y-e.x*t.y,u=n.y-i.y,l=i.x-n.x,h=n.x*i.y-i.x*n.y,c=o*h-l*a,f=u*a-s*h,d=s*l-u*o,p=c/d,v=f/d;if(r.isNaN(p)||r.isInfinite(p)||r.isNaN(v)||r.isInfinite(v))throw new w;return new g(p,v)},e(G.prototype,{create:function(){if(1===arguments.length){if(arguments[0]instanceof Array){arguments[0]}else if(R(arguments[0],D)){arguments[0]}}else if(2===arguments.length){arguments[0],arguments[1]}},interfaces_:function(){return[]},getClass:function(){return G}}),e(q.prototype,{filter:function(t){},interfaces_:function(){return[]},getClass:function(){return q}}),e(B.prototype,{isGeometryCollection:function(){return this.getSortIndex()===B.SORTINDEX_GEOMETRYCOLLECTION},getFactory:function(){return this.factory},getGeometryN:function(t){return this},getArea:function(){return 0},isRectangle:function(){return!1},equals:function(){if(1===arguments.length){if(arguments[0]instanceof B){var t=arguments[0];return null!==t&&this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof B))return!1;var n=e;return this.equalsExact(n)}}},equalsExact:function(t){return this===t||this.equalsExact(t,0)},geometryChanged:function(){this.apply(B.geometryChangedFilter)},geometryChangedAction:function(){this.envelope=null},equalsNorm:function(t){return null!==t&&this.norm().equalsExact(t.norm())},getLength:function(){return 0},getNumGeometries:function(){return 1},compareTo:function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=n;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(n,i)}},getUserData:function(){return this.userData},getSRID:function(){return this.SRID},getEnvelope:function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},checkNotGeometryCollection:function(t){if(t.getSortIndex()===B.SORTINDEX_GEOMETRYCOLLECTION)throw new i(\"This method does not support GeometryCollection arguments\")},equal:function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},norm:function(){var t=this.copy();return t.normalize(),t},getPrecisionModel:function(){return this.factory.getPrecisionModel()},getEnvelopeInternal:function(){return null===this.envelope&&(this.envelope=this.computeEnvelopeInternal()),new C(this.envelope)},setSRID:function(t){this.SRID=t},setUserData:function(t){this.userData=t},compare:function(t,e){for(var n=t.iterator(),i=e.iterator();n.hasNext()&&i.hasNext();){var r=n.next(),s=i.next(),o=r.compareTo(s);if(0!==o)return o}return n.hasNext()?1:i.hasNext()?-1:0},hashCode:function(){return this.getEnvelopeInternal().hashCode()},isGeometryCollectionOrDerived:function(){return this.getSortIndex()===B.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===B.SORTINDEX_MULTIPOINT||this.getSortIndex()===B.SORTINDEX_MULTILINESTRING||this.getSortIndex()===B.SORTINDEX_MULTIPOLYGON},interfaces_:function(){return[o,s,u]},getClass:function(){return B}}),B.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},B.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},B.serialVersionUID=0x799ea46522854c00,B.SORTINDEX_POINT=0,B.SORTINDEX_MULTIPOINT=1,B.SORTINDEX_LINESTRING=2,B.SORTINDEX_LINEARRING=3,B.SORTINDEX_MULTILINESTRING=4,B.SORTINDEX_POLYGON=5,B.SORTINDEX_MULTIPOLYGON=6,B.SORTINDEX_GEOMETRYCOLLECTION=7,B.geometryChangedFilter={interfaces_:function(){return[q]},filter:function(t){t.geometryChangedAction()}},e(z.prototype,{filter:function(t){},interfaces_:function(){return[]},getClass:function(){return z}}),e(V.prototype,{isInBoundary:function(t){},interfaces_:function(){return[]},getClass:function(){return V}}),e(k.prototype,{isInBoundary:function(t){return t%2===1},interfaces_:function(){return[V]},getClass:function(){return k}}),e(Y.prototype,{isInBoundary:function(t){return t>0},interfaces_:function(){return[V]},getClass:function(){return Y}}),e(U.prototype,{isInBoundary:function(t){return t>1},interfaces_:function(){return[V]},getClass:function(){return U}}),e(X.prototype,{isInBoundary:function(t){return 1===t},interfaces_:function(){return[V]},getClass:function(){return X}}),V.Mod2BoundaryNodeRule=k,V.EndPointBoundaryNodeRule=Y,V.MultiValentEndPointBoundaryNodeRule=U,V.MonoValentEndPointBoundaryNodeRule=X,V.MOD2_BOUNDARY_RULE=new k,V.ENDPOINT_BOUNDARY_RULE=new Y,V.MULTIVALENT_ENDPOINT_BOUNDARY_RULE=new U,V.MONOVALENT_ENDPOINT_BOUNDARY_RULE=new X,V.OGC_SFS_BOUNDARY_RULE=V.MOD2_BOUNDARY_RULE,e(H.prototype,{interfaces_:function(){return[]},getClass:function(){return H}}),H.isRing=function(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])},H.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var i=t[n];if(H.indexOf(i,e)<0)return i}return null},H.scroll=function(t,e){var n=H.indexOf(e,t);if(n<0)return null;var i=new Array(t.length).fill(null);A.arraycopy(t,n,i,0,t.length-n),A.arraycopy(t,0,i,t.length-n,n),A.arraycopy(i,0,t,0,t.length)},H.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];if(i===r)return!0;if(null===i||null===r)return!1;if(i.length!==r.length)return!1;for(var n=0;n<i.length;n++)if(0!==s.compare(i[n],r[n]))return!1;return!0}},H.intersection=function(t,e){for(var n=new N,i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()},H.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},H.removeRepeatedPoints=function(t){if(!H.hasRepeatedPoints(t))return t;var e=new N(t,(!1));return e.toCoordinateArray()},H.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),i=0;i<=n;i++){var r=t[i];t[i]=t[e-i],t[e-i]=r}},H.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var i=new Array(e).fill(null);if(0===e)return i;for(var r=0,n=0;n<t.length;n++)null!==t[n]&&(i[r++]=t[n]);return i},H.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new g(t[n]);return e}if(5===arguments.length)for(var i=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3],a=arguments[4],n=0;n<a;n++)s[o+n]=new g(i[r+n])},H.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=e[t.length-n-1];if(0!==i.compareTo(r))return!1}return!0},H.envelope=function(t){for(var e=new C,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},H.toCoordinateArray=function(t){return t.toArray(H.coordArrayType)},H.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},H.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},H.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1},H.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0},H.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},H.extract=function(t,e,n){e=T.clamp(e,0,t.length),n=T.clamp(n,-1,t.length);var i=n-e+1;n<0&&(i=0),e>=t.length&&(i=0),n<e&&(i=0);var r=new Array(i).fill(null);if(0===i)return r;for(var s=0,o=e;o<=n;o++)r[s++]=t[o];return r},e(W.prototype,{compare:function(t,e){var n=t,i=e;return H.compare(n,i)},interfaces_:function(){return[a]},getClass:function(){return W}}),e(j.prototype,{compare:function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;var r=H.compare(n,i),s=H.isEqualReversed(n,i);return s?0:r},OLDcompare:function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;for(var r=H.increasingDirection(n),s=H.increasingDirection(i),o=r>0?0:n.length-1,a=s>0?0:n.length-1,u=0;u<n.length;u++){var l=n[o].compareTo(i[a]);if(0!==l)return l;o+=r,a+=s}return 0},interfaces_:function(){return[a]},getClass:function(){return j}}),H.ForwardComparator=W,H.BidirectionalComparator=j,H.coordArrayType=new Array(0).fill(null),K.prototype.get=function(){},K.prototype.put=function(){},K.prototype.size=function(){},K.prototype.values=function(){},K.prototype.entrySet=function(){},Z.prototype=new K,Q.prototype=new v,Q.prototype.contains=function(){},J.prototype=new Q,J.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){var i=this.array_[e];if(i===t)return!0}return!1},J.prototype.add=function(t){return!this.contains(t)&&(this.array_.push(t),!0)},J.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},J.prototype.remove=function(t){throw new javascript.util.OperationNotSupported},J.prototype.size=function(){return this.array_.length},J.prototype.isEmpty=function(){return 0===this.array_.length},J.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},J.prototype.iterator=function(){return new Js(this)};var Js=function(t){this.hashSet_=t,this.position_=0};Js.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new x;return this.hashSet_.array_[this.position_++]},Js.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},Js.prototype.remove=function(){throw new E};var $s=0,to=1;rt.prototype=new Z,rt.prototype.get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},rt.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:$s,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,i,r=this.root_;do if(n=r,i=t.compareTo(r.key),i<0)r=r.left;else{if(!(i>0)){var s=r.value;return r.value=e,s}r=r.right}while(null!==r);var o={key:t,left:null,right:null,value:e,parent:n,color:$s,getValue:function(){return this.value},getKey:function(){return this.key}};return i<0?n.left=o:n.right=o,this.fixAfterInsertion(o),this.size_++,null},rt.prototype.fixAfterInsertion=function(t){for(t.color=to;null!=t&&t!=this.root_&&t.parent.color==to;)if(tt(t)==nt(tt(tt(t)))){var e=it(tt(tt(t)));$(e)==to?(et(tt(t),$s),et(e,$s),et(tt(tt(t)),to),t=tt(tt(t))):(t==it(tt(t))&&(t=tt(t),this.rotateLeft(t)),et(tt(t),$s),et(tt(tt(t)),to),this.rotateRight(tt(tt(t))))}else{var e=nt(tt(tt(t)));$(e)==to?(et(tt(t),$s),et(e,$s),et(tt(tt(t)),to),t=tt(tt(t))):(t==nt(tt(t))&&(t=tt(t),this.rotateRight(t)),et(tt(t),$s),et(tt(tt(t)),to),this.rotateLeft(tt(tt(t))))}this.root_.color=$s},rt.prototype.values=function(){var t=new I,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=rt.successor(e));)t.add(e.value);return t},rt.prototype.entrySet=function(){var t=new J,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=rt.successor(e));)t.add(e);return t},rt.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.left==t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},rt.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.right==t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},rt.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},rt.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var e=t.parent,n=t;null!==e&&n===e.right;)n=e,e=e.parent;return e},rt.prototype.size=function(){return this.size_},e(st.prototype,{interfaces_:function(){return[]},getClass:function(){return st}}),ot.prototype=new Q,at.prototype=new ot,at.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){var i=this.array_[e];if(0===i.compareTo(t))return!0}return!1},at.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;e<n;e++){var i=this.array_[e];if(1===i.compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},at.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},at.prototype.remove=function(t){throw new E},at.prototype.size=function(){return this.array_.length},at.prototype.isEmpty=function(){return 0===this.array_.length},at.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},at.prototype.iterator=function(){return new eo(this)};var eo=function(t){this.treeSet_=t,this.position_=0};eo.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new x;return this.treeSet_.array_[this.position_++]},eo.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},eo.prototype.remove=function(){throw new E},ut.sort=function(){var t,e,n,i,r=arguments[0];if(1===arguments.length)return i=function(t,e){return t.compareTo(e)},void r.sort(i);if(2===arguments.length)n=arguments[1],i=function(t,e){return n.compare(t,e)},r.sort(i);else{if(3===arguments.length){e=r.slice(arguments[1],arguments[2]),e.sort();var s=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length));for(r.splice(0,r.length),t=0;t<s.length;t++)r.push(s[t]);return}if(4===arguments.length){for(e=r.slice(arguments[1],arguments[2]),n=arguments[3],i=function(t,e){return n.compare(t,e)},e.sort(i),s=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length)),r.splice(0,r.length),t=0;t<s.length;t++)r.push(s[t]);return}}},ut.asList=function(t){for(var e=new I,n=0,i=t.length;n<i;n++)e.add(t[n]);return e},e(lt.prototype,{interfaces_:function(){return[]},getClass:function(){return lt}}),lt.toDimensionSymbol=function(t){switch(t){case lt.FALSE:return lt.SYM_FALSE;case lt.TRUE:return lt.SYM_TRUE;case lt.DONTCARE:return lt.SYM_DONTCARE;case lt.P:return lt.SYM_P;case lt.L:return lt.SYM_L;case lt.A:return lt.SYM_A}throw new i(\"Unknown dimension value: \"+t)},lt.toDimensionValue=function(t){switch(O.toUpperCase(t)){case lt.SYM_FALSE:return lt.FALSE;case lt.SYM_TRUE:return lt.TRUE;case lt.SYM_DONTCARE:return lt.DONTCARE;case lt.SYM_P:return lt.P;case lt.SYM_L:return lt.L;case lt.SYM_A:return lt.A}throw new i(\"Unknown dimension symbol: \"+t)},lt.P=0,lt.L=1,lt.A=2,lt.FALSE=-1,lt.TRUE=-2,lt.DONTCARE=-3,lt.SYM_FALSE=\"F\",lt.SYM_TRUE=\"T\",lt.SYM_DONTCARE=\"*\",lt.SYM_P=\"0\",lt.SYM_L=\"1\",lt.SYM_A=\"2\",e(ht.prototype,{filter:function(t){},interfaces_:function(){return[]},getClass:function(){return ht}}),e(ct.prototype,{filter:function(t,e){},isDone:function(){},isGeometryChanged:function(){},interfaces_:function(){return[]},getClass:function(){return ct}}),h(ft,B),e(ft.prototype,{computeEnvelopeInternal:function(){for(var t=new C,e=0;e<this.geometries.length;e++)t.expandToInclude(this.geometries[e].getEnvelopeInternal());return t},getGeometryN:function(t){return this.geometries[t]},getSortIndex:function(){return B.SORTINDEX_GEOMETRYCOLLECTION},getCoordinates:function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this.geometries.length;n++)for(var i=this.geometries[n].getCoordinates(),r=0;r<i.length;r++)e++,t[e]=i[r];return t},getArea:function(){for(var t=0,e=0;e<this.geometries.length;e++)t+=this.geometries[e].getArea();return t},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this.geometries.length!==n.geometries.length)return!1;for(var i=0;i<this.geometries.length;i++)if(!this.geometries[i].equalsExact(n.geometries[i],e))return!1;return!0}return B.prototype.equalsExact.apply(this,arguments)},normalize:function(){for(var t=0;t<this.geometries.length;t++)this.geometries[t].normalize();ut.sort(this.geometries)},getCoordinate:function(){return this.isEmpty()?null:this.geometries[0].getCoordinate()},getBoundaryDimension:function(){for(var t=lt.FALSE,e=0;e<this.geometries.length;e++)t=Math.max(t,this.geometries[e].getBoundaryDimension());return t},getDimension:function(){for(var t=lt.FALSE,e=0;e<this.geometries.length;e++)t=Math.max(t,this.geometries[e].getDimension());return t},getLength:function(){for(var t=0,e=0;e<this.geometries.length;e++)t+=this.geometries[e].getLength();return t},getNumPoints:function(){for(var t=0,e=0;e<this.geometries.length;e++)t+=this.geometries[e].getNumPoints();return t},getNumGeometries:function(){return this.geometries.length},reverse:function(){for(var t=this.geometries.length,e=new Array(t).fill(null),n=0;n<this.geometries.length;n++)e[n]=this.geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},compareToSameClass:function(){if(1===arguments.length){var t=arguments[0],e=new at(ut.asList(this.geometries)),n=new at(ut.asList(t.geometries));return this.compare(e,n)}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],s=i,o=this.getNumGeometries(),a=s.getNumGeometries(),u=0;u<o&&u<a;){var l=this.getGeometryN(u),h=s.getGeometryN(u),c=l.compareToSameClass(h,r);if(0!==c)return c;u++}return u<o?1:u<a?-1:0}},apply:function(){if(R(arguments[0],z))for(var t=arguments[0],e=0;e<this.geometries.length;e++)this.geometries[e].apply(t);else if(R(arguments[0],ct)){var n=arguments[0];if(0===this.geometries.length)return null;for(var e=0;e<this.geometries.length&&(this.geometries[e].apply(n),!n.isDone());e++);n.isGeometryChanged()&&this.geometryChanged()}else if(R(arguments[0],ht)){var i=arguments[0];i.filter(this);for(var e=0;e<this.geometries.length;e++)this.geometries[e].apply(i)}else if(R(arguments[0],q)){var r=arguments[0];r.filter(this);for(var e=0;e<this.geometries.length;e++)this.geometries[e].apply(r)}},getBoundary:function(){return this.checkNotGeometryCollection(this),f.shouldNeverReachHere(),null},clone:function(){var t=B.prototype.clone.call(this);t.geometries=new Array(this.geometries.length).fill(null);for(var e=0;e<this.geometries.length;e++)t.geometries[e]=this.geometries[e].clone();return t},getGeometryType:function(){return\"GeometryCollection\"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new ft(t,this.factory)},isEmpty:function(){for(var t=0;t<this.geometries.length;t++)if(!this.geometries[t].isEmpty())return!1;return!0},interfaces_:function(){return[]},getClass:function(){return ft}}),ft.serialVersionUID=-0x4f07bcb1f857d800,h(gt,ft),e(gt.prototype,{getSortIndex:function(){return B.SORTINDEX_MULTILINESTRING},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&ft.prototype.equalsExact.call(this,t,e)}return ft.prototype.equalsExact.apply(this,arguments)},getBoundaryDimension:function(){return this.isClosed()?lt.FALSE:0},isClosed:function(){if(this.isEmpty())return!1;for(var t=0;t<this.geometries.length;t++)if(!this.geometries[t].isClosed())return!1;return!0;\n},getDimension:function(){return 1},reverse:function(){for(var t=this.geometries.length,e=new Array(t).fill(null),n=0;n<this.geometries.length;n++)e[t-1-n]=this.geometries[n].reverse();return this.getFactory().createMultiLineString(e)},getBoundary:function(){return new dt(this).getBoundary()},getGeometryType:function(){return\"MultiLineString\"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new gt(t,this.factory)},interfaces_:function(){return[st]},getClass:function(){return gt}}),gt.serialVersionUID=0x7155d2ab4afa8000,e(dt.prototype,{boundaryMultiLineString:function(t){if(this.geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this.geomFact.createPoint(e[0]):this.geomFact.createMultiPointFromCoords(e)},getBoundary:function(){return this.geom instanceof St?this.boundaryLineString(this.geom):this.geom instanceof gt?this.boundaryMultiLineString(this.geom):this.geom.getBoundary()},boundaryLineString:function(t){if(this.geom.isEmpty())return this.getEmptyMultiPoint();if(t.isClosed()){var e=this.bnRule.isInBoundary(2);return e?t.getStartPoint():this.geomFact.createMultiPoint()}return this.geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},getEmptyMultiPoint:function(){return this.geomFact.createMultiPoint()},computeBoundaryCoordinates:function(t){var e=new I;this.endpointMap=new rt;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);0!==i.getNumPoints()&&(this.addEndpoint(i.getCoordinateN(0)),this.addEndpoint(i.getCoordinateN(i.getNumPoints()-1)))}for(var r=this.endpointMap.entrySet().iterator();r.hasNext();){var s=r.next(),o=s.getValue(),a=o.count;this.bnRule.isInBoundary(a)&&e.add(s.getKey())}return H.toCoordinateArray(e)},addEndpoint:function(t){var e=this.endpointMap.get(t);null===e&&(e=new pt,this.endpointMap.put(t,e)),e.count++},interfaces_:function(){return[]},getClass:function(){return dt}}),dt.getBoundary=function(){if(1===arguments.length){var t=arguments[0],e=new dt(t);return e.getBoundary()}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=new dt(n,i);return e.getBoundary()}},e(pt.prototype,{interfaces_:function(){return[]},getClass:function(){return pt}}),e(Nt.prototype,{interfaces_:function(){return[]},getClass:function(){return Nt}}),Nt.chars=function(t,e){for(var n=new Array(e).fill(null),i=0;i<e;i++)n[i]=t;return new String(n)},Nt.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new xt,n=new vt(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],s=\"\",o=new mt(Nt.getStackTrace(i)),a=new It(o),u=0;u<r;u++)try{s+=a.readLine()+Nt.NEWLINE}catch(t){if(!(t instanceof Et))throw t;f.shouldNeverReachHere()}finally{}return s}},Nt.split=function(t,e){for(var n=e.length,i=new I,r=\"\"+t,s=r.indexOf(e);s>=0;){var o=r.substring(0,s);i.add(o),r=r.substring(s+n),s=r.indexOf(e)}r.length>0&&i.add(r);for(var a=new Array(i.size()).fill(null),u=0;u<a.length;u++)a[u]=i.get(u);return a},Nt.toString=function(){if(1===arguments.length){var t=arguments[0];return Nt.SIMPLE_ORDINATE_FORMAT.format(t)}},Nt.spaces=function(t){return Nt.chars(\" \",t)},Nt.NEWLINE=A.getProperty(\"line.separator\"),Nt.SIMPLE_ORDINATE_FORMAT=new yt(\"0.#\"),e(Ct.prototype,{interfaces_:function(){return[]},getClass:function(){return Ct}}),Ct.copyCoord=function(t,e,n,i){for(var r=Math.min(t.getDimension(),n.getDimension()),s=0;s<r;s++)n.setOrdinate(i,s,t.getOrdinate(e,s))},Ct.isRing=function(t){var e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,D.X)===t.getOrdinate(e-1,D.X)&&t.getOrdinate(0,D.Y)===t.getOrdinate(e-1,D.Y))},Ct.isEqual=function(t,e){var n=t.size(),i=e.size();if(n!==i)return!1;for(var s=Math.min(t.getDimension(),e.getDimension()),o=0;o<n;o++)for(var a=0;a<s;a++){var u=t.getOrdinate(o,a),l=e.getOrdinate(o,a);if(!(t.getOrdinate(o,a)===e.getOrdinate(o,a)||r.isNaN(u)&&r.isNaN(l)))return!1}return!0},Ct.extend=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();if(Ct.copy(e,0,i,0,r),r>0)for(var s=r;s<n;s++)Ct.copy(e,r-1,i,s,1);return i},Ct.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),i=0;i<=n;i++)Ct.swap(t,i,e-i)},Ct.swap=function(t,e,n){if(e===n)return null;for(var i=0;i<t.getDimension();i++){var r=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r)}},Ct.copy=function(t,e,n,i,r){for(var s=0;s<r;s++)Ct.copyCoord(t,e+s,n,i+s)},Ct.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return\"()\";var n=t.getDimension(),i=new P;i.append(\"(\");for(var r=0;r<e;r++){r>0&&i.append(\" \");for(var s=0;s<n;s++)s>0&&i.append(\",\"),i.append(Nt.toString(t.getOrdinate(r,s)))}return i.append(\")\"),i.toString()}},Ct.ensureValidRing=function(t,e){var n=e.size();if(0===n)return e;if(n<=3)return Ct.createClosedRing(t,e,4);var i=e.getOrdinate(0,D.X)===e.getOrdinate(n-1,D.X)&&e.getOrdinate(0,D.Y)===e.getOrdinate(n-1,D.Y);return i?e:Ct.createClosedRing(t,e,n+1)},Ct.createClosedRing=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();Ct.copy(e,0,i,0,r);for(var s=r;s<n;s++)Ct.copy(e,0,i,s,1);return i},h(St,B),e(St.prototype,{computeEnvelopeInternal:function(){return this.isEmpty()?new C:this.points.expandEnvelope(new C)},isRing:function(){return this.isClosed()&&this.isSimple()},getSortIndex:function(){return B.SORTINDEX_LINESTRING},getCoordinates:function(){return this.points.toCoordinateArray()},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this.points.size()!==n.points.size())return!1;for(var i=0;i<this.points.size();i++)if(!this.equal(this.points.getCoordinate(i),n.points.getCoordinate(i),e))return!1;return!0}return B.prototype.equalsExact.apply(this,arguments)},normalize:function(){for(var t=0;t<Math.trunc(this.points.size()/2);t++){var e=this.points.size()-1-t;if(!this.points.getCoordinate(t).equals(this.points.getCoordinate(e)))return this.points.getCoordinate(t).compareTo(this.points.getCoordinate(e))>0&&Ct.reverse(this.points),null}},getCoordinate:function(){return this.isEmpty()?null:this.points.getCoordinate(0)},getBoundaryDimension:function(){return this.isClosed()?lt.FALSE:0},isClosed:function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},getEndPoint:function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},getDimension:function(){return 1},getLength:function(){return he.computeLength(this.points)},getNumPoints:function(){return this.points.size()},reverse:function(){var t=this.points.copy();Ct.reverse(t);var e=this.getFactory().createLineString(t);return e},compareToSameClass:function(){if(1===arguments.length){for(var t=arguments[0],e=t,n=0,i=0;n<this.points.size()&&i<e.points.size();){var r=this.points.getCoordinate(n).compareTo(e.points.getCoordinate(i));if(0!==r)return r;n++,i++}return n<this.points.size()?1:i<e.points.size()?-1:0}if(2===arguments.length){var s=arguments[0],o=arguments[1],e=s;return o.compare(this.points,e.points)}},apply:function(){if(R(arguments[0],z))for(var t=arguments[0],e=0;e<this.points.size();e++)t.filter(this.points.getCoordinate(e));else if(R(arguments[0],ct)){var n=arguments[0];if(0===this.points.size())return null;for(var e=0;e<this.points.size()&&(n.filter(this.points,e),!n.isDone());e++);n.isGeometryChanged()&&this.geometryChanged()}else if(R(arguments[0],ht)){var i=arguments[0];i.filter(this)}else if(R(arguments[0],q)){var r=arguments[0];r.filter(this)}},getBoundary:function(){return new dt(this).getBoundary()},isEquivalentClass:function(t){return t instanceof St},clone:function(){var t=B.prototype.clone.call(this);return t.points=this.points.clone(),t},getCoordinateN:function(t){return this.points.getCoordinate(t)},getGeometryType:function(){return\"LineString\"},copy:function(){return new St(this.points.copy(),this.factory)},getCoordinateSequence:function(){return this.points},isEmpty:function(){return 0===this.points.size()},init:function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new i(\"Invalid number of points in LineString (found \"+t.size()+\" - must be 0 or >= 2)\");this.points=t},isCoordinate:function(t){for(var e=0;e<this.points.size();e++)if(this.points.getCoordinate(e).equals(t))return!0;return!1},getStartPoint:function(){return this.isEmpty()?null:this.getPointN(0)},getPointN:function(t){return this.getFactory().createPoint(this.points.getCoordinate(t))},interfaces_:function(){return[st]},getClass:function(){return St}}),St.serialVersionUID=0x2b2b51ba435c8e00,e(wt.prototype,{interfaces_:function(){return[]},getClass:function(){return wt}}),h(Lt,B),e(Lt.prototype,{computeEnvelopeInternal:function(){if(this.isEmpty())return new C;var t=new C;return t.expandToInclude(this.coordinates.getX(0),this.coordinates.getY(0)),t},getSortIndex:function(){return B.SORTINDEX_POINT},getCoordinates:function(){return this.isEmpty()?[]:[this.getCoordinate()]},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&(!(!this.isEmpty()||!t.isEmpty())||this.isEmpty()===t.isEmpty()&&this.equal(t.getCoordinate(),this.getCoordinate(),e))}return B.prototype.equalsExact.apply(this,arguments)},normalize:function(){},getCoordinate:function(){return 0!==this.coordinates.size()?this.coordinates.getCoordinate(0):null},getBoundaryDimension:function(){return lt.FALSE},getDimension:function(){return 0},getNumPoints:function(){return this.isEmpty()?0:1},reverse:function(){return this.copy()},getX:function(){if(null===this.getCoordinate())throw new IllegalStateException(\"getX called on empty Point\");return this.getCoordinate().x},compareToSameClass:function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getCoordinate().compareTo(e.getCoordinate())}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=n;return i.compare(this.coordinates,e.coordinates)}},apply:function(){if(R(arguments[0],z)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(R(arguments[0],ct)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this.coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(R(arguments[0],ht)){var n=arguments[0];n.filter(this)}else if(R(arguments[0],q)){var i=arguments[0];i.filter(this)}},getBoundary:function(){return this.getFactory().createGeometryCollection(null)},clone:function(){var t=B.prototype.clone.call(this);return t.coordinates=this.coordinates.clone(),t},getGeometryType:function(){return\"Point\"},copy:function(){return new Lt(this.coordinates.copy(),this.factory)},getCoordinateSequence:function(){return this.coordinates},getY:function(){if(null===this.getCoordinate())throw new IllegalStateException(\"getY called on empty Point\");return this.getCoordinate().y},isEmpty:function(){return 0===this.coordinates.size()},init:function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),f.isTrue(t.size()<=1),this.coordinates=t},isSimple:function(){return!0},interfaces_:function(){return[wt]},getClass:function(){return Lt}}),Lt.serialVersionUID=0x44077bad161cbc00,e(Rt.prototype,{interfaces_:function(){return[]},getClass:function(){return Rt}}),h(Tt,B),e(Tt.prototype,{computeEnvelopeInternal:function(){return this.shell.getEnvelopeInternal()},getSortIndex:function(){return B.SORTINDEX_POLYGON},getCoordinates:function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this.shell.getCoordinates(),i=0;i<n.length;i++)e++,t[e]=n[i];for(var r=0;r<this.holes.length;r++)for(var s=this.holes[r].getCoordinates(),o=0;o<s.length;o++)e++,t[e]=s[o];return t},getArea:function(){var t=0;t+=Math.abs(he.signedArea(this.shell.getCoordinateSequence()));for(var e=0;e<this.holes.length;e++)t-=Math.abs(he.signedArea(this.holes[e].getCoordinateSequence()));return t},isRectangle:function(){if(0!==this.getNumInteriorRing())return!1;if(null===this.shell)return!1;if(5!==this.shell.getNumPoints())return!1;for(var t=this.shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;var r=t.getY(n);if(r!==e.getMinY()&&r!==e.getMaxY())return!1}for(var s=t.getX(0),o=t.getY(0),n=1;n<=4;n++){var i=t.getX(n),r=t.getY(n),a=i!==s,u=r!==o;if(a===u)return!1;s=i,o=r}return!0},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t,i=this.shell,r=n.shell;if(!i.equalsExact(r,e))return!1;if(this.holes.length!==n.holes.length)return!1;for(var s=0;s<this.holes.length;s++)if(!this.holes[s].equalsExact(n.holes[s],e))return!1;return!0}return B.prototype.equalsExact.apply(this,arguments)},normalize:function(){if(0===arguments.length){this.normalize(this.shell,!0);for(var t=0;t<this.holes.length;t++)this.normalize(this.holes[t],!1);ut.sort(this.holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var i=new Array(e.getCoordinates().length-1).fill(null);A.arraycopy(e.getCoordinates(),0,i,0,i.length);var r=H.minCoordinate(e.getCoordinates());H.scroll(i,r),A.arraycopy(i,0,e.getCoordinates(),0,i.length),e.getCoordinates()[i.length]=i[0],he.isCCW(e.getCoordinates())===n&&H.reverse(e.getCoordinates())}},getCoordinate:function(){return this.shell.getCoordinate()},getNumInteriorRing:function(){return this.holes.length},getBoundaryDimension:function(){return 1},getDimension:function(){return 2},getLength:function(){var t=0;t+=this.shell.getLength();for(var e=0;e<this.holes.length;e++)t+=this.holes[e].getLength();return t},getNumPoints:function(){for(var t=this.shell.getNumPoints(),e=0;e<this.holes.length;e++)t+=this.holes[e].getNumPoints();return t},reverse:function(){var t=this.copy();t.shell=this.shell.copy().reverse(),t.holes=new Array(this.holes.length).fill(null);for(var e=0;e<this.holes.length;e++)t.holes[e]=this.holes[e].copy().reverse();return t},convexHull:function(){return this.getExteriorRing().convexHull()},compareToSameClass:function(){if(1===arguments.length){var t=arguments[0],e=this.shell,n=t.shell;return e.compareToSameClass(n)}if(2===arguments.length){var i=arguments[0],r=arguments[1],s=i,e=this.shell,n=s.shell,o=e.compareToSameClass(n,r);if(0!==o)return o;for(var a=this.getNumInteriorRing(),u=s.getNumInteriorRing(),l=0;l<a&&l<u;){var h=this.getInteriorRingN(l),c=s.getInteriorRingN(l),f=h.compareToSameClass(c,r);if(0!==f)return f;l++}return l<a?1:l<u?-1:0}},apply:function(){if(R(arguments[0],z)){var t=arguments[0];this.shell.apply(t);for(var e=0;e<this.holes.length;e++)this.holes[e].apply(t)}else if(R(arguments[0],ct)){var n=arguments[0];if(this.shell.apply(n),!n.isDone())for(var e=0;e<this.holes.length&&(this.holes[e].apply(n),!n.isDone());e++);n.isGeometryChanged()&&this.geometryChanged()}else if(R(arguments[0],ht)){var i=arguments[0];i.filter(this)}else if(R(arguments[0],q)){var r=arguments[0];r.filter(this),this.shell.apply(r);for(var e=0;e<this.holes.length;e++)this.holes[e].apply(r)}},getBoundary:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this.holes.length+1).fill(null);t[0]=this.shell;for(var e=0;e<this.holes.length;e++)t[e+1]=this.holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},clone:function(){var t=B.prototype.clone.call(this);t.shell=this.shell.clone(),t.holes=new Array(this.holes.length).fill(null);for(var e=0;e<this.holes.length;e++)t.holes[e]=this.holes[e].clone();return t},getGeometryType:function(){return\"Polygon\"},copy:function(){for(var t=this.shell.copy(),e=new Array(this.holes.length).fill(null),n=0;n<e.length;n++)e[n]=this.holes[n].copy();return new Tt(t,e,this.factory)},getExteriorRing:function(){return this.shell},isEmpty:function(){return this.shell.isEmpty()},getInteriorRingN:function(t){return this.holes[t]},interfaces_:function(){return[Rt]},getClass:function(){return Tt}}),Tt.serialVersionUID=-0x307ffefd8dc97200,h(Pt,ft),e(Pt.prototype,{getSortIndex:function(){return B.SORTINDEX_MULTIPOINT},isValid:function(){return!0},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&ft.prototype.equalsExact.call(this,t,e)}return ft.prototype.equalsExact.apply(this,arguments)},getCoordinate:function(){if(1===arguments.length){var t=arguments[0];return this.geometries[t].getCoordinate()}return ft.prototype.getCoordinate.apply(this,arguments)},getBoundaryDimension:function(){return lt.FALSE},getDimension:function(){return 0},getBoundary:function(){return this.getFactory().createGeometryCollection(null)},getGeometryType:function(){return\"MultiPoint\"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new Pt(t,this.factory)},interfaces_:function(){return[wt]},getClass:function(){return Pt}}),Pt.serialVersionUID=-0x6fb1ed4162e0fc00,h(bt,St),e(bt.prototype,{getSortIndex:function(){return B.SORTINDEX_LINEARRING},getBoundaryDimension:function(){return lt.FALSE},isClosed:function(){return!!this.isEmpty()||St.prototype.isClosed.call(this)},reverse:function(){var t=this.points.copy();Ct.reverse(t);var e=this.getFactory().createLinearRing(t);return e},validateConstruction:function(){if(!this.isEmpty()&&!St.prototype.isClosed.call(this))throw new i(\"Points of LinearRing do not form a closed linestring\");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<bt.MINIMUM_VALID_SIZE)throw new i(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\")},getGeometryType:function(){return\"LinearRing\"},copy:function(){return new bt(this.points.copy(),this.factory)},interfaces_:function(){return[]},getClass:function(){return bt}}),bt.MINIMUM_VALID_SIZE=4,bt.serialVersionUID=-0x3b229e262367a600,h(Ot,ft),e(Ot.prototype,{getSortIndex:function(){return B.SORTINDEX_MULTIPOLYGON},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&ft.prototype.equalsExact.call(this,t,e)}return ft.prototype.equalsExact.apply(this,arguments)},getBoundaryDimension:function(){return 1},getDimension:function(){return 2},reverse:function(){for(var t=this.geometries.length,e=new Array(t).fill(null),n=0;n<this.geometries.length;n++)e[n]=this.geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},getBoundary:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new I,e=0;e<this.geometries.length;e++)for(var n=this.geometries[e],i=n.getBoundary(),r=0;r<i.getNumGeometries();r++)t.add(i.getGeometryN(r));var s=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(s))},getGeometryType:function(){return\"MultiPolygon\"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new Ot(t,this.factory)},interfaces_:function(){return[Rt]},getClass:function(){return Ot}}),Ot.serialVersionUID=-0x7a5aa1369171980,e(_t.prototype,{setCopyUserData:function(t){this.isUserDataCopied=t},edit:function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this.isUserDataCopied&&n.setUserData(t.getUserData()),n},editInternal:function(t,e){return null===this.factory&&(this.factory=t.getFactory()),t instanceof ft?this.editGeometryCollection(t,e):t instanceof Tt?this.editPolygon(t,e):t instanceof Lt?e.edit(t,this.factory):t instanceof St?e.edit(t,this.factory):(f.shouldNeverReachHere(\"Unsupported Geometry class: \"+t.getClass().getName()),null)},editGeometryCollection:function(t,e){for(var n=e.edit(t,this.factory),i=new I,r=0;r<n.getNumGeometries();r++){var s=this.edit(n.getGeometryN(r),e);null===s||s.isEmpty()||i.add(s)}return n.getClass()===Pt?this.factory.createMultiPoint(i.toArray([])):n.getClass()===gt?this.factory.createMultiLineString(i.toArray([])):n.getClass()===Ot?this.factory.createMultiPolygon(i.toArray([])):this.factory.createGeometryCollection(i.toArray([]))},editPolygon:function(t,e){var n=e.edit(t,this.factory);if(null===n&&(n=this.factory.createPolygon(null)),n.isEmpty())return n;var i=this.edit(n.getExteriorRing(),e);if(null===i||i.isEmpty())return this.factory.createPolygon();for(var r=new I,s=0;s<n.getNumInteriorRing();s++){var o=this.edit(n.getInteriorRingN(s),e);null===o||o.isEmpty()||r.add(o)}return this.factory.createPolygon(i,r.toArray([]))},interfaces_:function(){return[]},getClass:function(){return _t}}),_t.GeometryEditorOperation=Mt,e(Dt.prototype,{edit:function(t,e){return t},interfaces_:function(){return[Mt]},getClass:function(){return Dt}}),e(At.prototype,{edit:function(t,e){var n=this.editCoordinates(t.getCoordinates(),t);return null===n?t:t instanceof bt?e.createLinearRing(n):t instanceof St?e.createLineString(n):t instanceof Lt?n.length>0?e.createPoint(n[0]):e.createPoint():t},interfaces_:function(){return[Mt]},getClass:function(){return At}}),e(Ft.prototype,{edit:function(t,e){return t instanceof bt?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof St?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Lt?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},interfaces_:function(){return[Mt]},getClass:function(){return Ft}}),_t.NoOpGeometryOperation=Dt,_t.CoordinateOperation=At,_t.CoordinateSequenceOperation=Ft,e(Gt.prototype,{setOrdinate:function(t,e,n){switch(e){case D.X:this.coordinates[t].x=n;break;case D.Y:this.coordinates[t].y=n;break;case D.Z:this.coordinates[t].z=n;break;default:throw new i(\"invalid ordinateIndex\")}},size:function(){return this.coordinates.length},getOrdinate:function(t,e){switch(e){case D.X:return this.coordinates[t].x;case D.Y:return this.coordinates[t].y;case D.Z:return this.coordinates[t].z}return r.NaN},getCoordinate:function(){if(1===arguments.length){var t=arguments[0];return this.coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this.coordinates[e].x,n.y=this.coordinates[e].y,n.z=this.coordinates[e].z}},getCoordinateCopy:function(t){return new g(this.coordinates[t])},getDimension:function(){return this.dimension},getX:function(t){return this.coordinates[t].x},clone:function(){for(var t=new Array(this.size()).fill(null),e=0;e<this.coordinates.length;e++)t[e]=this.coordinates[e].clone();return new Gt(t,this.dimension)},expandEnvelope:function(t){for(var e=0;e<this.coordinates.length;e++)t.expandToInclude(this.coordinates[e]);return t},copy:function(){for(var t=new Array(this.size()).fill(null),e=0;e<this.coordinates.length;e++)t[e]=this.coordinates[e].copy();return new Gt(t,this.dimension)},toString:function(){if(this.coordinates.length>0){var t=new P(17*this.coordinates.length);t.append(\"(\"),t.append(this.coordinates[0]);for(var e=1;e<this.coordinates.length;e++)t.append(\", \"),t.append(this.coordinates[e]);return t.append(\")\"),t.toString()}return\"()\"},getY:function(t){return this.coordinates[t].y},toCoordinateArray:function(){return this.coordinates},interfaces_:function(){return[D,u]},getClass:function(){return Gt}}),Gt.serialVersionUID=-0xcb44a778db18e00,e(qt.prototype,{readResolve:function(){return qt.instance()},create:function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new Gt(t)}if(R(arguments[0],D)){var e=arguments[0];return new Gt(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return i>3&&(i=3),i<2?new Gt(n):new Gt(n,i)}},interfaces_:function(){return[G,u]},getClass:function(){return qt}}),qt.instance=function(){return qt.instanceObject},qt.serialVersionUID=-0x38e49fa6cf6f2e00,qt.instanceObject=new qt;var no,io=Object.defineProperty,ro=zt({delete:kt,has:Xt,get:Yt,set:Ht,keys:jt,values:Kt,entries:Zt,forEach:$t,clear:Wt}),so=\"undefined\"!=typeof Map&&Map.prototype.values?Map:ro;te.prototype=new K,te.prototype.get=function(t){return this.map_.get(t)||null},te.prototype.put=function(t,e){return this.map_.set(t,e),e},te.prototype.values=function(){for(var t=new I,e=this.map_.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t},te.prototype.entrySet=function(){var t=new J;return this.map_.entries().forEach(function(e){return t.add(e)}),t},te.prototype.size=function(){return this.map_.size()},e(ee.prototype,{equals:function(t){if(!(t instanceof ee))return!1;var e=t;return this.modelType===e.modelType&&this.scale===e.scale},compareTo:function(t){var e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return new b(n).compareTo(new b(i))},getScale:function(){return this.scale},isFloating:function(){return this.modelType===ee.FLOATING||this.modelType===ee.FLOATING_SINGLE},getType:function(){return this.modelType},toString:function(){var t=\"UNKNOWN\";return this.modelType===ee.FLOATING?t=\"Floating\":this.modelType===ee.FLOATING_SINGLE?t=\"Floating-Single\":this.modelType===ee.FIXED&&(t=\"Fixed (Scale=\"+this.getScale()+\")\"),t},makePrecise:function(){if(\"number\"==typeof arguments[0]){var t=arguments[0];if(r.isNaN(t))return t;if(this.modelType===ee.FLOATING_SINGLE){var e=t;return e}return this.modelType===ee.FIXED?Math.round(t*this.scale)/this.scale:t}if(arguments[0]instanceof g){var n=arguments[0];if(this.modelType===ee.FLOATING)return null;n.x=this.makePrecise(n.x),n.y=this.makePrecise(n.y)}},getMaximumSignificantDigits:function(){var t=16;return this.modelType===ee.FLOATING?t=16:this.modelType===ee.FLOATING_SINGLE?t=6:this.modelType===ee.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},setScale:function(t){this.scale=Math.abs(t)},interfaces_:function(){return[u,s]},getClass:function(){return ee}}),ee.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},e(ne.prototype,{readResolve:function(){return ne.nameToTypeMap.get(this.name)},toString:function(){return this.name},interfaces_:function(){return[u]},getClass:function(){return ne}}),ne.serialVersionUID=-552860263173159e4,ne.nameToTypeMap=new te,ee.Type=ne,ee.serialVersionUID=0x6bee6404e9a25c00,ee.FIXED=new ne(\"FIXED\"),ee.FLOATING=new ne(\"FLOATING\"),ee.FLOATING_SINGLE=new ne(\"FLOATING SINGLE\"),ee.maximumPreciseValue=9007199254740992,e(ie.prototype,{toGeometry:function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new g(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new g(t.getMinX(),t.getMinY()),new g(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new g(t.getMinX(),t.getMinY()),new g(t.getMinX(),t.getMaxY()),new g(t.getMaxX(),t.getMaxY()),new g(t.getMaxX(),t.getMinY()),new g(t.getMinX(),t.getMinY())]),null)},createLineString:function(){if(0===arguments.length)return this.createLineString(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLineString(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(R(arguments[0],D)){var e=arguments[0];return new St(e,this)}}},createMultiLineString:function(){if(0===arguments.length)return new gt(null,this);if(1===arguments.length){var t=arguments[0];return new gt(t,this)}},buildGeometry:function(t){for(var e=null,n=!1,i=!1,r=t.iterator();r.hasNext();){var s=r.next(),o=s.getClass();null===e&&(e=o),o!==e&&(n=!0),s.isGeometryCollectionOrDerived()&&(i=!0)}if(null===e)return this.createGeometryCollection();if(n||i)return this.createGeometryCollection(ie.toGeometryArray(t));var a=t.iterator().next(),u=t.size()>1;if(u){if(a instanceof Tt)return this.createMultiPolygon(ie.toPolygonArray(t));if(a instanceof St)return this.createMultiLineString(ie.toLineStringArray(t));if(a instanceof Lt)return this.createMultiPoint(ie.toPointArray(t));f.shouldNeverReachHere(\"Unhandled class: \"+a.getClass().getName())}return a},createMultiPointFromCoords:function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},createPoint:function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof g){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(R(arguments[0],D)){var e=arguments[0];return new Lt(e,this)}}},getCoordinateSequenceFactory:function(){return this.coordinateSequenceFactory},createPolygon:function(){if(0===arguments.length)return new Tt(null,null,this);if(1===arguments.length){if(R(arguments[0],D)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof bt){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];return new Tt(i,r,this)}},getSRID:function(){return this.SRID},createGeometryCollection:function(){if(0===arguments.length)return new ft(null,this);if(1===arguments.length){var t=arguments[0];return new ft(t,this)}},createGeometry:function(t){var e=new _t(this);return e.edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];arguments[1];return this.coordinateSequenceFactory.create(t)}}})},getPrecisionModel:function(){return this.precisionModel},createLinearRing:function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(R(arguments[0],D)){var e=arguments[0];return new bt(e,this)}}},createMultiPolygon:function(){if(0===arguments.length)return new Ot(null,this);if(1===arguments.length){var t=arguments[0];return new Ot(t,this)}},createMultiPoint:function(){if(0===arguments.length)return new Pt(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new Pt(t,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(R(arguments[0],D)){var n=arguments[0];if(null===n)return this.createMultiPoint(new Array(0).fill(null));for(var i=new Array(n.size()).fill(null),r=0;r<n.size();r++){var s=this.getCoordinateSequenceFactory().create(1,n.getDimension());Ct.copy(n,r,s,0,1),i[r]=this.createPoint(s)}return this.createMultiPoint(i)}}},interfaces_:function(){return[u]},getClass:function(){return ie}}),ie.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.getDefaultCoordinateSequenceFactory=function(){return qt.instance()},ie.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},ie.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},ie.serialVersionUID=-0x5ea75f2051eeb400;var oo={typeStr:/^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,emptyTypeStr:/^\\s*(\\w+)\\s*EMPTY\\s*$/,spaces:/\\s+/,parenComma:/\\)\\s*,\\s*\\(/,doubleParenComma:/\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,trimParens:/^\\s*\\(?(.*?)\\)?\\s*$/};e(re.prototype,{read:function(t){var e,n,i;t=t.replace(/[\\n\\r]/g,\" \");var r=oo.typeStr.exec(t);if(t.search(\"EMPTY\")!==-1&&(r=oo.emptyTypeStr.exec(t),r[2]=void 0),r&&(n=r[1].toLowerCase(),\ni=r[2],uo[n]&&(e=uo[n].apply(this,[i]))),void 0===e)throw new Error(\"Could not parse WKT \"+t);return e},write:function(t){return this.extractGeometry(t)},extractGeometry:function(t){var e=t.getGeometryType().toLowerCase();if(!ao[e])return null;var n,i=e.toUpperCase();return n=t.isEmpty()?i+\" EMPTY\":i+\"(\"+ao[e].apply(this,[t])+\")\"}});var ao={coordinate:function(t){return t.x+\" \"+t.y},point:function(t){return ao.coordinate.call(this,t.coordinates.coordinates[0])},multipoint:function(t){for(var e=[],n=0,i=t.geometries.length;n<i;++n)e.push(\"(\"+ao.point.apply(this,[t.geometries[n]])+\")\");return e.join(\",\")},linestring:function(t){for(var e=[],n=0,i=t.points.coordinates.length;n<i;++n)e.push(ao.coordinate.apply(this,[t.points.coordinates[n]]));return e.join(\",\")},linearring:function(t){for(var e=[],n=0,i=t.points.coordinates.length;n<i;++n)e.push(ao.coordinate.apply(this,[t.points.coordinates[n]]));return e.join(\",\")},multilinestring:function(t){for(var e=[],n=0,i=t.geometries.length;n<i;++n)e.push(\"(\"+ao.linestring.apply(this,[t.geometries[n]])+\")\");return e.join(\",\")},polygon:function(t){var e=[];e.push(\"(\"+ao.linestring.apply(this,[t.shell])+\")\");for(var n=0,i=t.holes.length;n<i;++n)e.push(\"(\"+ao.linestring.apply(this,[t.holes[n]])+\")\");return e.join(\",\")},multipolygon:function(t){for(var e=[],n=0,i=t.geometries.length;n<i;++n)e.push(\"(\"+ao.polygon.apply(this,[t.geometries[n]])+\")\");return e.join(\",\")},geometrycollection:function(t){for(var e=[],n=0,i=t.geometries.length;n<i;++n)e.push(this.extractGeometry(t.geometries[n]));return e.join(\",\")}},uo={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(oo.spaces);return this.geometryFactory.createPoint(new g(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e,n=t.trim().split(\",\"),i=[],r=0,s=n.length;r<s;++r)e=n[r].replace(oo.trimParens,\"$1\"),i.push(uo.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(i)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(\",\"),i=[],r=0,s=n.length;r<s;++r)e=n[r].trim().split(oo.spaces),i.push(new g(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(i)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(\",\"),i=[],r=0,s=n.length;r<s;++r)e=n[r].trim().split(oo.spaces),i.push(new g(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(i)},multilinestring:function(t){if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e,n=t.trim().split(oo.parenComma),i=[],r=0,s=n.length;r<s;++r)e=n[r].replace(oo.trimParens,\"$1\"),i.push(uo.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(i)},polygon:function(t){if(void 0===t)return this.geometryFactory.createPolygon();for(var e,n,i,r,s=t.trim().split(oo.parenComma),o=[],a=0,u=s.length;a<u;++a)e=s[a].replace(oo.trimParens,\"$1\"),n=uo.linestring.apply(this,[e]),i=this.geometryFactory.createLinearRing(n.points),0===a?r=i:o.push(i);return this.geometryFactory.createPolygon(r,o)},multipolygon:function(t){if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e,n=t.trim().split(oo.doubleParenComma),i=[],r=0,s=n.length;r<s;++r)e=n[r].replace(oo.trimParens,\"$1\"),i.push(uo.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(i)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();t=t.replace(/,\\s*([A-Za-z])/g,\"|$1\");for(var e=t.trim().split(\"|\"),n=[],i=0,r=e.length;i<r;++i)n.push(this.read(e[i]));return this.geometryFactory.createGeometryCollection(n)}};e(se.prototype,{write:function(t){return this.parser.write(t)}}),e(se,{toLineString:function(t,e){if(2!==arguments.length)throw new Error(\"Not implemented\");return\"LINESTRING ( \"+t.x+\" \"+t.y+\", \"+e.x+\" \"+e.y+\" )\"}}),e(oe.prototype,{getIndexAlongSegment:function(t,e){return this.computeIntLineIndex(),this.intLineIndex[t][e]},getTopologySummary:function(){var t=new P;return this.isEndPoint()&&t.append(\" endpoint\"),this._isProper&&t.append(\" proper\"),this.isCollinear()&&t.append(\" collinear\"),t.toString()},computeIntersection:function(t,e,n,i){this.inputLines[0][0]=t,this.inputLines[0][1]=e,this.inputLines[1][0]=n,this.inputLines[1][1]=i,this.result=this.computeIntersect(t,e,n,i)},getIntersectionNum:function(){return this.result},computeIntLineIndex:function(){if(0===arguments.length)null===this.intLineIndex&&(this.intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0],e=this.getEdgeDistance(t,0),n=this.getEdgeDistance(t,1);e>n?(this.intLineIndex[t][0]=0,this.intLineIndex[t][1]=1):(this.intLineIndex[t][0]=1,this.intLineIndex[t][1]=0)}},isProper:function(){return this.hasIntersection()&&this._isProper},setPrecisionModel:function(t){this.precisionModel=t},isInteriorIntersection:function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this.result;e++)if(!this.intPt[e].equals2D(this.inputLines[t][0])&&!this.intPt[e].equals2D(this.inputLines[t][1]))return!0;return!1}},getIntersection:function(t){return this.intPt[t]},isEndPoint:function(){return this.hasIntersection()&&!this._isProper},hasIntersection:function(){return this.result!==oe.NO_INTERSECTION},getEdgeDistance:function(t,e){var n=oe.computeEdgeDistance(this.intPt[e],this.inputLines[t][0],this.inputLines[t][1]);return n},isCollinear:function(){return this.result===oe.COLLINEAR_INTERSECTION},toString:function(){return se.toLineString(this.inputLines[0][0],this.inputLines[0][1])+\" - \"+se.toLineString(this.inputLines[1][0],this.inputLines[1][1])+this.getTopologySummary()},getEndpoint:function(t,e){return this.inputLines[t][e]},isIntersection:function(t){for(var e=0;e<this.result;e++)if(this.intPt[e].equals2D(t))return!0;return!1},getIntersectionAlongSegment:function(t,e){return this.computeIntLineIndex(),this.intPt[this.intLineIndex[t][e]]},interfaces_:function(){return[]},getClass:function(){return oe}}),oe.computeEdgeDistance=function(t,e,n){var i=Math.abs(n.x-e.x),r=Math.abs(n.y-e.y),s=-1;if(t.equals(e))s=0;else if(t.equals(n))s=i>r?i:r;else{var o=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);s=i>r?o:a,0!==s||t.equals(e)||(s=Math.max(o,a))}return f.isTrue(!(0===s&&!t.equals(e)),\"Bad distance calculation\"),s},oe.nonRobustComputeEdgeDistance=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,s=Math.sqrt(i*i+r*r);return f.isTrue(!(0===s&&!t.equals(e)),\"Invalid distance calculation\"),s},oe.DONT_INTERSECT=0,oe.DO_INTERSECT=1,oe.COLLINEAR=2,oe.NO_INTERSECTION=0,oe.POINT_INTERSECTION=1,oe.COLLINEAR_INTERSECTION=2,h(ae,oe),e(ae.prototype,{isInSegmentEnvelopes:function(t){var e=new C(this.inputLines[0][0],this.inputLines[0][1]),n=new C(this.inputLines[1][0],this.inputLines[1][1]);return e.contains(t)&&n.contains(t)},computeIntersection:function(){if(3!==arguments.length)return oe.prototype.computeIntersection.apply(this,arguments);var t=arguments[0],e=arguments[1],n=arguments[2];return this._isProper=!1,C.intersects(e,n,t)&&0===he.orientationIndex(e,n,t)&&0===he.orientationIndex(n,e,t)?(this._isProper=!0,(t.equals(e)||t.equals(n))&&(this._isProper=!1),this.result=oe.POINT_INTERSECTION,null):void(this.result=oe.NO_INTERSECTION)},normalizeToMinimum:function(t,e,n,i,r){r.x=this.smallestInAbsValue(t.x,e.x,n.x,i.x),r.y=this.smallestInAbsValue(t.y,e.y,n.y,i.y),t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},safeHCoordinateIntersection:function(t,e,n,i){var r=null;try{r=F.intersection(t,e,n,i)}catch(s){if(!(s instanceof w))throw s;r=ae.nearestEndpoint(t,e,n,i)}finally{}return r},intersection:function(t,e,n,i){var r=this.intersectionWithNormalization(t,e,n,i);return this.isInSegmentEnvelopes(r)||(r=new g(ae.nearestEndpoint(t,e,n,i))),null!==this.precisionModel&&this.precisionModel.makePrecise(r),r},smallestInAbsValue:function(t,e,n,i){var r=t,s=Math.abs(r);return Math.abs(e)<s&&(r=e,s=Math.abs(e)),Math.abs(n)<s&&(r=n,s=Math.abs(n)),Math.abs(i)<s&&(r=i),r},checkDD:function(t,e,n,i,r){var s=M.intersection(t,e,n,i),o=this.isInSegmentEnvelopes(s);A.out.println(\"DD in env = \"+o+\"  --------------------- \"+s),r.distance(s)>1e-4&&A.out.println(\"Distance = \"+r.distance(s))},intersectionWithNormalization:function(t,e,n,i){var r=new g(t),s=new g(e),o=new g(n),a=new g(i),u=new g;this.normalizeToEnvCentre(r,s,o,a,u);var l=this.safeHCoordinateIntersection(r,s,o,a);return l.x+=u.x,l.y+=u.y,l},computeCollinearIntersection:function(t,e,n,i){var r=C.intersects(t,e,n),s=C.intersects(t,e,i),o=C.intersects(n,i,t),a=C.intersects(n,i,e);return r&&s?(this.intPt[0]=n,this.intPt[1]=i,oe.COLLINEAR_INTERSECTION):o&&a?(this.intPt[0]=t,this.intPt[1]=e,oe.COLLINEAR_INTERSECTION):r&&o?(this.intPt[0]=n,this.intPt[1]=t,!n.equals(t)||s||a?oe.COLLINEAR_INTERSECTION:oe.POINT_INTERSECTION):r&&a?(this.intPt[0]=n,this.intPt[1]=e,!n.equals(e)||s||o?oe.COLLINEAR_INTERSECTION:oe.POINT_INTERSECTION):s&&o?(this.intPt[0]=i,this.intPt[1]=t,!i.equals(t)||r||a?oe.COLLINEAR_INTERSECTION:oe.POINT_INTERSECTION):s&&a?(this.intPt[0]=i,this.intPt[1]=e,!i.equals(e)||r||o?oe.COLLINEAR_INTERSECTION:oe.POINT_INTERSECTION):oe.NO_INTERSECTION},normalizeToEnvCentre:function(t,e,n,i,r){var s=t.x<e.x?t.x:e.x,o=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,u=t.y>e.y?t.y:e.y,l=n.x<i.x?n.x:i.x,h=n.y<i.y?n.y:i.y,c=n.x>i.x?n.x:i.x,f=n.y>i.y?n.y:i.y,g=s>l?s:l,d=a<c?a:c,p=o>h?o:h,v=u<f?u:f,m=(g+d)/2,y=(p+v)/2;r.x=m,r.y=y,t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},computeIntersect:function(t,e,n,i){if(this._isProper=!1,!C.intersects(t,e,n,i))return oe.NO_INTERSECTION;var r=he.orientationIndex(t,e,n),s=he.orientationIndex(t,e,i);if(r>0&&s>0||r<0&&s<0)return oe.NO_INTERSECTION;var o=he.orientationIndex(n,i,t),a=he.orientationIndex(n,i,e);if(o>0&&a>0||o<0&&a<0)return oe.NO_INTERSECTION;var u=0===r&&0===s&&0===o&&0===a;return u?this.computeCollinearIntersection(t,e,n,i):(0===r||0===s||0===o||0===a?(this._isProper=!1,t.equals2D(n)||t.equals2D(i)?this.intPt[0]=t:e.equals2D(n)||e.equals2D(i)?this.intPt[0]=e:0===r?this.intPt[0]=new g(n):0===s?this.intPt[0]=new g(i):0===o?this.intPt[0]=new g(t):0===a&&(this.intPt[0]=new g(e))):(this._isProper=!0,this.intPt[0]=this.intersection(t,e,n,i)),oe.POINT_INTERSECTION)},interfaces_:function(){return[]},getClass:function(){return ae}}),ae.nearestEndpoint=function(t,e,n,i){var r=t,s=he.distancePointLine(t,n,i),o=he.distancePointLine(e,n,i);return o<s&&(s=o,r=e),o=he.distancePointLine(n,t,e),o<s&&(s=o,r=n),o=he.distancePointLine(i,t,e),o<s&&(s=o,r=i),r},e(ue.prototype,{interfaces_:function(){return[]},getClass:function(){return ue}}),ue.orientationIndex=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,s=n.x-e.x,o=n.y-e.y;return ue.signOfDet2x2(i,r,s,o)},ue.signOfDet2x2=function(t,e,n,i){var r=null,s=null,o=null,a=0;if(r=1,0===t||0===i)return 0===e||0===n?0:e>0?n>0?-r:r:n>0?r:-r;if(0===e||0===n)return i>0?t>0?r:-r:t>0?-r:r;if(0<e?0<i?e<=i||(r=-r,s=t,t=n,n=s,s=e,e=i,i=s):e<=-i?(r=-r,n=-n,i=-i):(s=t,t=-n,n=s,s=e,e=-i,i=s):0<i?-e<=i?(r=-r,t=-t,e=-e):(s=-t,t=n,n=s,s=-e,e=i,i=s):e>=i?(t=-t,e=-e,n=-n,i=-i):(r=-r,s=-t,t=-n,n=s,s=-e,e=-i,i=s),0<t){if(!(0<n))return r;if(!(t<=n))return r}else{if(0<n)return-r;if(!(t>=n))return-r;r=-r,t=-t,n=-n}for(;;){if(a+=1,o=Math.floor(n/t),n-=o*t,i-=o*e,i<0)return-r;if(i>e)return r;if(t>n+n){if(e<i+i)return r}else{if(e>i+i)return-r;n=t-n,i=e-i,r=-r}if(0===i)return 0===n?0:-r;if(0===n)return r;if(o=Math.floor(t/n),t-=o*n,e-=o*i,e<0)return r;if(e>i)return-r;if(n>t+t){if(i<e+e)return-r}else{if(i>e+e)return r;t=n-t,e=i-e,r=-r}if(0===e)return 0===t?0:r;if(0===t)return-r}},e(le.prototype,{countSegment:function(t,e){if(t.x<this.p.x&&e.x<this.p.x)return null;if(this.p.x===e.x&&this.p.y===e.y)return this.isPointOnSegment=!0,null;if(t.y===this.p.y&&e.y===this.p.y){var n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this.p.x>=n&&this.p.x<=i&&(this.isPointOnSegment=!0),null}if(t.y>this.p.y&&e.y<=this.p.y||e.y>this.p.y&&t.y<=this.p.y){var r=t.x-this.p.x,s=t.y-this.p.y,o=e.x-this.p.x,a=e.y-this.p.y,u=ue.signOfDet2x2(r,s,o,a);if(0===u)return this.isPointOnSegment=!0,null;a<s&&(u=-u),u>0&&this.crossingCount++}},isPointInPolygon:function(){return this.getLocation()!==L.EXTERIOR},getLocation:function(){return this.isPointOnSegment?L.BOUNDARY:this.crossingCount%2===1?L.INTERIOR:L.EXTERIOR},isOnSegment:function(){return this.isPointOnSegment},interfaces_:function(){return[]},getClass:function(){return le}}),le.locatePointInRing=function(){if(arguments[0]instanceof g&&R(arguments[1],D)){for(var t=arguments[0],e=arguments[1],n=new le(t),i=new g,r=new g,s=1;s<e.size();s++)if(e.getCoordinate(s,i),e.getCoordinate(s-1,r),n.countSegment(i,r),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof g&&arguments[1]instanceof Array){for(var o=arguments[0],a=arguments[1],n=new le(o),s=1;s<a.length;s++){var i=a[s],r=a[s-1];if(n.countSegment(i,r),n.isOnSegment())return n.getLocation()}return n.getLocation()}},e(he.prototype,{interfaces_:function(){return[]},getClass:function(){return he}}),he.orientationIndex=function(t,e,n){return M.orientationIndex(t,e,n)},he.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,i=1;i<t.length-1;i++){var r=t[i].x-n,s=t[i+1].y,o=t[i-1].y;e+=r*(o-s)}return e/2}if(R(arguments[0],D)){var a=arguments[0],u=a.size();if(u<3)return 0;var l=new g,h=new g,c=new g;a.getCoordinate(0,h),a.getCoordinate(1,c);var n=h.x;c.x-=n;for(var e=0,i=1;i<u-1;i++)l.y=h.y,h.x=c.x,h.y=c.y,a.getCoordinate(i+1,c),c.x-=n,e+=h.x*(l.y-c.y);return e/2}},he.distanceLineLine=function(t,e,n,i){if(t.equals(e))return he.distancePointLine(t,n,i);if(n.equals(i))return he.distancePointLine(i,t,e);var r=!1;if(C.intersects(t,e,n,i)){var s=(e.x-t.x)*(i.y-n.y)-(e.y-t.y)*(i.x-n.x);if(0===s)r=!0;else{var o=(t.y-n.y)*(i.x-n.x)-(t.x-n.x)*(i.y-n.y),a=(t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y),u=a/s,l=o/s;(l<0||l>1||u<0||u>1)&&(r=!0)}}else r=!0;return r?T.min(he.distancePointLine(t,n,i),he.distancePointLine(e,n,i),he.distancePointLine(n,t,e),he.distancePointLine(i,t,e)):0},he.isPointInRing=function(t,e){return he.locatePointInRing(t,e)!==L.EXTERIOR},he.computeLength=function(t){var e=t.size();if(e<=1)return 0;var n=0,i=new g;t.getCoordinate(0,i);for(var r=i.x,s=i.y,o=1;o<e;o++){t.getCoordinate(o,i);var a=i.x,u=i.y,l=a-r,h=u-s;n+=Math.sqrt(l*l+h*h),r=a,s=u}return n},he.isCCW=function(t){var e=t.length-1;if(e<3)throw new i(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var n=t[0],r=0,s=1;s<=e;s++){var o=t[s];o.y>n.y&&(n=o,r=s)}var a=r;do a-=1,a<0&&(a=e);while(t[a].equals2D(n)&&a!==r);var u=r;do u=(u+1)%e;while(t[u].equals2D(n)&&u!==r);var l=t[a],h=t[u];if(l.equals2D(n)||h.equals2D(n)||l.equals2D(h))return!1;var c=he.computeOrientation(l,n,h),f=!1;return f=0===c?l.x>h.x:c>0},he.locatePointInRing=function(t,e){return le.locatePointInRing(t,e)},he.distancePointLinePerpendicular=function(t,e,n){var i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)},he.computeOrientation=function(t,e,n){return he.orientationIndex(t,e,n)},he.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new i(\"Line array must contain at least one vertex\");for(var n=t.distance(e[0]),r=0;r<e.length-1;r++){var s=he.distancePointLine(t,e[r],e[r+1]);s<n&&(n=s)}return n}if(3===arguments.length){var o=arguments[0],a=arguments[1],u=arguments[2];if(a.x===u.x&&a.y===u.y)return o.distance(a);var l=(u.x-a.x)*(u.x-a.x)+(u.y-a.y)*(u.y-a.y),h=((o.x-a.x)*(u.x-a.x)+(o.y-a.y)*(u.y-a.y))/l;if(h<=0)return o.distance(a);if(h>=1)return o.distance(u);var c=((a.y-o.y)*(u.x-a.x)-(a.x-o.x)*(u.y-a.y))/l;return Math.abs(c)*Math.sqrt(l)}},he.isOnLine=function(t,e){for(var n=new ae,i=1;i<e.length;i++){var r=e[i-1],s=e[i];if(n.computeIntersection(t,r,s),n.hasIntersection())return!0}return!1},he.CLOCKWISE=-1,he.RIGHT=he.CLOCKWISE,he.COUNTERCLOCKWISE=1,he.LEFT=he.COUNTERCLOCKWISE,he.COLLINEAR=0,he.STRAIGHT=he.COLLINEAR,e(ce.prototype,{minX:function(){return Math.min(this.p0.x,this.p1.x)},orientationIndex:function(){if(arguments[0]instanceof ce){var t=arguments[0],e=he.orientationIndex(this.p0,this.p1,t.p0),n=he.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0?Math.max(e,n):e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof g){var i=arguments[0];return he.orientationIndex(this.p0,this.p1,i)}},toGeometry:function(t){return t.createLineString([this.p0,this.p1])},isVertical:function(){return this.p0.x===this.p1.x},equals:function(t){if(!(t instanceof ce))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},intersection:function(t){var e=new ae;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},project:function(){if(arguments[0]instanceof g){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new g(t);var e=this.projectionFactor(t),n=new g;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof ce){var i=arguments[0],r=this.projectionFactor(i.p0),s=this.projectionFactor(i.p1);if(r>=1&&s>=1)return null;if(r<=0&&s<=0)return null;var o=this.project(i.p0);r<0&&(o=this.p0),r>1&&(o=this.p1);var a=this.project(i.p1);return s<0&&(a=this.p0),s>1&&(a=this.p1),new ce(o,a)}},normalize:function(){this.p1.compareTo(this.p0)<0&&this.reverse()},angle:function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},getCoordinate:function(t){return 0===t?this.p0:this.p1},distancePerpendicular:function(t){return he.distancePointLinePerpendicular(t,this.p0,this.p1)},minY:function(){return Math.min(this.p0.y,this.p1.y)},midPoint:function(){return ce.midPoint(this.p0,this.p1)},projectionFactor:function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;if(i<=0)return r.NaN;var s=((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i;return s},closestPoints:function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),i=r.MAX_VALUE,s=null,o=this.closestPoint(t.p0);i=o.distance(t.p0),n[0]=o,n[1]=t.p0;var a=this.closestPoint(t.p1);s=a.distance(t.p1),s<i&&(i=s,n[0]=a,n[1]=t.p1);var u=t.closestPoint(this.p0);s=u.distance(this.p0),s<i&&(i=s,n[0]=this.p0,n[1]=u);var l=t.closestPoint(this.p1);return s=l.distance(this.p1),s<i&&(i=s,n[0]=this.p1,n[1]=l),n},closestPoint:function(t){var e=this.projectionFactor(t);if(e>0&&e<1)return this.project(t);var n=this.p0.distance(t),i=this.p1.distance(t);return n<i?this.p0:this.p1},maxX:function(){return Math.max(this.p0.x,this.p1.x)},getLength:function(){return this.p0.distance(this.p1)},compareTo:function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},reverse:function(){var t=this.p0;this.p0=this.p1,this.p1=t},equalsTopo:function(t){return this.p0.equals(t.p0)&&this.p1.equals(t.p1)||this.p0.equals(t.p1)&&this.p1.equals(t.p0)},lineIntersection:function(t){try{var e=F.intersection(this.p0,this.p1,t.p0,t.p1);return e}catch(t){if(!(t instanceof w))throw t}finally{}return null},maxY:function(){return Math.max(this.p0.y,this.p1.y)},pointAlongOffset:function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,s=this.p1.y-this.p0.y,o=Math.sqrt(r*r+s*s),a=0,u=0;if(0!==e){if(o<=0)throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");a=e*r/o,u=e*s/o}var l=n-u,h=i+a,c=new g(l,h);return c},setCoordinates:function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},segmentFraction:function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||r.isNaN(e))&&(e=1),e},toString:function(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\"},isHorizontal:function(){return this.p0.y===this.p1.y},distance:function(){if(arguments[0]instanceof ce){var t=arguments[0];return he.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof g){var e=arguments[0];return he.distancePointLine(e,this.p0,this.p1)}},pointAlong:function(t){var e=new g;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},hashCode:function(){var t=java.lang.Double.doubleToLongBits(this.p0.x);t^=31*java.lang.Double.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=java.lang.Double.doubleToLongBits(this.p1.x);n^=31*java.lang.Double.doubleToLongBits(this.p1.y);var i=Math.trunc(n)^Math.trunc(n>>32);return e^i},interfaces_:function(){return[s,u]},getClass:function(){return ce}}),ce.midPoint=function(t,e){return new g((t.x+e.x)/2,(t.y+e.y)/2)},ce.serialVersionUID=0x2d2172135f411c00,e(fe.prototype,{isIntersects:function(){return!this.isDisjoint()},isCovers:function(){var t=fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])||fe.isTrue(this.matrix[L.INTERIOR][L.BOUNDARY])||fe.isTrue(this.matrix[L.BOUNDARY][L.INTERIOR])||fe.isTrue(this.matrix[L.BOUNDARY][L.BOUNDARY]);return t&&this.matrix[L.EXTERIOR][L.INTERIOR]===lt.FALSE&&this.matrix[L.EXTERIOR][L.BOUNDARY]===lt.FALSE},isCoveredBy:function(){var t=fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])||fe.isTrue(this.matrix[L.INTERIOR][L.BOUNDARY])||fe.isTrue(this.matrix[L.BOUNDARY][L.INTERIOR])||fe.isTrue(this.matrix[L.BOUNDARY][L.BOUNDARY]);return t&&this.matrix[L.INTERIOR][L.EXTERIOR]===lt.FALSE&&this.matrix[L.BOUNDARY][L.EXTERIOR]===lt.FALSE},set:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),i=e%3;this.matrix[n][i]=lt.toDimensionValue(t.charAt(e))}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.matrix[r][s]=o}},isContains:function(){return fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&this.matrix[L.EXTERIOR][L.INTERIOR]===lt.FALSE&&this.matrix[L.EXTERIOR][L.BOUNDARY]===lt.FALSE},setAtLeast:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),i=e%3;this.setAtLeast(n,i,lt.toDimensionValue(t.charAt(e)))}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];this.matrix[r][s]<o&&(this.matrix[r][s]=o)}},setAtLeastIfValid:function(t,e,n){t>=0&&e>=0&&this.setAtLeast(t,e,n)},isWithin:function(){return fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&this.matrix[L.INTERIOR][L.EXTERIOR]===lt.FALSE&&this.matrix[L.BOUNDARY][L.EXTERIOR]===lt.FALSE},isTouches:function(t,e){return t>e?this.isTouches(e,t):(t===lt.A&&e===lt.A||t===lt.L&&e===lt.L||t===lt.L&&e===lt.A||t===lt.P&&e===lt.A||t===lt.P&&e===lt.L)&&(this.matrix[L.INTERIOR][L.INTERIOR]===lt.FALSE&&(fe.isTrue(this.matrix[L.INTERIOR][L.BOUNDARY])||fe.isTrue(this.matrix[L.BOUNDARY][L.INTERIOR])||fe.isTrue(this.matrix[L.BOUNDARY][L.BOUNDARY])))},isOverlaps:function(t,e){return t===lt.P&&e===lt.P||t===lt.A&&e===lt.A?fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&fe.isTrue(this.matrix[L.INTERIOR][L.EXTERIOR])&&fe.isTrue(this.matrix[L.EXTERIOR][L.INTERIOR]):t===lt.L&&e===lt.L&&(1===this.matrix[L.INTERIOR][L.INTERIOR]&&fe.isTrue(this.matrix[L.INTERIOR][L.EXTERIOR])&&fe.isTrue(this.matrix[L.EXTERIOR][L.INTERIOR]))},isEquals:function(t,e){return t===e&&(fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&this.matrix[L.INTERIOR][L.EXTERIOR]===lt.FALSE&&this.matrix[L.BOUNDARY][L.EXTERIOR]===lt.FALSE&&this.matrix[L.EXTERIOR][L.INTERIOR]===lt.FALSE&&this.matrix[L.EXTERIOR][L.BOUNDARY]===lt.FALSE)},toString:function(){for(var t=new P(\"123456789\"),e=0;e<3;e++)for(var n=0;n<3;n++)t.setCharAt(3*e+n,lt.toDimensionSymbol(this.matrix[e][n]));return t.toString()},setAll:function(t){for(var e=0;e<3;e++)for(var n=0;n<3;n++)this.matrix[e][n]=t},get:function(t,e){return this.matrix[t][e]},transpose:function(){var t=this.matrix[1][0];return this.matrix[1][0]=this.matrix[0][1],this.matrix[0][1]=t,t=this.matrix[2][0],this.matrix[2][0]=this.matrix[0][2],this.matrix[0][2]=t,t=this.matrix[2][1],this.matrix[2][1]=this.matrix[1][2],this.matrix[1][2]=t,this},matches:function(t){if(9!==t.length)throw new i(\"Should be length 9: \"+t);for(var e=0;e<3;e++)for(var n=0;n<3;n++)if(!fe.matches(this.matrix[e][n],t.charAt(3*e+n)))return!1;return!0},add:function(t){for(var e=0;e<3;e++)for(var n=0;n<3;n++)this.setAtLeast(e,n,t.get(e,n))},isDisjoint:function(){return this.matrix[L.INTERIOR][L.INTERIOR]===lt.FALSE&&this.matrix[L.INTERIOR][L.BOUNDARY]===lt.FALSE&&this.matrix[L.BOUNDARY][L.INTERIOR]===lt.FALSE&&this.matrix[L.BOUNDARY][L.BOUNDARY]===lt.FALSE},isCrosses:function(t,e){return t===lt.P&&e===lt.L||t===lt.P&&e===lt.A||t===lt.L&&e===lt.A?fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&fe.isTrue(this.matrix[L.INTERIOR][L.EXTERIOR]):t===lt.L&&e===lt.P||t===lt.A&&e===lt.P||t===lt.A&&e===lt.L?fe.isTrue(this.matrix[L.INTERIOR][L.INTERIOR])&&fe.isTrue(this.matrix[L.EXTERIOR][L.INTERIOR]):t===lt.L&&e===lt.L&&0===this.matrix[L.INTERIOR][L.INTERIOR]},interfaces_:function(){return[o]},getClass:function(){return fe}}),fe.matches=function(){if(Number.isInteger(arguments[0])&&\"string\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];return e===lt.SYM_DONTCARE||(e===lt.SYM_TRUE&&(t>=0||t===lt.TRUE)||(e===lt.SYM_FALSE&&t===lt.FALSE||(e===lt.SYM_P&&t===lt.P||(e===lt.SYM_L&&t===lt.L||e===lt.SYM_A&&t===lt.A))))}if(\"string\"==typeof arguments[0]&&\"string\"==typeof arguments[1]){var n=arguments[0],i=arguments[1],r=new fe(n);return r.matches(i)}},fe.isTrue=function(t){return t>=0||t===lt.TRUE};var lo=Object.freeze({Coordinate:g,CoordinateList:N,Envelope:C,LineSegment:ce,GeometryFactory:ie,Geometry:B,Point:Lt,LineString:St,LinearRing:bt,Polygon:Tt,GeometryCollection:ft,MultiPoint:Pt,MultiLineString:gt,MultiPolygon:Ot,Dimension:lt,IntersectionMatrix:fe,PrecisionModel:ee});e(ge.prototype,{addPoint:function(t){this.ptCount+=1,this.ptCentSum.x+=t.x,this.ptCentSum.y+=t.y},setBasePoint:function(t){null===this.areaBasePt&&(this.areaBasePt=t)},addLineSegments:function(t){for(var e=0,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);if(0!==i){e+=i;var r=(t[n].x+t[n+1].x)/2;this.lineCentSum.x+=i*r;var s=(t[n].y+t[n+1].y)/2;this.lineCentSum.y+=i*s}}this.totalLength+=e,0===e&&t.length>0&&this.addPoint(t[0])},addHole:function(t){for(var e=he.isCCW(t),n=0;n<t.length-1;n++)this.addTriangle(this.areaBasePt,t[n],t[n+1],e);this.addLineSegments(t)},getCentroid:function(){var t=new g;if(Math.abs(this.areasum2)>0)t.x=this.cg3.x/3/this.areasum2,t.y=this.cg3.y/3/this.areasum2;else if(this.totalLength>0)t.x=this.lineCentSum.x/this.totalLength,t.y=this.lineCentSum.y/this.totalLength;else{if(!(this.ptCount>0))return null;t.x=this.ptCentSum.x/this.ptCount,t.y=this.ptCentSum.y/this.ptCount}return t},addShell:function(t){t.length>0&&this.setBasePoint(t[0]);for(var e=!he.isCCW(t),n=0;n<t.length-1;n++)this.addTriangle(this.areaBasePt,t[n],t[n+1],e);this.addLineSegments(t)},addTriangle:function(t,e,n,i){var r=i?1:-1;ge.centroid3(t,e,n,this.triangleCent3);var s=ge.area2(t,e,n);this.cg3.x+=r*s*this.triangleCent3.x,this.cg3.y+=r*s*this.triangleCent3.y,this.areasum2+=r*s},add:function(){if(arguments[0]instanceof Tt){var t=arguments[0];this.addShell(t.getExteriorRing().getCoordinates());for(var e=0;e<t.getNumInteriorRing();e++)this.addHole(t.getInteriorRingN(e).getCoordinates())}else if(arguments[0]instanceof B){var n=arguments[0];if(n.isEmpty())return null;if(n instanceof Lt)this.addPoint(n.getCoordinate());else if(n instanceof St)this.addLineSegments(n.getCoordinates());else if(n instanceof Tt){var i=n;this.add(i)}else if(n instanceof ft)for(var r=n,e=0;e<r.getNumGeometries();e++)this.add(r.getGeometryN(e))}},interfaces_:function(){return[]},getClass:function(){return ge}}),ge.area2=function(t,e,n){return(e.x-t.x)*(n.y-t.y)-(n.x-t.x)*(e.y-t.y)},ge.centroid3=function(t,e,n,i){return i.x=t.x+e.x+n.x,i.y=t.y+e.y+n.y,null},ge.getCentroid=function(t){var e=new ge(t);return e.getCentroid()},de.prototype=new Error,de.prototype.name=\"EmptyStackException\",pe.prototype=new y,pe.prototype.add=function(t){return this.array_.push(t),!0},pe.prototype.get=function(t){if(t<0||t>=this.size())throw new IndexOutOfBoundsException;return this.array_[t]},pe.prototype.push=function(t){return this.array_.push(t),t},pe.prototype.pop=function(t){if(0===this.array_.length)throw new de;return this.array_.pop()},pe.prototype.peek=function(){if(0===this.array_.length)throw new de;return this.array_[this.array_.length-1]},pe.prototype.empty=function(){return 0===this.array_.length},pe.prototype.isEmpty=function(){return this.empty()},pe.prototype.search=function(t){return this.array_.indexOf(t)},pe.prototype.size=function(){return this.array_.length},pe.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e(ve.prototype,{filter:function(t){this.treeSet.contains(t)||(this.list.add(t),this.treeSet.add(t))},getCoordinates:function(){var t=new Array(this.list.size()).fill(null);return this.list.toArray(t)},interfaces_:function(){return[z]},getClass:function(){return ve}}),ve.filterCoordinates=function(t){for(var e=new ve,n=0;n<t.length;n++)e.filter(t[n]);return e.getCoordinates()},e(me.prototype,{preSort:function(t){for(var e=null,n=1;n<t.length;n++)(t[n].y<t[0].y||t[n].y===t[0].y&&t[n].x<t[0].x)&&(e=t[0],t[0]=t[n],t[n]=e);return ut.sort(t,1,t.length,new ye(t[0])),t},computeOctRing:function(t){var e=this.computeOctPts(t),n=new N;return n.add(e,!1),n.size()<3?null:(n.closeRing(),n.toCoordinateArray())},lineOrPolygon:function(t){if(t=this.cleanRing(t),3===t.length)return this.geomFactory.createLineString([t[0],t[1]]);var e=this.geomFactory.createLinearRing(t);return this.geomFactory.createPolygon(e,null)},cleanRing:function(t){f.equals(t[0],t[t.length-1]);for(var e=new I,n=null,i=0;i<=t.length-2;i++){var r=t[i],s=t[i+1];r.equals(s)||null!==n&&this.isBetween(n,r,s)||(e.add(r),n=r)}e.add(t[t.length-1]);var o=new Array(e.size()).fill(null);return e.toArray(o)},isBetween:function(t,e,n){if(0!==he.computeOrientation(t,e,n))return!1;if(t.x!==n.x){if(t.x<=e.x&&e.x<=n.x)return!0;if(n.x<=e.x&&e.x<=t.x)return!0}if(t.y!==n.y){if(t.y<=e.y&&e.y<=n.y)return!0;if(n.y<=e.y&&e.y<=t.y)return!0}return!1},reduce:function(t){var e=this.computeOctRing(t);if(null===e)return t;for(var n=new at,i=0;i<e.length;i++)n.add(e[i]);for(var i=0;i<t.length;i++)he.isPointInRing(t[i],e)||n.add(t[i]);var r=H.toCoordinateArray(n);return r.length<3?this.padArray3(r):r},getConvexHull:function(){if(0===this.inputPts.length)return this.geomFactory.createGeometryCollection(null);if(1===this.inputPts.length)return this.geomFactory.createPoint(this.inputPts[0]);if(2===this.inputPts.length)return this.geomFactory.createLineString(this.inputPts);var t=this.inputPts;this.inputPts.length>50&&(t=this.reduce(this.inputPts));var e=this.preSort(t),n=this.grahamScan(e),i=this.toCoordinateArray(n);return this.lineOrPolygon(i)},padArray3:function(t){for(var e=new Array(3).fill(null),n=0;n<e.length;n++)n<t.length?e[n]=t[n]:e[n]=t[0];return e},computeOctPts:function(t){for(var e=new Array(8).fill(null),n=0;n<e.length;n++)e[n]=t[0];for(var i=1;i<t.length;i++)t[i].x<e[0].x&&(e[0]=t[i]),t[i].x-t[i].y<e[1].x-e[1].y&&(e[1]=t[i]),t[i].y>e[2].y&&(e[2]=t[i]),t[i].x+t[i].y>e[3].x+e[3].y&&(e[3]=t[i]),t[i].x>e[4].x&&(e[4]=t[i]),t[i].x-t[i].y>e[5].x-e[5].y&&(e[5]=t[i]),t[i].y<e[6].y&&(e[6]=t[i]),t[i].x+t[i].y<e[7].x+e[7].y&&(e[7]=t[i]);return e},toCoordinateArray:function(t){for(var e=new Array(t.size()).fill(null),n=0;n<t.size();n++){var i=t.get(n);e[n]=i}return e},grahamScan:function(t){var e=null,n=new pe;e=n.push(t[0]),e=n.push(t[1]),e=n.push(t[2]);for(var i=3;i<t.length;i++){for(e=n.pop();!n.empty()&&he.computeOrientation(n.peek(),e,t[i])>0;)e=n.pop();e=n.push(e),e=n.push(t[i]);\n}return e=n.push(t[0]),n},interfaces_:function(){return[]},getClass:function(){return me}}),me.extractCoordinates=function(t){var e=new ve;return t.apply(e),e.getCoordinates()},e(ye.prototype,{compare:function(t,e){var n=t,i=e;return ye.polarCompare(this.origin,n,i)},interfaces_:function(){return[a]},getClass:function(){return ye}}),ye.polarCompare=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,s=n.x-t.x,o=n.y-t.y,a=he.computeOrientation(t,e,n);if(a===he.COUNTERCLOCKWISE)return 1;if(a===he.CLOCKWISE)return-1;var u=i*i+r*r,l=s*s+o*o;return u<l?-1:u>l?1:0},me.RadialComparator=ye,e(xe.prototype,{transformPoint:function(t,e){return this.factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},transformPolygon:function(t,e){var n=!0,i=this.transformLinearRing(t.getExteriorRing(),t);null!==i&&i instanceof bt&&!i.isEmpty()||(n=!1);for(var r=new I,s=0;s<t.getNumInteriorRing();s++){var o=this.transformLinearRing(t.getInteriorRingN(s),t);null===o||o.isEmpty()||(o instanceof bt||(n=!1),r.add(o))}if(n)return this.factory.createPolygon(i,r.toArray([]));var a=new I;return null!==i&&a.add(i),a.addAll(r),this.factory.buildGeometry(a)},createCoordinateSequence:function(t){return this.factory.getCoordinateSequenceFactory().create(t)},getInputGeometry:function(){return this.inputGeom},transformMultiLineString:function(t,e){for(var n=new I,i=0;i<t.getNumGeometries();i++){var r=this.transformLineString(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this.factory.buildGeometry(n)},transformCoordinates:function(t,e){return this.copy(t)},transformLineString:function(t,e){return this.factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},transformMultiPoint:function(t,e){for(var n=new I,i=0;i<t.getNumGeometries();i++){var r=this.transformPoint(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this.factory.buildGeometry(n)},transformMultiPolygon:function(t,e){for(var n=new I,i=0;i<t.getNumGeometries();i++){var r=this.transformPolygon(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this.factory.buildGeometry(n)},copy:function(t){return t.copy()},transformGeometryCollection:function(t,e){for(var n=new I,i=0;i<t.getNumGeometries();i++){var r=this.transform(t.getGeometryN(i));null!==r&&(this.pruneEmptyGeometry&&r.isEmpty()||n.add(r))}return this.preserveGeometryCollectionType?this.factory.createGeometryCollection(ie.toGeometryArray(n)):this.factory.buildGeometry(n)},transform:function(t){if(this.inputGeom=t,this.factory=t.getFactory(),t instanceof Lt)return this.transformPoint(t,null);if(t instanceof Pt)return this.transformMultiPoint(t,null);if(t instanceof bt)return this.transformLinearRing(t,null);if(t instanceof St)return this.transformLineString(t,null);if(t instanceof gt)return this.transformMultiLineString(t,null);if(t instanceof Tt)return this.transformPolygon(t,null);if(t instanceof Ot)return this.transformMultiPolygon(t,null);if(t instanceof ft)return this.transformGeometryCollection(t,null);throw new i(\"Unknown Geometry subtype: \"+t.getClass().getName())},transformLinearRing:function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this.factory.createLinearRing(null);var i=n.size();return i>0&&i<4&&!this.preserveType?this.factory.createLineString(n):this.factory.createLinearRing(n)},interfaces_:function(){return[]},getClass:function(){return xe}}),e(Ee.prototype,{snapVertices:function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),i=0;i<n;i++){var r=t.get(i),s=this.findSnapForVertex(r,e);null!==s&&(t.set(i,new g(s)),0===i&&this._isClosed&&t.set(t.size()-1,new g(s)))}},findSnapForVertex:function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this.snapTolerance)return e[n]}return null},snapTo:function(t){var e=new N(this.srcPts);this.snapVertices(e,t),this.snapSegments(e,t);var n=e.toCoordinateArray();return n},snapSegments:function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var i=0;i<n;i++){var r=e[i],s=this.findSegmentIndexToSnap(r,t);s>=0&&t.add(s+1,new g(r),!1)}},findSegmentIndexToSnap:function(t,e){for(var n=r.MAX_VALUE,i=-1,s=0;s<e.size()-1;s++){if(this.seg.p0=e.get(s),this.seg.p1=e.get(s+1),this.seg.p0.equals2D(t)||this.seg.p1.equals2D(t)){if(this.allowSnappingToSourceVertices)continue;return-1}var o=this.seg.distance(t);o<this.snapTolerance&&o<n&&(n=o,i=s)}return i},setAllowSnappingToSourceVertices:function(t){this.allowSnappingToSourceVertices=t},interfaces_:function(){return[]},getClass:function(){return Ee}}),Ee.isClosed=function(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])},e(Ie.prototype,{snapTo:function(t,e){var n=this.extractTargetCoordinates(t),i=new Ne(e,n);return i.transform(this.srcGeom)},snapToSelf:function(t,e){var n=this.extractTargetCoordinates(this.srcGeom),i=new Ne(t,n,(!0)),r=i.transform(this.srcGeom),s=r;return e&&R(s,Rt)&&(s=r.buffer(0)),s},computeSnapTolerance:function(t){var e=this.computeMinimumSegmentLength(t),n=e/10;return n},extractTargetCoordinates:function(t){for(var e=new at,n=t.getCoordinates(),i=0;i<n.length;i++)e.add(n[i]);return e.toArray(new Array(0).fill(null))},computeMinimumSegmentLength:function(t){for(var e=r.MAX_VALUE,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);i<e&&(e=i)}return e},interfaces_:function(){return[]},getClass:function(){return Ie}}),Ie.snap=function(t,e,n){var i=new Array(2).fill(null),r=new Ie(t);i[0]=r.snapTo(e,n);var s=new Ie(e);return i[1]=s.snapTo(i[0],n),i},Ie.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=Ie.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===ee.FIXED){var i=1/n.getScale()*2/1.415;i>e&&(e=i)}return e}if(2===arguments.length){var r=arguments[0],s=arguments[1];return Math.min(Ie.computeOverlaySnapTolerance(r),Ie.computeOverlaySnapTolerance(s))}},Ie.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal(),n=Math.min(e.getHeight(),e.getWidth()),i=n*Ie.SNAP_PRECISION_FACTOR;return i},Ie.snapToSelf=function(t,e,n){var i=new Ie(t);return i.snapToSelf(e,n)},Ie.SNAP_PRECISION_FACTOR=1e-9,h(Ne,xe),e(Ne.prototype,{snapLine:function(t,e){var n=new Ee(t,this.snapTolerance);return n.setAllowSnappingToSourceVertices(this.isSelfSnap),n.snapTo(e)},transformCoordinates:function(t,e){var n=t.toCoordinateArray(),i=this.snapLine(n,this.snapPts);return this.factory.getCoordinateSequenceFactory().create(i)},interfaces_:function(){return[]},getClass:function(){return Ne}}),e(Ce.prototype,{getCommon:function(){return r.longBitsToDouble(this.commonBits)},add:function(t){var e=r.doubleToLongBits(t);if(this.isFirst)return this.commonBits=e,this.commonSignExp=Ce.signExpBits(this.commonBits),this.isFirst=!1,null;var n=Ce.signExpBits(e);return n!==this.commonSignExp?(this.commonBits=0,null):(this.commonMantissaBitsCount=Ce.numCommonMostSigMantissaBits(this.commonBits,e),void(this.commonBits=Ce.zeroLowerBits(this.commonBits,64-(12+this.commonMantissaBitsCount))))},toString:function(){if(1===arguments.length){var t=arguments[0],e=r.longBitsToDouble(t),n=Long.toBinaryString(t),i=\"0000000000000000000000000000000000000000000000000000000000000000\"+n,s=i.substring(i.length-64),o=s.substring(0,1)+\"  \"+s.substring(1,12)+\"(exp) \"+s.substring(12)+\" [ \"+e+\" ]\";return o}},interfaces_:function(){return[]},getClass:function(){return Ce}}),Ce.getBit=function(t,e){var n=1<<e;return 0!==(t&n)?1:0},Ce.signExpBits=function(t){return t>>52},Ce.zeroLowerBits=function(t,e){var n=(1<<e)-1,i=~n,r=t&i;return r},Ce.numCommonMostSigMantissaBits=function(t,e){for(var n=0,i=52;i>=0;i--){if(Ce.getBit(t,i)!==Ce.getBit(e,i))return n;n++}return 52},e(Se.prototype,{addCommonBits:function(t){var e=new Le(this.commonCoord);t.apply(e),t.geometryChanged()},removeCommonBits:function(t){if(0===this.commonCoord.x&&0===this.commonCoord.y)return t;var e=new g(this.commonCoord);e.x=-e.x,e.y=-e.y;var n=new Le(e);return t.apply(n),t.geometryChanged(),t},getCommonCoordinate:function(){return this.commonCoord},add:function(t){t.apply(this.ccFilter),this.commonCoord=this.ccFilter.getCommonCoordinate()},interfaces_:function(){return[]},getClass:function(){return Se}}),e(we.prototype,{filter:function(t){this.commonBitsX.add(t.x),this.commonBitsY.add(t.y)},getCommonCoordinate:function(){return new g(this.commonBitsX.getCommon(),this.commonBitsY.getCommon())},interfaces_:function(){return[z]},getClass:function(){return we}}),e(Le.prototype,{filter:function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,i=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i)},isDone:function(){return!1},isGeometryChanged:function(){return!0},interfaces_:function(){return[ct]},getClass:function(){return Le}}),Se.CommonCoordinateFilter=we,Se.Translater=Le,e(Re.prototype,{next:function(){if(this.atStart)return this.atStart=!1,Re.isAtomic(this.parent)&&this.index++,this.parent;if(null!==this.subcollectionIterator){if(this.subcollectionIterator.hasNext())return this.subcollectionIterator.next();this.subcollectionIterator=null}if(this.index>=this.max)throw new x;var t=this.parent.getGeometryN(this.index++);return t instanceof ft?(this.subcollectionIterator=new Re(t),this.subcollectionIterator.next()):t},remove:function(){throw new UnsupportedOperationException(this.getClass().getName())},hasNext:function(){if(this.atStart)return!0;if(null!==this.subcollectionIterator){if(this.subcollectionIterator.hasNext())return!0;this.subcollectionIterator=null}return!(this.index>=this.max)},interfaces_:function(){return[p]},getClass:function(){return Re}}),Re.isAtomic=function(t){return!(t instanceof ft)},e(Te.prototype,{locateInternal:function(){if(arguments[0]instanceof g&&arguments[1]instanceof Tt){var t=arguments[0],e=arguments[1];if(e.isEmpty())return L.EXTERIOR;var n=e.getExteriorRing(),i=this.locateInPolygonRing(t,n);if(i===L.EXTERIOR)return L.EXTERIOR;if(i===L.BOUNDARY)return L.BOUNDARY;for(var r=0;r<e.getNumInteriorRing();r++){var s=e.getInteriorRingN(r),o=this.locateInPolygonRing(t,s);if(o===L.INTERIOR)return L.EXTERIOR;if(o===L.BOUNDARY)return L.BOUNDARY}return L.INTERIOR}if(arguments[0]instanceof g&&arguments[1]instanceof St){var a=arguments[0],u=arguments[1];if(!u.getEnvelopeInternal().intersects(a))return L.EXTERIOR;var l=u.getCoordinates();return u.isClosed()||!a.equals(l[0])&&!a.equals(l[l.length-1])?he.isOnLine(a,l)?L.INTERIOR:L.EXTERIOR:L.BOUNDARY}if(arguments[0]instanceof g&&arguments[1]instanceof Lt){var h=arguments[0],c=arguments[1],f=c.getCoordinate();return f.equals2D(h)?L.INTERIOR:L.EXTERIOR}},locateInPolygonRing:function(t,e){return e.getEnvelopeInternal().intersects(t)?he.locatePointInRing(t,e.getCoordinates()):L.EXTERIOR},intersects:function(t,e){return this.locate(t,e)!==L.EXTERIOR},updateLocationInfo:function(t){t===L.INTERIOR&&(this.isIn=!0),t===L.BOUNDARY&&this.numBoundaries++},computeLocation:function(t,e){if(e instanceof Lt&&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof St)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof Tt)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof gt)for(var n=e,i=0;i<n.getNumGeometries();i++){var r=n.getGeometryN(i);this.updateLocationInfo(this.locateInternal(t,r))}else if(e instanceof Ot)for(var s=e,i=0;i<s.getNumGeometries();i++){var o=s.getGeometryN(i);this.updateLocationInfo(this.locateInternal(t,o))}else if(e instanceof ft)for(var a=new Re(e);a.hasNext();){var u=a.next();u!==e&&this.computeLocation(t,u)}},locate:function(t,e){return e.isEmpty()?L.EXTERIOR:e instanceof St?this.locateInternal(t,e):e instanceof Tt?this.locateInternal(t,e):(this.isIn=!1,this.numBoundaries=0,this.computeLocation(t,e),this.boundaryRule.isInBoundary(this.numBoundaries)?L.BOUNDARY:this.numBoundaries>0||this.isIn?L.INTERIOR:L.EXTERIOR)},interfaces_:function(){return[]},getClass:function(){return Te}}),e(Pe.prototype,{interfaces_:function(){return[]},getClass:function(){return Pe}}),Pe.octant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new i(\"Cannot compute the octant for point ( \"+t+\", \"+e+\" )\");var n=Math.abs(t),r=Math.abs(e);return t>=0?e>=0?n>=r?0:1:n>=r?7:6:e>=0?n>=r?3:2:n>=r?4:5}if(arguments[0]instanceof g&&arguments[1]instanceof g){var s=arguments[0],o=arguments[1],a=o.x-s.x,u=o.y-s.y;if(0===a&&0===u)throw new i(\"Cannot compute the octant for two identical points \"+s);return Pe.octant(a,u)}},e(be.prototype,{getCoordinates:function(){},size:function(){},getCoordinate:function(t){},isClosed:function(){},setData:function(t){},getData:function(){},interfaces_:function(){return[]},getClass:function(){return be}}),e(Oe.prototype,{getCoordinates:function(){return this.pts},size:function(){return this.pts.length},getCoordinate:function(t){return this.pts[t]},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getSegmentOctant:function(t){return t===this.pts.length-1?-1:Pe.octant(this.getCoordinate(t),this.getCoordinate(t+1))},setData:function(t){this.data=t},getData:function(){return this.data},toString:function(){return se.toLineString(new Gt(this.pts))},interfaces_:function(){return[be]},getClass:function(){return Oe}}),e(_e.prototype,{getBounds:function(){},interfaces_:function(){return[]},getClass:function(){return _e}}),e(Me.prototype,{getItem:function(){return this.item},getBounds:function(){return this.bounds},interfaces_:function(){return[_e,u]},getClass:function(){return Me}}),e(De.prototype,{poll:function(){if(this.isEmpty())return null;var t=this.items.get(1);return this.items.set(1,this.items.get(this._size)),this._size-=1,this.reorder(1),t},size:function(){return this._size},reorder:function(t){for(var e=null,n=this.items.get(t);2*t<=this._size&&(e=2*t,e!==this._size&&this.items.get(e+1).compareTo(this.items.get(e))<0&&e++,this.items.get(e).compareTo(n)<0);t=e)this.items.set(t,this.items.get(e));this.items.set(t,n)},clear:function(){this._size=0,this.items.clear()},isEmpty:function(){return 0===this._size},add:function(t){this.items.add(null),this._size+=1;var e=this._size;for(this.items.set(0,t);t.compareTo(this.items.get(Math.trunc(e/2)))<0;e/=2)this.items.set(e,this.items.get(Math.trunc(e/2)));this.items.set(e,t)},interfaces_:function(){return[]},getClass:function(){return De}}),e(Ae.prototype,{visitItem:function(t){},interfaces_:function(){return[]},getClass:function(){return Ae}}),e(Fe.prototype,{insert:function(t,e){},remove:function(t,e){},query:function(){if(1===arguments.length){arguments[0]}else if(2===arguments.length){arguments[0],arguments[1]}},interfaces_:function(){return[]},getClass:function(){return Fe}}),e(Ge.prototype,{getLevel:function(){return this.level},size:function(){return this.childBoundables.size()},getChildBoundables:function(){return this.childBoundables},addChildBoundable:function(t){f.isTrue(null===this.bounds),this.childBoundables.add(t)},isEmpty:function(){return this.childBoundables.isEmpty()},getBounds:function(){return null===this.bounds&&(this.bounds=this.computeBounds()),this.bounds},interfaces_:function(){return[_e,u]},getClass:function(){return Ge}}),Ge.serialVersionUID=0x5a1e55ec41369800;var ho={reverseOrder:function(){return{compare:function(t,e){return e.compareTo(t)}}},min:function(t){return ho.sort(t),t.get(0)},sort:function(t,e){var n=t.toArray();e?ut.sort(n,e):ut.sort(n);for(var i=t.iterator(),r=0,s=n.length;r<s;r++)i.next(),i.set(n[r])},singletonList:function(t){var e=new I;return e.add(t),e}};e(qe.prototype,{expandToQueue:function(t,e){var n=qe.isComposite(this.boundable1),r=qe.isComposite(this.boundable2);if(n&&r)return qe.area(this.boundable1)>qe.area(this.boundable2)?(this.expand(this.boundable1,this.boundable2,t,e),null):(this.expand(this.boundable2,this.boundable1,t,e),null);if(n)return this.expand(this.boundable1,this.boundable2,t,e),null;if(r)return this.expand(this.boundable2,this.boundable1,t,e),null;throw new i(\"neither boundable is composite\")},isLeaves:function(){return!(qe.isComposite(this.boundable1)||qe.isComposite(this.boundable2))},compareTo:function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},expand:function(t,e,n,i){for(var r=t.getChildBoundables(),s=r.iterator();s.hasNext();){var o=s.next(),a=new qe(o,e,this.itemDistance);a.getDistance()<i&&n.add(a)}},getBoundable:function(t){return 0===t?this.boundable1:this.boundable2},getDistance:function(){return this._distance},distance:function(){return this.isLeaves()?this.itemDistance.distance(this.boundable1,this.boundable2):this.boundable1.getBounds().distance(this.boundable2.getBounds())},interfaces_:function(){return[s]},getClass:function(){return qe}}),qe.area=function(t){return t.getBounds().getArea()},qe.isComposite=function(t){return t instanceof Ge},e(Be.prototype,{getNodeCapacity:function(){return this.nodeCapacity},lastNode:function(t){return t.get(t.size()-1)},size:function t(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this.root));if(1===arguments.length){for(var e=arguments[0],t=0,n=e.getChildBoundables().iterator();n.hasNext();){var i=n.next();i instanceof Ge?t+=this.size(i):i instanceof Me&&(t+=1)}return t}},removeItem:function(t,e){for(var n=null,i=t.getChildBoundables().iterator();i.hasNext();){var r=i.next();r instanceof Me&&r.getItem()===e&&(n=r)}return null!==n&&(t.getChildBoundables().remove(n),!0)},itemsTree:function(){if(0===arguments.length){this.build();var t=this.itemsTree(this.root);return null===t?new I:t}if(1===arguments.length){for(var e=arguments[0],n=new I,i=e.getChildBoundables().iterator();i.hasNext();){var r=i.next();if(r instanceof Ge){var s=this.itemsTree(r);null!==s&&n.add(s)}else r instanceof Me?n.add(r.getItem()):f.shouldNeverReachHere()}return n.size()<=0?null:n}},insert:function(t,e){f.isTrue(!this.built,\"Cannot insert items into an STR packed R-tree after it has been built.\"),this.itemBoundables.add(new Me(t,e))},boundablesAtLevel:function(){if(1===arguments.length){var t=arguments[0],e=new I;return this.boundablesAtLevel(t,this.root,e),e}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];if(f.isTrue(n>-2),i.getLevel()===n)return r.add(i),null;for(var s=i.getChildBoundables().iterator();s.hasNext();){var o=s.next();o instanceof Ge?this.boundablesAtLevel(n,o,r):(f.isTrue(o instanceof Me),n===-1&&r.add(o))}return null}},query:function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new I;return this.isEmpty()?e:(this.getIntersectsOp().intersects(this.root.getBounds(),t)&&this.query(t,this.root,e),e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this.root.getBounds(),n)&&this.query(n,this.root,i)}else if(3===arguments.length)if(R(arguments[2],Ae)&&arguments[0]instanceof Object&&arguments[1]instanceof Ge)for(var r=arguments[0],s=arguments[1],o=arguments[2],a=s.getChildBoundables(),u=0;u<a.size();u++){var l=a.get(u);this.getIntersectsOp().intersects(l.getBounds(),r)&&(l instanceof Ge?this.query(r,l,o):l instanceof Me?o.visitItem(l.getItem()):f.shouldNeverReachHere())}else if(R(arguments[2],y)&&arguments[0]instanceof Object&&arguments[1]instanceof Ge)for(var h=arguments[0],c=arguments[1],g=arguments[2],a=c.getChildBoundables(),u=0;u<a.size();u++){var l=a.get(u);this.getIntersectsOp().intersects(l.getBounds(),h)&&(l instanceof Ge?this.query(h,l,g):l instanceof Me?g.add(l.getItem()):f.shouldNeverReachHere())}},build:function(){return this.built?null:(this.root=this.itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this.itemBoundables,-1),this.itemBoundables=null,void(this.built=!0))},getRoot:function(){return this.build(),this.root},remove:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this.root.getBounds(),t)&&this.remove(t,this.root,e)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],s=this.removeItem(i,r);if(s)return!0;for(var o=null,a=i.getChildBoundables().iterator();a.hasNext();){var u=a.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&u instanceof Ge&&(s=this.remove(n,u,r))){o=u;break}}return null!==o&&o.getChildBoundables().isEmpty()&&i.getChildBoundables().remove(o),s}},createHigherLevels:function(t,e){f.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},depth:function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this.root));if(1===arguments.length){for(var t=arguments[0],e=0,n=t.getChildBoundables().iterator();n.hasNext();){var i=n.next();if(i instanceof Ge){var r=this.depth(i);r>e&&(e=r)}}return e+1}},createParentBoundables:function(t,e){f.isTrue(!t.isEmpty());var n=new I;n.add(this.createNode(e));var i=new I(t);ho.sort(i,this.getComparator());for(var r=i.iterator();r.hasNext();){var s=r.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(s)}return n},isEmpty:function(){return this.built?this.root.isEmpty():this.itemBoundables.isEmpty()},interfaces_:function(){return[u]},getClass:function(){return Be}}),Be.compareDoubles=function(t,e){return t>e?1:t<e?-1:0},Be.IntersectsOp=ze,Be.serialVersionUID=-0x35ef64c82d4c5400,Be.DEFAULT_NODE_CAPACITY=10,e(Ve.prototype,{distance:function(t,e){},interfaces_:function(){return[]},getClass:function(){return Ve}}),h(ke,Be),e(ke.prototype,{createParentBoundablesFromVerticalSlices:function(t,e){f.isTrue(t.length>0);for(var n=new I,i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n},createNode:function(t){return new Ye(t)},size:function(){return 0===arguments.length?Be.prototype.size.call(this):Be.prototype.size.apply(this,arguments)},insert:function(){if(2!==arguments.length)return Be.prototype.insert.apply(this,arguments);var t=arguments[0],e=arguments[1];return t.isNull()?null:void Be.prototype.insert.call(this,t,e)},getIntersectsOp:function(){return ke.intersectsOp},verticalSlices:function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),r=t.iterator(),s=0;s<e;s++){i[s]=new I;for(var o=0;r.hasNext()&&o<n;){var a=r.next();i[s].add(a),o++}}return i},query:function(){if(1===arguments.length){var t=arguments[0];return Be.prototype.query.call(this,t)}if(2===arguments.length){var e=arguments[0],n=arguments[1];Be.prototype.query.call(this,e,n)}else if(3===arguments.length)if(R(arguments[2],Ae)&&arguments[0]instanceof Object&&arguments[1]instanceof Ge){var i=arguments[0],r=arguments[1],s=arguments[2];Be.prototype.query.call(this,i,r,s)}else if(R(arguments[2],y)&&arguments[0]instanceof Object&&arguments[1]instanceof Ge){var o=arguments[0],a=arguments[1],u=arguments[2];Be.prototype.query.call(this,o,a,u)}},getComparator:function(){return ke.yComparator},createParentBoundablesFromVerticalSlice:function(t,e){return Be.prototype.createParentBoundables.call(this,t,e)},remove:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return Be.prototype.remove.call(this,t,e)}return Be.prototype.remove.apply(this,arguments)},depth:function(){return 0===arguments.length?Be.prototype.depth.call(this):Be.prototype.depth.apply(this,arguments)},createParentBoundables:function(t,e){f.isTrue(!t.isEmpty());var n=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new I(t);ho.sort(i,ke.xComparator);var r=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(n))));return this.createParentBoundablesFromVerticalSlices(r,e)},nearestNeighbour:function(){if(1===arguments.length){if(R(arguments[0],Ve)){var t=arguments[0],e=new qe(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof qe){var n=arguments[0];return this.nearestNeighbour(n,r.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof ke&&R(arguments[1],Ve)){var i=arguments[0],s=arguments[1],e=new qe(this.getRoot(),i.getRoot(),s);return this.nearestNeighbour(e)}if(arguments[0]instanceof qe&&\"number\"==typeof arguments[1]){var o=arguments[0],a=arguments[1],u=a,l=null,h=new De;for(h.add(o);!h.isEmpty()&&u>0;){var c=h.poll(),f=c.getDistance();if(f>=u)break;c.isLeaves()?(u=f,l=c):c.expandToQueue(h,u)}return[l.getBoundable(0).getItem(),l.getBoundable(1).getItem()]}}else if(3===arguments.length){var g=arguments[0],d=arguments[1],p=arguments[2],v=new Me(g,d),e=new qe(this.getRoot(),v,p);return this.nearestNeighbour(e)[0]}},interfaces_:function(){return[Fe,u]},getClass:function(){return ke}}),ke.centreX=function(t){return ke.avg(t.getMinX(),t.getMaxX())},ke.avg=function(t,e){return(t+e)/2},ke.centreY=function(t){return ke.avg(t.getMinY(),t.getMaxY())},h(Ye,Ge),e(Ye.prototype,{computeBounds:function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new C(n.getBounds()):t.expandToInclude(n.getBounds())}return t},interfaces_:function(){return[]},getClass:function(){return Ye}}),ke.STRtreeNode=Ye,ke.serialVersionUID=0x39920f7d5f261e0,ke.xComparator={interfaces_:function(){return[a]},compare:function(t,e){return Be.compareDoubles(ke.centreX(t.getBounds()),ke.centreX(e.getBounds()))}},ke.yComparator={interfaces_:function(){return[a]},compare:function(t,e){return Be.compareDoubles(ke.centreY(t.getBounds()),ke.centreY(e.getBounds()))}},ke.intersectsOp={interfaces_:function(){return[IntersectsOp]},intersects:function(t,e){return t.intersects(e)}},ke.DEFAULT_NODE_CAPACITY=10,e(Ue.prototype,{interfaces_:function(){return[]},getClass:function(){return Ue}}),Ue.relativeSign=function(t,e){return t<e?-1:t>e?1:0},Ue.compare=function(t,e,n){if(e.equals2D(n))return 0;var i=Ue.relativeSign(e.x,n.x),r=Ue.relativeSign(e.y,n.y);switch(t){case 0:return Ue.compareValue(i,r);case 1:return Ue.compareValue(r,i);case 2:return Ue.compareValue(r,-i);case 3:return Ue.compareValue(-i,r);case 4:return Ue.compareValue(-i,-r);case 5:return Ue.compareValue(-r,-i);case 6:return Ue.compareValue(-r,i);case 7:return Ue.compareValue(i,-r)}return f.shouldNeverReachHere(\"invalid octant value\"),0},Ue.compareValue=function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0},e(Xe.prototype,{getCoordinate:function(){return this.coord},print:function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex)},compareTo:function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:Ue.compare(this.segmentOctant,this.coord,e.coord)},isEndPoint:function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t},isInterior:function(){return this._isInterior},interfaces_:function(){return[s]},getClass:function(){return Xe}}),e(He.prototype,{getSplitCoordinates:function(){var t=new N;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()},addCollapsedNodes:function(){var t=new I;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this.edge.getCoordinate(n),n)}},print:function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},findCollapsesFromExistingVertices:function(t){for(var e=0;e<this.edge.size()-2;e++){var n=this.edge.getCoordinate(e),i=(this.edge.getCoordinate(e+1),this.edge.getCoordinate(e+2));n.equals2D(i)&&t.add(new b(e+1))}},addEdgeCoordinates:function(t,e,n){var i=e.segmentIndex-t.segmentIndex+2,r=this.edge.getCoordinate(e.segmentIndex),s=e.isInterior()||!e.coord.equals2D(r);s||i--;n.add(new g(t.coord),!1);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)n.add(this.edge.getCoordinate(o));s&&n.add(new g(e.coord))},iterator:function(){return this.nodeMap.values().iterator()},addSplitEdges:function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},findCollapseIndex:function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i&&(n[0]=t.segmentIndex+1,!0)},findCollapsesFromInsertedNodes:function(t){for(var e=new Array(1).fill(null),n=this.iterator(),i=n.next();n.hasNext();){var r=n.next(),s=this.findCollapseIndex(i,r,e);s&&t.add(new b(e[0])),i=r}},getEdge:function(){return this.edge},addEndpoints:function(){var t=this.edge.size()-1;this.add(this.edge.getCoordinate(0),0),this.add(this.edge.getCoordinate(t),t)},createSplitEdge:function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);r||n--;var s=new Array(n).fill(null),o=0;s[o++]=new g(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)s[o++]=this.edge.getCoordinate(a);return r&&(s[o]=new g(e.coord)),new Ke(s,this.edge.getData())},add:function(t,e){var n=new Xe(this.edge,t,e,this.edge.getSegmentOctant(e)),i=this.nodeMap.get(n);return null!==i?(f.isTrue(i.coord.equals2D(t),\"Found equal nodes with different coordinates\"),i):(this.nodeMap.put(n,n),n)},checkSplitEdgesCorrectness:function(t){var e=this.edge.getCoordinates(),n=t.get(0),i=n.getCoordinate(0);if(!i.equals2D(e[0]))throw new l(\"bad split edge start point at \"+i);var r=t.get(t.size()-1),s=r.getCoordinates(),o=s[s.length-1];if(!o.equals2D(e[e.length-1]))throw new l(\"bad split edge end point at \"+o)},interfaces_:function(){return[]},getClass:function(){return He}}),e(We.prototype,{next:function(){return null===this.currNode?(this.currNode=this.nextNode,this.currSegIndex=this.currNode.segmentIndex,this.readNextNode(),this.currNode):null===this.nextNode?null:this.nextNode.segmentIndex===this.currNode.segmentIndex?(this.currNode=this.nextNode,this.currSegIndex=this.currNode.segmentIndex,this.readNextNode(),this.currNode):(this.nextNode.segmentIndex>this.currNode.segmentIndex,null)},remove:function(){throw new UnsupportedOperationException(this.getClass().getName())},hasNext:function(){return null!==this.nextNode},readNextNode:function(){this.nodeIt.hasNext()?this.nextNode=this.nodeIt.next():this.nextNode=null},interfaces_:function(){return[p]},getClass:function(){return We}}),e(je.prototype,{addIntersection:function(t,e){},interfaces_:function(){return[be]},getClass:function(){return je}}),e(Ke.prototype,{getCoordinates:function(){return this.pts},size:function(){return this.pts.length},getCoordinate:function(t){return this.pts[t]},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getSegmentOctant:function(t){return t===this.pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},setData:function(t){this.data=t},safeOctant:function(t,e){return t.equals2D(e)?0:Pe.octant(t,e)},getData:function(){return this.data},addIntersection:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=(arguments[2],arguments[3]),s=new g(n.getIntersection(r));this.addIntersection(s,i)}},toString:function(){return se.toLineString(new Gt(this.pts))},getNodeList:function(){return this.nodeList},addIntersectionNode:function(t,e){var n=e,i=n+1;if(i<this.pts.length){var r=this.pts[i];t.equals2D(r)&&(n=i)}var s=this.nodeList.add(t,n);return s},addIntersections:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},interfaces_:function(){return[je]},getClass:function(){return Ke}}),Ke.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new I;return Ke.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){var s=r.next();s.getNodeList().addSplitEdges(i)}},e(Ze.prototype,{overlap:function(){if(2===arguments.length){arguments[0],arguments[1]}else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t.getLineSegment(e,this.overlapSeg1),\nn.getLineSegment(i,this.overlapSeg2),this.overlap(this.overlapSeg1,this.overlapSeg2)}},interfaces_:function(){return[]},getClass:function(){return Ze}}),e(Qe.prototype,{getLineSegment:function(t,e){e.p0=this.pts[t],e.p1=this.pts[t+1]},computeSelect:function(t,e,n,i){var r=this.pts[e],s=this.pts[n];if(i.tempEnv1.init(r,s),n-e===1)return i.select(this,e),null;if(!t.intersects(i.tempEnv1))return null;var o=Math.trunc((e+n)/2);e<o&&this.computeSelect(t,e,o,i),o<n&&this.computeSelect(t,o,n,i)},getCoordinates:function(){for(var t=new Array(this.end-this.start+1).fill(null),e=0,n=this.start;n<=this.end;n++)t[e++]=this.pts[n];return t},computeOverlaps:function(t,e){this.computeOverlapsInternal(this.start,this.end,t,t.start,t.end,e)},setId:function(t){this.id=t},select:function(t,e){this.computeSelect(t,this.start,this.end,e)},getEnvelope:function(){if(null===this.env){var t=this.pts[this.start],e=this.pts[this.end];this.env=new C(t,e)}return this.env},getEndIndex:function(){return this.end},getStartIndex:function(){return this.start},getContext:function(){return this.context},getId:function(){return this.id},computeOverlapsInternal:function(t,e,n,i,r,s){var o=this.pts[t],a=this.pts[e],u=n.pts[i],l=n.pts[r];if(e-t===1&&r-i===1)return s.overlap(this,t,n,i),null;if(s.tempEnv1.init(o,a),s.tempEnv2.init(u,l),!s.tempEnv1.intersects(s.tempEnv2))return null;var h=Math.trunc((t+e)/2),c=Math.trunc((i+r)/2);t<h&&(i<c&&this.computeOverlapsInternal(t,h,n,i,c,s),c<r&&this.computeOverlapsInternal(t,h,n,c,r,s)),h<e&&(i<c&&this.computeOverlapsInternal(h,e,n,i,c,s),c<r&&this.computeOverlapsInternal(h,e,n,c,r,s))},interfaces_:function(){return[]},getClass:function(){return Qe}}),e(Je.prototype,{interfaces_:function(){return[]},getClass:function(){return Je}}),Je.isNorthern=function(t){return t===Je.NE||t===Je.NW},Je.isOpposite=function(t,e){if(t===e)return!1;var n=(t-e+4)%4;return 2===n},Je.commonHalfPlane=function(t,e){if(t===e)return t;var n=(t-e+4)%4;if(2===n)return-1;var i=t<e?t:e,r=t>e?t:e;return 0===i&&3===r?3:i},Je.isInHalfPlane=function(t,e){return e===Je.SE?t===Je.SE||t===Je.SW:t===e||t===e+1},Je.quadrant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new i(\"Cannot compute the quadrant for point ( \"+t+\", \"+e+\" )\");return t>=0?e>=0?Je.NE:Je.SE:e>=0?Je.NW:Je.SW}if(arguments[0]instanceof g&&arguments[1]instanceof g){var n=arguments[0],r=arguments[1];if(r.x===n.x&&r.y===n.y)throw new i(\"Cannot compute the quadrant for two identical points \"+n);return r.x>=n.x?r.y>=n.y?Je.NE:Je.SE:r.y>=n.y?Je.NW:Je.SW}},Je.NE=0,Je.NW=1,Je.SW=2,Je.SE=3,e($e.prototype,{interfaces_:function(){return[]},getClass:function(){return $e}}),$e.getChainStartIndices=function(t){var e=0,n=new I;n.add(new b(e));do{var i=$e.findChainEnd(t,e);n.add(new b(i)),e=i}while(e<t.length-1);var r=$e.toIntArray(n);return r},$e.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var i=Je.quadrant(t[n],t[n+1]),r=e+1;r<t.length;){if(!t[r-1].equals2D(t[r])){var s=Je.quadrant(t[r-1],t[r]);if(s!==i)break}r++}return r-1},$e.getChains=function(){if(1===arguments.length){var t=arguments[0];return $e.getChains(t,null)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=new I,r=$e.getChainStartIndices(e),s=0;s<r.length-1;s++){var o=new Qe(e,r[s],r[s+1],n);i.add(o)}return i}},$e.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e},e(tn.prototype,{computeNodes:function(t){},getNodedSubstrings:function(){},interfaces_:function(){return[]},getClass:function(){return tn}}),e(en.prototype,{setSegmentIntersector:function(t){this.segInt=t},interfaces_:function(){return[tn]},getClass:function(){return en}}),h(nn,en),e(nn.prototype,{getMonotoneChains:function(){return this.monoChains},getNodedSubstrings:function(){return Ke.getNodedSubstrings(this.nodedSegStrings)},getIndex:function(){return this.index},add:function(t){for(var e=$e.getChains(t.getCoordinates(),t),n=e.iterator();n.hasNext();){var i=n.next();i.setId(this.idCounter++),this.index.insert(i.getEnvelope(),i),this.monoChains.add(i)}},computeNodes:function(t){this.nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},intersectChains:function(){for(var t=new rn(this.segInt),e=this.monoChains.iterator();e.hasNext();)for(var n=e.next(),i=this.index.query(n.getEnvelope()),r=i.iterator();r.hasNext();){var s=r.next();if(s.getId()>n.getId()&&(n.computeOverlaps(s,t),this.nOverlaps++),this.segInt.isDone())return null}},interfaces_:function(){return[]},getClass:function(){return nn}}),h(rn,Ze),e(rn.prototype,{overlap:function(){if(4!==arguments.length)return Ze.prototype.overlap.apply(this,arguments);var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=t.getContext(),s=n.getContext();this.si.processIntersections(r,e,s,i)},interfaces_:function(){return[]},getClass:function(){return rn}}),nn.SegmentOverlapAction=rn,h(sn,l),e(sn.prototype,{getCoordinate:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return sn}}),sn.msgWithCoord=function(t,e){return null!==e?t+\" [ \"+e+\" ]\":t},e(on.prototype,{processIntersections:function(t,e,n,i){},isDone:function(){},interfaces_:function(){return[]},getClass:function(){return on}}),e(an.prototype,{getInteriorIntersection:function(){return this.interiorIntersection},setCheckEndSegmentsOnly:function(t){this.isCheckEndSegmentsOnly=t},getIntersectionSegments:function(){return this.intSegments},count:function(){return this.intersectionCount},getIntersections:function(){return this.intersections},setFindAllIntersections:function(t){this.findAllIntersections=t},setKeepIntersections:function(t){this.keepIntersections=t},processIntersections:function(t,e,n,i){if(!this.findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===i)return null;if(this.isCheckEndSegmentsOnly){var r=this.isEndSegment(t,e)||this.isEndSegment(n,i);if(!r)return null}var s=t.getCoordinates()[e],o=t.getCoordinates()[e+1],a=n.getCoordinates()[i],u=n.getCoordinates()[i+1];this.li.computeIntersection(s,o,a,u),this.li.hasIntersection()&&this.li.isInteriorIntersection()&&(this.intSegments=new Array(4).fill(null),this.intSegments[0]=s,this.intSegments[1]=o,this.intSegments[2]=a,this.intSegments[3]=u,this.interiorIntersection=this.li.getIntersection(0),this.keepIntersections&&this.intersections.add(this.interiorIntersection),this.intersectionCount++)},isEndSegment:function(t,e){return 0===e||e>=t.size()-2},hasIntersection:function(){return null!==this.interiorIntersection},isDone:function(){return!this.findAllIntersections&&null!==this.interiorIntersection},interfaces_:function(){return[on]},getClass:function(){return an}}),an.createAllIntersectionsFinder=function(t){var e=new an(t);return e.setFindAllIntersections(!0),e},an.createAnyIntersectionFinder=function(t){return new an(t)},an.createIntersectionCounter=function(t){var e=new an(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e},e(un.prototype,{execute:function(){return null!==this.segInt?null:void this.checkInteriorIntersections()},getIntersections:function(){return this.segInt.getIntersections()},isValid:function(){return this.execute(),this._isValid},setFindAllIntersections:function(t){this.findAllIntersections=t},checkInteriorIntersections:function(){this._isValid=!0,this.segInt=new an(this.li),this.segInt.setFindAllIntersections(this.findAllIntersections);var t=new nn;if(t.setSegmentIntersector(this.segInt),t.computeNodes(this.segStrings),this.segInt.hasIntersection())return this._isValid=!1,null},checkValid:function(){if(this.execute(),!this._isValid)throw new sn(this.getErrorMessage(),this.segInt.getInteriorIntersection())},getErrorMessage:function(){if(this._isValid)return\"no intersections found\";var t=this.segInt.getIntersectionSegments();return\"found non-noded intersection between \"+se.toLineString(t[0],t[1])+\" and \"+se.toLineString(t[2],t[3])},interfaces_:function(){return[]},getClass:function(){return un}}),un.computeIntersections=function(t){var e=new un(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()},e(ln.prototype,{checkValid:function(){this.nv.checkValid()},interfaces_:function(){return[]},getClass:function(){return ln}}),ln.toSegmentStrings=function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Oe(i.getCoordinates(),i))}return e},ln.checkValid=function(t){var e=new ln(t);e.checkValid()},e(hn.prototype,{map:function(t){for(var e=new I,n=0;n<t.getNumGeometries();n++){var i=this.mapOp.map(t.getGeometryN(n));i.isEmpty()||e.add(i)}return t.getFactory().createGeometryCollection(ie.toGeometryArray(e))},interfaces_:function(){return[]},getClass:function(){return hn}}),hn.map=function(t,e){var n=new hn(e);return n.map(t)},e(cn.prototype,{interfaces_:function(){return[]},getClass:function(){return cn}}),cn.opposite=function(t){return t===cn.LEFT?cn.RIGHT:t===cn.RIGHT?cn.LEFT:t},cn.ON=0,cn.LEFT=1,cn.RIGHT=2,e(fn.prototype,{setAllLocations:function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},isNull:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==L.NONE)return!1;return!0},setAllLocationsIfNull:function(t){for(var e=0;e<this.location.length;e++)this.location[e]===L.NONE&&(this.location[e]=t)},isLine:function(){return 1===this.location.length},merge:function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[cn.ON]=this.location[cn.ON],e[cn.LEFT]=L.NONE,e[cn.RIGHT]=L.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===L.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},getLocations:function(){return this.location},flip:function(){if(this.location.length<=1)return null;var t=this.location[cn.LEFT];this.location[cn.LEFT]=this.location[cn.RIGHT],this.location[cn.RIGHT]=t},toString:function(){var t=new P;return this.location.length>1&&t.append(L.toLocationSymbol(this.location[cn.LEFT])),t.append(L.toLocationSymbol(this.location[cn.ON])),this.location.length>1&&t.append(L.toLocationSymbol(this.location[cn.RIGHT])),t.toString()},setLocations:function(t,e,n){this.location[cn.ON]=t,this.location[cn.LEFT]=e,this.location[cn.RIGHT]=n},get:function(t){return t<this.location.length?this.location[t]:L.NONE},isArea:function(){return this.location.length>1},isAnyNull:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===L.NONE)return!0;return!1},setLocation:function(){if(1===arguments.length){var t=arguments[0];this.setLocation(cn.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}},init:function(t){this.location=new Array(t).fill(null),this.setAllLocations(L.NONE)},isEqualOnSide:function(t,e){return this.location[e]===t.location[e]},allPositionsEqual:function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},interfaces_:function(){return[]},getClass:function(){return fn}}),e(gn.prototype,{getGeometryCount:function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},setAllLocations:function(t,e){this.elt[t].setAllLocations(e)},isNull:function(t){return this.elt[t].isNull()},setAllLocationsIfNull:function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}},isLine:function(t){return this.elt[t].isLine()},merge:function(t){for(var e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new fn(t.elt[e]):this.elt[e].merge(t.elt[e])},flip:function(){this.elt[0].flip(),this.elt[1].flip()},getLocation:function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(cn.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}},toString:function(){var t=new P;return null!==this.elt[0]&&(t.append(\"A:\"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(\" B:\"),t.append(this.elt[1].toString())),t.toString()},isArea:function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},isAnyNull:function(t){return this.elt[t].isAnyNull()},setLocation:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(cn.ON,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.elt[n].setLocation(i,r)}},isEqualOnSide:function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},allPositionsEqual:function(t,e){return this.elt[t].allPositionsEqual(e)},toLine:function(t){this.elt[t].isArea()&&(this.elt[t]=new fn(this.elt[t].location[0]))},interfaces_:function(){return[]},getClass:function(){return gn}}),gn.toLineLabel=function(t){for(var e=new gn(L.NONE),n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e},e(dn.prototype,{computeRing:function(){if(null!==this.ring)return null;for(var t=new Array(this.pts.size()).fill(null),e=0;e<this.pts.size();e++)t[e]=this.pts.get(e);this.ring=this.geometryFactory.createLinearRing(t),this._isHole=he.isCCW(this.ring.getCoordinates())},isIsolated:function(){return 1===this.label.getGeometryCount()},computePoints:function(t){this.startDe=t;var e=t,n=!0;do{if(null===e)throw new sn(\"Found null DirectedEdge\");if(e.getEdgeRing()===this)throw new sn(\"Directed Edge visited twice during ring-building at \"+e.getCoordinate());this.edges.add(e);var i=e.getLabel();f.isTrue(i.isArea()),this.mergeLabel(i),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this.startDe)},getLinearRing:function(){return this.ring},getCoordinate:function(t){return this.pts.get(t)},computeMaxNodeDegree:function(){this.maxNodeDegree=0;var t=this.startDe;do{var e=t.getNode(),n=e.getEdges().getOutgoingDegree(this);n>this.maxNodeDegree&&(this.maxNodeDegree=n),t=this.getNext(t)}while(t!==this.startDe);this.maxNodeDegree*=2},addPoints:function(t,e,n){var i=t.getCoordinates();if(e){var r=1;n&&(r=0);for(var s=r;s<i.length;s++)this.pts.add(i[s])}else{var r=i.length-2;n&&(r=i.length-1);for(var s=r;s>=0;s--)this.pts.add(i[s])}},isHole:function(){return this._isHole},setInResult:function(){var t=this.startDe;do t.getEdge().setInResult(!0),t=t.getNext();while(t!==this.startDe)},containsPoint:function(t){var e=this.getLinearRing(),n=e.getEnvelopeInternal();if(!n.contains(t))return!1;if(!he.isPointInRing(t,e.getCoordinates()))return!1;for(var i=this.holes.iterator();i.hasNext();){var r=i.next();if(r.containsPoint(t))return!1}return!0},addHole:function(t){this.holes.add(t)},isShell:function(){return null===this.shell},getLabel:function(){return this.label},getEdges:function(){return this.edges},getMaxNodeDegree:function(){return this.maxNodeDegree<0&&this.computeMaxNodeDegree(),this.maxNodeDegree},getShell:function(){return this.shell},mergeLabel:function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=e.getLocation(n,cn.RIGHT);if(i===L.NONE)return null;if(this.label.getLocation(n)===L.NONE)return this.label.setLocation(n,i),null}},setShell:function(t){this.shell=t,null!==t&&t.addHole(this)},toPolygon:function(t){for(var e=new Array(this.holes.size()).fill(null),n=0;n<this.holes.size();n++)e[n]=this.holes.get(n).getLinearRing();var i=t.createPolygon(this.getLinearRing(),e);return i},interfaces_:function(){return[]},getClass:function(){return dn}}),h(pn,dn),e(pn.prototype,{setEdgeRing:function(t,e){t.setMinEdgeRing(e)},getNext:function(t){return t.getNextMin()},interfaces_:function(){return[]},getClass:function(){return pn}}),h(vn,dn),e(vn.prototype,{buildMinimalRings:function(){var t=new I,e=this.startDe;do{if(null===e.getMinEdgeRing()){var n=new pn(e,this.geometryFactory);t.add(n)}e=e.getNext()}while(e!==this.startDe);return t},setEdgeRing:function(t,e){t.setEdgeRing(e)},linkDirectedEdgesForMinimalEdgeRings:function(){var t=this.startDe;do{var e=t.getNode();e.getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this.startDe)},getNext:function(t){return t.getNext()},interfaces_:function(){return[]},getClass:function(){return vn}}),e(mn.prototype,{setVisited:function(t){this._isVisited=t},setInResult:function(t){this._isInResult=t},isCovered:function(){return this._isCovered},isCoveredSet:function(){return this._isCoveredSet},setLabel:function(t){this.label=t},getLabel:function(){return this.label},setCovered:function(t){this._isCovered=t,this._isCoveredSet=!0},updateIM:function(t){f.isTrue(this.label.getGeometryCount()>=2,\"found partial label\"),this.computeIM(t)},isInResult:function(){return this._isInResult},isVisited:function(){return this._isVisited},interfaces_:function(){return[]},getClass:function(){return mn}}),h(yn,mn),e(yn.prototype,{isIncidentEdgeInResult:function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){var e=t.next();if(e.getEdge().isInResult())return!0}return!1},isIsolated:function(){return 1===this.label.getGeometryCount()},getCoordinate:function(){return this.coord},print:function(t){t.println(\"node \"+this.coord+\" lbl: \"+this.label)},computeIM:function(t){},computeMergedLocation:function(t,e){var n=L.NONE;if(n=this.label.getLocation(e),!t.isNull(e)){var i=t.getLocation(e);n!==L.BOUNDARY&&(n=i)}return n},setLabel:function(){if(2!==arguments.length)return mn.prototype.setLabel.apply(this,arguments);var t=arguments[0],e=arguments[1];null===this.label?this.label=new gn(t,e):this.label.setLocation(t,e)},getEdges:function(){return this.edges},mergeLabel:function(){if(arguments[0]instanceof yn){var t=arguments[0];this.mergeLabel(t.label)}else if(arguments[0]instanceof gn)for(var e=arguments[0],n=0;n<2;n++){var i=this.computeMergedLocation(e,n),r=this.label.getLocation(n);r===L.NONE&&this.label.setLocation(n,i)}},add:function(t){this.edges.insert(t),t.setNode(this)},setLabelBoundary:function(t){if(null===this.label)return null;var e=L.NONE;null!==this.label&&(e=this.label.getLocation(t));var n=null;switch(e){case L.BOUNDARY:n=L.INTERIOR;break;case L.INTERIOR:n=L.BOUNDARY;break;default:n=L.BOUNDARY}this.label.setLocation(t,n)},interfaces_:function(){return[]},getClass:function(){return yn}}),e(xn.prototype,{find:function(t){return this.nodeMap.get(t)},addNode:function(){if(arguments[0]instanceof g){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof yn){var n=arguments[0],e=this.nodeMap.get(n.getCoordinate());return null===e?(this.nodeMap.put(n.getCoordinate(),n),n):(e.mergeLabel(n),e)}},print:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},iterator:function(){return this.nodeMap.values().iterator()},values:function(){return this.nodeMap.values()},getBoundaryNodes:function(t){for(var e=new I,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().getLocation(t)===L.BOUNDARY&&e.add(i)}return e},add:function(t){var e=t.getCoordinate(),n=this.addNode(e);n.add(t)},interfaces_:function(){return[]},getClass:function(){return xn}}),e(En.prototype,{compareDirection:function(t){return this.dx===t.dx&&this.dy===t.dy?0:this.quadrant>t.quadrant?1:this.quadrant<t.quadrant?-1:he.computeOrientation(t.p0,t.p1,this.p1)},getDy:function(){return this.dy},getCoordinate:function(){return this.p0},setNode:function(t){this.node=t},print:function(t){var e=Math.atan2(this.dy,this.dx),n=this.getClass().getName(),i=n.lastIndexOf(\".\"),r=n.substring(i+1);t.print(\"  \"+r+\": \"+this.p0+\" - \"+this.p1+\" \"+this.quadrant+\":\"+e+\"   \"+this.label)},compareTo:function(t){var e=t;return this.compareDirection(e)},getDirectedCoordinate:function(){return this.p1},getDx:function(){return this.dx},getLabel:function(){return this.label},getEdge:function(){return this.edge},getQuadrant:function(){return this.quadrant},getNode:function(){return this.node},toString:function(){var t=Math.atan2(this.dy,this.dx),e=this.getClass().getName(),n=e.lastIndexOf(\".\"),i=e.substring(n+1);return\"  \"+i+\": \"+this.p0+\" - \"+this.p1+\" \"+this.quadrant+\":\"+t+\"   \"+this.label},computeLabel:function(t){},init:function(t,e){this.p0=t,this.p1=e,this.dx=e.x-t.x,this.dy=e.y-t.y,this.quadrant=Je.quadrant(this.dx,this.dy),f.isTrue(!(0===this.dx&&0===this.dy),\"EdgeEnd with identical endpoints found\")},interfaces_:function(){return[s]},getClass:function(){return En}}),h(In,En),e(In.prototype,{getNextMin:function(){return this.nextMin},getDepth:function(t){return this.depth[t]},setVisited:function(t){this._isVisited=t},computeDirectedLabel:function(){this.label=new gn(this.edge.getLabel()),this._isForward||this.label.flip()},getNext:function(){return this.next},setDepth:function(t,e){if(this.depth[t]!==-999&&this.depth[t]!==e)throw new sn(\"assigned depths do not match\",this.getCoordinate());this.depth[t]=e},isInteriorAreaEdge:function t(){for(var t=!0,e=0;e<2;e++)this.label.isArea(e)&&this.label.getLocation(e,cn.LEFT)===L.INTERIOR&&this.label.getLocation(e,cn.RIGHT)===L.INTERIOR||(t=!1);return t},setNextMin:function(t){this.nextMin=t},print:function(t){En.prototype.print.call(this,t),t.print(\" \"+this.depth[cn.LEFT]+\"/\"+this.depth[cn.RIGHT]),t.print(\" (\"+this.getDepthDelta()+\")\"),this._isInResult&&t.print(\" inResult\")},setMinEdgeRing:function(t){this.minEdgeRing=t},isLineEdge:function(){var t=this.label.isLine(0)||this.label.isLine(1),e=!this.label.isArea(0)||this.label.allPositionsEqual(0,L.EXTERIOR),n=!this.label.isArea(1)||this.label.allPositionsEqual(1,L.EXTERIOR);return t&&e&&n},setEdgeRing:function(t){this.edgeRing=t},getMinEdgeRing:function(){return this.minEdgeRing},getDepthDelta:function(){var t=this.edge.getDepthDelta();return this._isForward||(t=-t),t},setInResult:function(t){this._isInResult=t},getSym:function(){return this.sym},isForward:function(){return this._isForward},getEdge:function(){return this.edge},printEdge:function(t){this.print(t),t.print(\" \"),this._isForward?this.edge.print(t):this.edge.printReverse(t)},setSym:function(t){this.sym=t},setVisitedEdge:function(t){this.setVisited(t),this.sym.setVisited(t)},setEdgeDepths:function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var i=1;t===cn.LEFT&&(i=-1);var r=cn.opposite(t),s=n*i,o=e+s;this.setDepth(t,e),this.setDepth(r,o)},getEdgeRing:function(){return this.edgeRing},isInResult:function(){return this._isInResult},setNext:function(t){this.next=t},isVisited:function(){return this._isVisited},interfaces_:function(){return[]},getClass:function(){return In}}),In.depthFactor=function(t,e){return t===L.EXTERIOR&&e===L.INTERIOR?1:t===L.INTERIOR&&e===L.EXTERIOR?-1:0},e(Nn.prototype,{createNode:function(t){return new yn(t,null)},interfaces_:function(){return[]},getClass:function(){return Nn}}),e(Cn.prototype,{printEdges:function(t){t.println(\"Edges:\");for(var e=0;e<this.edges.size();e++){t.println(\"edge \"+e+\":\");var n=this.edges.get(e);n.print(t),n.eiList.print(t)}},find:function(t){return this.nodes.find(t)},addNode:function(){if(arguments[0]instanceof yn){var t=arguments[0];return this.nodes.addNode(t)}if(arguments[0]instanceof g){var e=arguments[0];return this.nodes.addNode(e)}},getNodeIterator:function(){return this.nodes.iterator()},linkResultDirectedEdges:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next();e.getEdges().linkResultDirectedEdges()}},debugPrintln:function(t){A.out.println(t)},isBoundaryNode:function(t,e){var n=this.nodes.find(e);if(null===n)return!1;var i=n.getLabel();return null!==i&&i.getLocation(t)===L.BOUNDARY},linkAllDirectedEdges:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next();e.getEdges().linkAllDirectedEdges()}},matchInSameDirection:function(t,e,n,i){return!!t.equals(n)&&(he.computeOrientation(t,e,i)===he.COLLINEAR&&Je.quadrant(t,e)===Je.quadrant(n,i))},getEdgeEnds:function(){return this.edgeEndList},debugPrint:function(t){A.out.print(t)},getEdgeIterator:function(){return this.edges.iterator()},findEdgeInSameDirection:function(t,e){for(var n=0;n<this.edges.size();n++){var i=this.edges.get(n),r=i.getCoordinates();if(this.matchInSameDirection(t,e,r[0],r[1]))return i;if(this.matchInSameDirection(t,e,r[r.length-1],r[r.length-2]))return i}return null},insertEdge:function(t){this.edges.add(t)},findEdgeEnd:function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},addEdges:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.edges.add(n);var i=new In(n,(!0)),r=new In(n,(!1));i.setSym(r),r.setSym(i),this.add(i),this.add(r)}},add:function(t){this.nodes.add(t),this.edgeEndList.add(t)},getNodes:function(){return this.nodes.values()},findEdge:function(t,e){for(var n=0;n<this.edges.size();n++){var i=this.edges.get(n),r=i.getCoordinates();if(t.equals(r[0])&&e.equals(r[1]))return i}return null},interfaces_:function(){return[]},getClass:function(){return Cn}}),Cn.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.getEdges().linkResultDirectedEdges()}},e(Sn.prototype,{sortShellsAndHoles:function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isHole()?n.add(r):e.add(r)}},computePolygons:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next(),r=i.toPolygon(this.geometryFactory);e.add(r)}return e},placeFreeHoles:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(null===i.getShell()){var r=this.findEdgeRingContaining(i,t);if(null===r)throw new sn(\"unable to assign hole to a shell\",i.getCoordinate(0));i.setShell(r)}}},buildMinimalEdgeRings:function(t,e,n){for(var i=new I,r=t.iterator();r.hasNext();){var s=r.next();if(s.getMaxNodeDegree()>2){s.linkDirectedEdgesForMinimalEdgeRings();var o=s.buildMinimalRings(),a=this.findShell(o);null!==a?(this.placePolygonHoles(a,o),e.add(a)):n.addAll(o)}else i.add(s)}return i},containsPoint:function(t){for(var e=this.shellList.iterator();e.hasNext();){var n=e.next();if(n.containsPoint(t))return!0}return!1},buildMaximalEdgeRings:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&i.getLabel().isArea()&&null===i.getEdgeRing()){var r=new vn(i,this.geometryFactory);e.add(r),r.setInResult()}}return e},placePolygonHoles:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();i.isHole()&&i.setShell(t)}},getPolygons:function(){var t=this.computePolygons(this.shellList);return t},findEdgeRingContaining:function(t,e){for(var n=t.getLinearRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),s=null,o=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getLinearRing(),h=l.getEnvelopeInternal();null!==s&&(o=s.getLinearRing().getEnvelopeInternal());var c=!1;h.contains(i)&&he.isPointInRing(r,l.getCoordinates())&&(c=!0),c&&(null===s||o.contains(h))&&(s=u)}return s},findShell:function(t){for(var e=0,n=null,i=t.iterator();i.hasNext();){var r=i.next();r.isHole()||(n=r,e++)}return f.isTrue(e<=1,\"found two shells in MinimalEdgeRing list\"),n},add:function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Cn.linkResultDirectedEdges(n);var i=this.buildMaximalEdgeRings(e),r=new I,s=this.buildMinimalEdgeRings(i,this.shellList,r);this.sortShellsAndHoles(s,this.shellList,r),this.placeFreeHoles(this.shellList,r)}},interfaces_:function(){return[]},getClass:function(){return Sn}}),e(wn.prototype,{collectLines:function(t){for(var e=this.op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next();this.collectLineEdge(n,t,this.lineEdgesList),this.collectBoundaryTouchEdge(n,t,this.lineEdgesList)}},labelIsolatedLine:function(t,e){var n=this.ptLocator.locate(t.getCoordinate(),this.op.getArgGeometry(e));t.getLabel().setLocation(e,n)},build:function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this.resultLineList},collectLineEdge:function(t,e,n){var i=t.getLabel(),r=t.getEdge();t.isLineEdge()&&(t.isVisited()||!ii.isResultOfOp(i,e)||r.isCovered()||(n.add(r),t.setVisitedEdge(!0)))},findCoveredLineEdges:function(){for(var t=this.op.getGraph().getNodes().iterator();t.hasNext();){var e=t.next();e.getEdges().findCoveredLineEdges()}for(var n=this.op.getGraph().getEdgeEnds().iterator();n.hasNext();){var i=n.next(),r=i.getEdge();if(i.isLineEdge()&&!r.isCoveredSet()){var s=this.op.isCoveredByA(i.getCoordinate());r.setCovered(s)}}},labelIsolatedLines:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(i.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},buildLines:function(t){for(var e=this.lineEdgesList.iterator();e.hasNext();){var n=e.next(),i=(n.getLabel(),this.geometryFactory.createLineString(n.getCoordinates()));this.resultLineList.add(i),n.setInResult(!0)}},collectBoundaryTouchEdge:function(t,e,n){var i=t.getLabel();return t.isLineEdge()?null:t.isVisited()?null:t.isInteriorAreaEdge()?null:t.getEdge().isInResult()?null:(f.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(ii.isResultOfOp(i,e)&&e===ii.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},interfaces_:function(){return[]},getClass:function(){return wn}}),e(Ln.prototype,{filterCoveredNodeToPoint:function(t){var e=t.getCoordinate();if(!this.op.isCoveredByLA(e)){var n=this.geometryFactory.createPoint(e);this.resultPointList.add(n)}},extractNonCoveredResultNodes:function(t){for(var e=this.op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!(n.isInResult()||n.isIncidentEdgeInResult()||0!==n.getEdges().getDegree()&&t!==ii.INTERSECTION)){var i=n.getLabel();ii.isResultOfOp(i,t)&&this.filterCoveredNodeToPoint(n)}}},build:function(t){return this.extractNonCoveredResultNodes(t),this.resultPointList},interfaces_:function(){return[]},getClass:function(){return Ln}}),e(Rn.prototype,{locate:function(t){},interfaces_:function(){return[]},getClass:function(){return Rn}}),e(Tn.prototype,{locate:function(t){return Tn.locate(t,this.geom)},interfaces_:function(){return[Rn]},getClass:function(){return Tn}}),Tn.isPointInRing=function(t,e){return!!e.getEnvelopeInternal().intersects(t)&&he.isPointInRing(t,e.getCoordinates())},Tn.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!Tn.isPointInRing(t,n))return!1;for(var i=0;i<e.getNumInteriorRing();i++){var r=e.getInteriorRingN(i);if(Tn.isPointInRing(t,r))return!1}return!0},Tn.containsPoint=function(t,e){if(e instanceof Tt)return Tn.containsPointInPolygon(t,e);if(e instanceof ft)for(var n=new Re(e);n.hasNext();){var i=n.next();if(i!==e&&Tn.containsPoint(t,i))return!0}return!1},Tn.locate=function(t,e){return e.isEmpty()?L.EXTERIOR:Tn.containsPoint(t,e)?L.INTERIOR:L.EXTERIOR},e(Pn.prototype,{getNextCW:function(t){this.getEdges();var e=this.edgeList.indexOf(t),n=e-1;return 0===e&&(n=this.edgeList.size()-1),this.edgeList.get(n)},propagateSideLabels:function(t){for(var e=L.NONE,n=this.iterator();n.hasNext();){var i=n.next(),r=i.getLabel();r.isArea(t)&&r.getLocation(t,cn.LEFT)!==L.NONE&&(e=r.getLocation(t,cn.LEFT))}if(e===L.NONE)return null;for(var s=e,n=this.iterator();n.hasNext();){var i=n.next(),r=i.getLabel();if(r.getLocation(t,cn.ON)===L.NONE&&r.setLocation(t,cn.ON,s),r.isArea(t)){var o=r.getLocation(t,cn.LEFT),a=r.getLocation(t,cn.RIGHT);if(a!==L.NONE){if(a!==s)throw new sn(\"side location conflict\",i.getCoordinate());o===L.NONE&&f.shouldNeverReachHere(\"found single null side (at \"+i.getCoordinate()+\")\"),s=o}else f.isTrue(r.getLocation(t,cn.LEFT)===L.NONE,\"found single null side\"),r.setLocation(t,cn.RIGHT,s),r.setLocation(t,cn.LEFT,s)}}},getCoordinate:function(){var t=this.iterator();if(!t.hasNext())return null;var e=t.next();return e.getCoordinate()},print:function(t){A.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();\nn.print(t)}},isAreaLabelsConsistent:function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},checkAreaLabelsConsistent:function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,i=e.get(n).getLabel(),r=i.getLocation(t,cn.LEFT);f.isTrue(r!==L.NONE,\"Found unlabelled area edge\");for(var s=r,o=this.iterator();o.hasNext();){var a=o.next(),u=a.getLabel();f.isTrue(u.isArea(t),\"Found non-area edge\");var l=u.getLocation(t,cn.LEFT),h=u.getLocation(t,cn.RIGHT);if(l===h)return!1;if(h!==s)return!1;s=l}return!0},findIndex:function(t){this.iterator();for(var e=0;e<this.edgeList.size();e++){var n=this.edgeList.get(e);if(n===t)return e}return-1},iterator:function(){return this.getEdges().iterator()},getEdges:function(){return null===this.edgeList&&(this.edgeList=new I(this.edgeMap.values())),this.edgeList},getLocation:function(t,e,n){return this.ptInAreaLocation[t]===L.NONE&&(this.ptInAreaLocation[t]=Tn.locate(e,n[t].getGeometry())),this.ptInAreaLocation[t]},toString:function(){var t=new P;t.append(\"EdgeEndStar:   \"+this.getCoordinate()),t.append(\"\\n\");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append(\"\\n\")}return t.toString()},computeEdgeEndLabels:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();n.computeLabel(t)}},computeLabelling:function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var i=n.next(),r=i.getLabel(),s=0;s<2;s++)r.isLine(s)&&r.getLocation(s)===L.BOUNDARY&&(e[s]=!0);for(var n=this.iterator();n.hasNext();)for(var i=n.next(),r=i.getLabel(),s=0;s<2;s++)if(r.isAnyNull(s)){var o=L.NONE;if(e[s])o=L.EXTERIOR;else{var a=i.getCoordinate();o=this.getLocation(s,a,t)}r.setAllLocationsIfNull(s,o)}},getDegree:function(){return this.edgeMap.size()},insertEdgeEnd:function(t,e){this.edgeMap.put(t,e),this.edgeList=null},interfaces_:function(){return[]},getClass:function(){return Pn}}),h(bn,Pn),e(bn.prototype,{linkResultDirectedEdges:function(){this.getResultAreaEdges();for(var t=null,e=null,n=this.SCANNING_FOR_INCOMING,i=0;i<this.resultAreaEdgeList.size();i++){var r=this.resultAreaEdgeList.get(i),s=r.getSym();if(r.getLabel().isArea())switch(null===t&&r.isInResult()&&(t=r),n){case this.SCANNING_FOR_INCOMING:if(!s.isInResult())continue;e=s,n=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(!r.isInResult())continue;e.setNext(r),n=this.SCANNING_FOR_INCOMING}}if(n===this.LINKING_TO_OUTGOING){if(null===t)throw new sn(\"no outgoing dirEdge found\",this.getCoordinate());f.isTrue(t.isInResult(),\"unable to link last incoming dirEdge\"),e.setNext(t)}},insert:function(t){var e=t;this.insertEdgeEnd(e,e)},getRightmostEdge:function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var i=t.get(e-1),r=n.getQuadrant(),s=i.getQuadrant();if(Je.isNorthern(r)&&Je.isNorthern(s))return n;if(!Je.isNorthern(r)&&!Je.isNorthern(s))return i;return 0!==n.getDy()?n:0!==i.getDy()?i:(f.shouldNeverReachHere(\"found two horizontal edges incident on node\"),null)},print:function(t){A.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print(\"out \"),n.print(t),t.println(),t.print(\"in \"),n.getSym().print(t),t.println()}},getResultAreaEdges:function(){if(null!==this.resultAreaEdgeList)return this.resultAreaEdgeList;this.resultAreaEdgeList=new I;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this.resultAreaEdgeList.add(e)}return this.resultAreaEdgeList},updateLabelling:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();i.setAllLocationsIfNull(0,t.getLocation(0)),i.setAllLocationsIfNull(1,t.getLocation(1))}},linkAllDirectedEdges:function(){this.getEdges();for(var t=null,e=null,n=this.edgeList.size()-1;n>=0;n--){var i=this.edgeList.get(n),r=i.getSym();null===e&&(e=r),null!==t&&r.setNext(t),t=i}e.setNext(t)},computeDepths:function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=(t.getLabel(),t.getDepth(cn.LEFT)),i=t.getDepth(cn.RIGHT),r=this.computeDepths(e+1,this.edgeList.size(),n),s=this.computeDepths(0,e,r);if(s!==i)throw new sn(\"depth mismatch at \"+t.getCoordinate())}else if(3===arguments.length){for(var o=arguments[0],a=arguments[1],u=arguments[2],l=u,h=o;h<a;h++){var c=this.edgeList.get(h);c.getLabel();c.setEdgeDepths(cn.RIGHT,l),l=c.getDepth(cn.LEFT)}return l}},mergeSymLabels:function(){for(var t=this.iterator();t.hasNext();){var e=t.next(),n=e.getLabel();n.merge(e.getSym().getLabel())}},linkMinimalDirectedEdges:function(t){for(var e=null,n=null,i=this.SCANNING_FOR_INCOMING,r=this.resultAreaEdgeList.size()-1;r>=0;r--){var s=this.resultAreaEdgeList.get(r),o=s.getSym();switch(null===e&&s.getEdgeRing()===t&&(e=s),i){case this.SCANNING_FOR_INCOMING:if(o.getEdgeRing()!==t)continue;n=o,i=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(s.getEdgeRing()!==t)continue;n.setNextMin(s),i=this.SCANNING_FOR_INCOMING}}i===this.LINKING_TO_OUTGOING&&(f.isTrue(null!==e,\"found null for first outgoing dirEdge\"),f.isTrue(e.getEdgeRing()===t,\"unable to link last incoming dirEdge\"),n.setNextMin(e))},getOutgoingDegree:function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){var n=e.next();n.isInResult()&&t++}return t}if(1===arguments.length){for(var i=arguments[0],t=0,e=this.iterator();e.hasNext();){var n=e.next();n.getEdgeRing()===i&&t++}return t}},getLabel:function(){return this.label},findCoveredLineEdges:function(){for(var t=L.NONE,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=L.INTERIOR;break}if(i.isInResult()){t=L.EXTERIOR;break}}}if(t===L.NONE)return null;for(var r=t,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();n.isLineEdge()?n.getEdge().setCovered(r===L.INTERIOR):(n.isInResult()&&(r=L.EXTERIOR),i.isInResult()&&(r=L.INTERIOR))}},computeLabelling:function(t){Pn.prototype.computeLabelling.call(this,t),this.label=new gn(L.NONE);for(var e=this.iterator();e.hasNext();)for(var n=e.next(),i=n.getEdge(),r=i.getLabel(),s=0;s<2;s++){var o=r.getLocation(s);o!==L.INTERIOR&&o!==L.BOUNDARY||this.label.setLocation(s,L.INTERIOR)}},interfaces_:function(){return[]},getClass:function(){return bn}}),h(On,Nn),e(On.prototype,{createNode:function(t){return new yn(t,new bn)},interfaces_:function(){return[]},getClass:function(){return On}}),e(_n.prototype,{computeIntersections:function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},interfaces_:function(){return[]},getClass:function(){return _n}}),e(Mn.prototype,{isDelete:function(){return this.eventType===Mn.DELETE},setDeleteEventIndex:function(t){this.deleteEventIndex=t},getObject:function(){return this.obj},compareTo:function(t){var e=t;return this.xValue<e.xValue?-1:this.xValue>e.xValue?1:this.eventType<e.eventType?-1:this.eventType>e.eventType?1:0},getInsertEvent:function(){return this.insertEvent},isInsert:function(){return this.eventType===Mn.INSERT},isSameLabel:function(t){return null!==this.label&&this.label===t.label},getDeleteEventIndex:function(){return this.deleteEventIndex},interfaces_:function(){return[s]},getClass:function(){return Mn}}),Mn.INSERT=1,Mn.DELETE=2,e(Dn.prototype,{interfaces_:function(){return[]},getClass:function(){return Dn}}),e(An.prototype,{isTrivialIntersection:function(t,e,n,i){if(t===n&&1===this.li.getIntersectionNum()){if(An.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.getNumPoints()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},getProperIntersectionPoint:function(){return this.properIntersectionPoint},setIsDoneIfProperInt:function(t){this.isDoneWhenProperInt=t},hasProperInteriorIntersection:function(){return this.hasProperInterior},isBoundaryPointInternal:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next(),r=i.getCoordinate();if(t.isIntersection(r))return!0}return!1},hasProperIntersection:function(){return this.hasProper},hasIntersection:function(){return this._hasIntersection},isDone:function(){return this._isDone},isBoundaryPoint:function(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))},setBoundaryNodes:function(t,e){this.bdyNodes=new Array(2).fill(null),this.bdyNodes[0]=t,this.bdyNodes[1]=e},addIntersections:function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this.li.computeIntersection(r,s,o,a),this.li.hasIntersection()&&(this.recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this.numIntersections++,this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,!this.includeProper&&this.li.isProper()||(t.addIntersections(this.li,e,0),n.addIntersections(this.li,i,1)),this.li.isProper()&&(this.properIntersectionPoint=this.li.getIntersection(0).copy(),this.hasProper=!0,this.isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this.li,this.bdyNodes)||(this.hasProperInterior=!0))))},interfaces_:function(){return[]},getClass:function(){return An}}),An.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)},h(Fn,Dn),e(Fn.prototype,{prepareEvents:function(){ho.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},computeIntersections:function(){if(1===arguments.length){var t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof An&&R(arguments[0],y)&&R(arguments[1],y)){var i=arguments[0],r=arguments[1],s=arguments[2];this.addEdges(i,i),this.addEdges(r,r),this.computeIntersections(s)}else if(\"boolean\"==typeof arguments[2]&&R(arguments[0],y)&&arguments[1]instanceof An){var o=arguments[0],a=arguments[1],u=arguments[2];u?this.addEdges(o,null):this.addEdges(o),this.computeIntersections(a)}},addEdge:function(t,e){for(var n=t.getMonotoneChainEdge(),i=n.getStartIndexes(),r=0;r<i.length-1;r++){var s=new _n(n,r),o=new Mn(e,n.getMinX(r),s);this.events.add(o),this.events.add(new Mn(n.getMaxX(r),o))}},processOverlaps:function(t,e,n,i){for(var r=n.getObject(),s=t;s<e;s++){var o=this.events.get(s);if(o.isInsert()){var a=o.getObject();n.isSameLabel(o)||(r.computeIntersections(a,i),this.nOverlaps++)}}},addEdges:function(){if(1===arguments.length)for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.addEdge(n,n)}else if(2===arguments.length)for(var i=arguments[0],r=arguments[1],e=i.iterator();e.hasNext();){var n=e.next();this.addEdge(n,r)}},interfaces_:function(){return[]},getClass:function(){return Fn}}),e(Gn.prototype,{getMin:function(){return this.min},intersects:function(t,e){return!(this.min>e||this.max<t)},getMax:function(){return this.max},toString:function(){return se.toLineString(new g(this.min,0),new g(this.max,0))},interfaces_:function(){return[]},getClass:function(){return Gn}}),e(qn.prototype,{compare:function(t,e){var n=t,i=e,r=(n.min+n.max)/2,s=(i.min+i.max)/2;return r<s?-1:r>s?1:0},interfaces_:function(){return[a]},getClass:function(){return qn}}),Gn.NodeComparator=qn,h(Bn,Gn),e(Bn.prototype,{query:function(t,e,n){return this.intersects(t,e)?void n.visitItem(this.item):null},interfaces_:function(){return[]},getClass:function(){return Bn}}),h(zn,Gn),e(zn.prototype,{buildExtent:function(t,e){this.min=Math.min(t.min,e.min),this.max=Math.max(t.max,e.max)},query:function(t,e,n){return this.intersects(t,e)?(null!==this.node1&&this.node1.query(t,e,n),void(null!==this.node2&&this.node2.query(t,e,n))):null},interfaces_:function(){return[]},getClass:function(){return zn}}),e(Vn.prototype,{buildTree:function(){ho.sort(this.leaves,new IntervalRTreeNode.NodeComparator);for(var t=this.leaves,e=null,n=new I;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},insert:function(t,e,n){if(null!==this.root)throw new IllegalStateException(\"Index cannot be added to once it has been queried\");this.leaves.add(new Bn(t,e,n))},query:function(t,e,n){this.init(),this.root.query(t,e,n)},buildRoot:function(){return null!==this.root?null:void(this.root=this.buildTree())},printNode:function(t){A.out.println(se.toLineString(new g(t.min,this.level),new g(t.max,this.level)))},init:function(){return null!==this.root?null:void this.buildRoot()},buildLevel:function(t,e){this.level++,e.clear();for(var n=0;n<t.size();n+=2){var i=t.get(n),r=n+1<t.size()?t.get(n):null;if(null===r)e.add(i);else{var s=new zn(t.get(n),t.get(n+1));e.add(s)}}},interfaces_:function(){return[]},getClass:function(){return Vn}}),e(kn.prototype,{filter:function(t){if(this.isForcedToLineString&&t instanceof bt){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this.lines.add(e),null}t instanceof St&&this.lines.add(t)},setForceToLineString:function(t){this.isForcedToLineString=t},interfaces_:function(){return[q]},getClass:function(){return kn}}),kn.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(kn.getLines(t))}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().buildGeometry(kn.getLines(e,n))}},kn.getLines=function(){if(1===arguments.length){var t=arguments[0];return kn.getLines(t,!1)}if(2===arguments.length){if(R(arguments[0],v)&&R(arguments[1],v)){for(var e=arguments[0],n=arguments[1],i=e.iterator();i.hasNext();){var r=i.next();kn.getLines(r,n)}return n}if(arguments[0]instanceof B&&\"boolean\"==typeof arguments[1]){var s=arguments[0],o=arguments[1],a=new I;return s.apply(new kn(a,o)),a}if(arguments[0]instanceof B&&R(arguments[1],v)){var u=arguments[0],l=arguments[1];return u instanceof St?l.add(u):u.apply(new kn(l)),l}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&R(arguments[0],v)&&R(arguments[1],v)){for(var h=arguments[0],c=arguments[1],f=arguments[2],i=h.iterator();i.hasNext();){var r=i.next();kn.getLines(r,c,f)}return c}if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof B&&R(arguments[1],v)){var g=arguments[0],d=arguments[1],p=arguments[2];return g.apply(new kn(d,p)),d}}},e(Yn.prototype,{visitItem:function(t){this.items.add(t)},getItems:function(){return this.items},interfaces_:function(){return[Ae]},getClass:function(){return Yn}}),e(Un.prototype,{locate:function(t){var e=new le(t),n=new Xn(e);return this.index.query(t.y,t.y,n),e.getLocation()},interfaces_:function(){return[Rn]},getClass:function(){return Un}}),e(Xn.prototype,{visitItem:function(t){var e=t;this.counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},interfaces_:function(){return[Ae]},getClass:function(){return Xn}}),e(Hn.prototype,{init:function(t){for(var e=kn.getLines(t),n=e.iterator();n.hasNext();){var i=n.next(),r=i.getCoordinates();this.addLine(r)}},addLine:function(t){for(var e=1;e<t.length;e++){var n=new ce(t[e-1],t[e]),i=Math.min(n.p0.y,n.p1.y),r=Math.max(n.p0.y,n.p1.y);this.index.insert(i,r,n)}},query:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new Yn;return this.index.query(t,e,n),n.getItems()}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];this.index.query(i,r,s)}},interfaces_:function(){return[]},getClass:function(){return Hn}}),Un.SegmentVisitor=Xn,Un.IntervalIndexedGeometry=Hn,e(Wn.prototype,{getSegmentIndex:function(){return this.segmentIndex},getCoordinate:function(){return this.coord},print:function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex),t.println(\" dist = \"+this.dist)},compareTo:function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},isEndPoint:function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t},toString:function(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist},getDistance:function(){return this.dist},compare:function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},interfaces_:function(){return[s]},getClass:function(){return Wn}}),e(jn.prototype,{print:function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},iterator:function(){return this.nodeMap.values().iterator()},addSplitEdges:function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},addEndpoints:function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},createSplitEdge:function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.pts[e.segmentIndex],r=e.dist>0||!e.coord.equals2D(i);r||n--;var s=new Array(n).fill(null),o=0;s[o++]=new g(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)s[o++]=this.edge.pts[a];return r&&(s[o]=e.coord),new Jn(s,new gn(this.edge.label))},add:function(t,e,n){var i=new Wn(t,e,n),r=this.nodeMap.get(i);return null!==r?r:(this.nodeMap.put(i,i),i)},isIntersection:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();if(n.coord.equals(t))return!0}return!1},interfaces_:function(){return[]},getClass:function(){return jn}}),e(Kn.prototype,{getChainStartIndices:function(t){var e=0,n=new I;n.add(new b(e));do{var i=this.findChainEnd(t,e);n.add(new b(i)),e=i}while(e<t.length-1);var r=Kn.toIntArray(n);return r},findChainEnd:function(t,e){for(var n=Je.quadrant(t[e],t[e+1]),i=e+1;i<t.length;){var r=Je.quadrant(t[i-1],t[i]);if(r!==n)break;i++}return i-1},interfaces_:function(){return[]},getClass:function(){return Kn}}),Kn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e},e(Zn.prototype,{getCoordinates:function(){return this.pts},getMaxX:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},getMinX:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n},computeIntersectsForChain:function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],a=arguments[3],u=arguments[4],l=arguments[5],h=this.pts[r],c=this.pts[s],f=o.pts[a],g=o.pts[u];if(s-r===1&&u-a===1)return l.addIntersections(this.e,r,o.e,a),null;if(this.env1.init(h,c),this.env2.init(f,g),!this.env1.intersects(this.env2))return null;var d=Math.trunc((r+s)/2),p=Math.trunc((a+u)/2);r<d&&(a<p&&this.computeIntersectsForChain(r,d,o,a,p,l),p<u&&this.computeIntersectsForChain(r,d,o,p,u,l)),d<s&&(a<p&&this.computeIntersectsForChain(d,s,o,a,p,l),p<u&&this.computeIntersectsForChain(d,s,o,p,u,l))}},getStartIndexes:function(){return this.startIndex},computeIntersects:function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)},interfaces_:function(){return[]},getClass:function(){return Zn}}),e(Qn.prototype,{getDepth:function(t,e){return this.depth[t][e]},setDepth:function(t,e,n){this.depth[t][e]=n},isNull:function(){if(0===arguments.length){for(var t=0;t<2;t++)for(var e=0;e<3;e++)if(this.depth[t][e]!==Qn.NULL_VALUE)return!1;return!0}if(1===arguments.length){var n=arguments[0];return this.depth[n][1]===Qn.NULL_VALUE}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this.depth[i][r]===Qn.NULL_VALUE}},normalize:function(){for(var t=0;t<2;t++)if(!this.isNull(t)){var e=this.depth[t][1];this.depth[t][2]<e&&(e=this.depth[t][2]),e<0&&(e=0);for(var n=1;n<3;n++){var i=0;this.depth[t][n]>e&&(i=1),this.depth[t][n]=i}}},getDelta:function(t){return this.depth[t][cn.RIGHT]-this.depth[t][cn.LEFT]},getLocation:function(t,e){return this.depth[t][e]<=0?L.EXTERIOR:L.INTERIOR},toString:function(){return\"A: \"+this.depth[0][1]+\",\"+this.depth[0][2]+\" B: \"+this.depth[1][1]+\",\"+this.depth[1][2]},add:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<2;e++)for(var n=1;n<3;n++){var i=t.getLocation(e,n);i!==L.EXTERIOR&&i!==L.INTERIOR||(this.isNull(e,n)?this.depth[e][n]=Qn.depthAtLocation(i):this.depth[e][n]+=Qn.depthAtLocation(i))}else if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];o===L.INTERIOR&&this.depth[r][s]++}},interfaces_:function(){return[]},getClass:function(){return Qn}}),Qn.depthAtLocation=function(t){return t===L.EXTERIOR?0:t===L.INTERIOR?1:Qn.NULL_VALUE},Qn.NULL_VALUE=-1,h(Jn,mn),e(Jn.prototype,{getDepth:function(){return this.depth},getCollapsedEdge:function(){var t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];var e=new Jn(t,gn.toLineLabel(this.label));return e},isIsolated:function(){return this._isIsolated},getCoordinates:function(){return this.pts},setIsolated:function(t){this._isIsolated=t},setName:function(t){this.name=t},equals:function(t){if(!(t instanceof Jn))return!1;var e=t;if(this.pts.length!==e.pts.length)return!1;for(var n=!0,i=!0,r=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(e.pts[s])||(n=!1),this.pts[s].equals2D(e.pts[--r])||(i=!1),!n&&!i)return!1;return!0},getCoordinate:function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},print:function(t){t.print(\"edge \"+this.name+\": \"),t.print(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.print(\",\"),t.print(this.pts[e].x+\" \"+this.pts[e].y);t.print(\")  \"+this.label+\" \"+this.depthDelta)},computeIM:function(t){Jn.updateIM(this.label,t)},isCollapsed:function(){return!!this.label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getMaximumSegmentIndex:function(){return this.pts.length-1},getDepthDelta:function(){return this.depthDelta},getNumPoints:function(){return this.pts.length},printReverse:function(t){t.print(\"edge \"+this.name+\": \");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+\" \");t.println(\"\")},getMonotoneChainEdge:function(){return null===this.mce&&(this.mce=new Zn(this)),this.mce},getEnvelope:function(){if(null===this.env){this.env=new C;for(var t=0;t<this.pts.length;t++)this.env.expandToInclude(this.pts[t])}return this.env},addIntersection:function(t,e,n,i){var r=new g(t.getIntersection(i)),s=e,o=t.getEdgeDistance(n,i),a=s+1;if(a<this.pts.length){var u=this.pts[a];r.equals2D(u)&&(s=a,o=0)}this.eiList.add(r,s,o)},toString:function(){var t=new P;t.append(\"edge \"+this.name+\": \"),t.append(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.append(\",\"),t.append(this.pts[e].x+\" \"+this.pts[e].y);return t.append(\")  \"+this.label+\" \"+this.depthDelta),t.toString()},isPointwiseEqual:function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},setDepthDelta:function(t){this.depthDelta=t},getEdgeIntersectionList:function(){return this.eiList},addIntersections:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},interfaces_:function(){return[]},getClass:function(){return Jn}}),Jn.updateIM=function(){if(2!==arguments.length)return mn.prototype.updateIM.apply(this,arguments);var t=arguments[0],e=arguments[1];e.setAtLeastIfValid(t.getLocation(0,cn.ON),t.getLocation(1,cn.ON),1),t.isArea()&&(e.setAtLeastIfValid(t.getLocation(0,cn.LEFT),t.getLocation(1,cn.LEFT),2),e.setAtLeastIfValid(t.getLocation(0,cn.RIGHT),t.getLocation(1,cn.RIGHT),2))},h($n,Cn),e($n.prototype,{insertBoundaryPoint:function(t,e){var n=this.nodes.addNode(e),i=n.getLabel(),r=1,s=L.NONE;s=i.getLocation(t,cn.ON),s===L.BOUNDARY&&r++;var o=$n.determineBoundary(this.boundaryNodeRule,r);i.setLocation(t,o)},computeSelfNodes:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],s=new An(n,(!0),(!1));s.setIsDoneIfProperInt(r);var o=this.createEdgeSetIntersector(),a=this.parentGeom instanceof bt||this.parentGeom instanceof Tt||this.parentGeom instanceof Ot,u=i||!a;return o.computeIntersections(this.edges,s,u),this.addSelfIntersectionNodes(this.argIndex),s}},computeSplitEdges:function(t){for(var e=this.edges.iterator();e.hasNext();){var n=e.next();n.eiList.addSplitEdges(t)}},computeEdgeIntersections:function(t,e,n){var i=new An(e,n,(!0));i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());var r=this.createEdgeSetIntersector();return r.computeIntersections(this.edges,t.edges,i),i},getGeometry:function(){return this.parentGeom},getBoundaryNodeRule:function(){return this.boundaryNodeRule},hasTooFewPoints:function(){return this._hasTooFewPoints},addPoint:function(){if(arguments[0]instanceof Lt){var t=arguments[0],e=t.getCoordinate();this.insertPoint(this.argIndex,e,L.INTERIOR)}else if(arguments[0]instanceof g){var n=arguments[0];this.insertPoint(this.argIndex,n,L.INTERIOR)}},addPolygon:function(t){this.addPolygonRing(t.getExteriorRing(),L.EXTERIOR,L.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,L.INTERIOR,L.EXTERIOR)}},addEdge:function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this.argIndex,e[0],L.BOUNDARY),this.insertPoint(this.argIndex,e[e.length-1],L.BOUNDARY)},addLineString:function(t){var e=H.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this.invalidPoint=e[0],null;var n=new Jn(e,new gn(this.argIndex,L.INTERIOR));this.lineEdgeMap.put(t,n),this.insertEdge(n),f.isTrue(e.length>=2,\"found LineString with single point\"),this.insertBoundaryPoint(this.argIndex,e[0]),this.insertBoundaryPoint(this.argIndex,e[e.length-1])},getInvalidPoint:function(){return this.invalidPoint},getBoundaryPoints:function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,i=t.iterator();i.hasNext();){var r=i.next();e[n++]=r.getCoordinate().copy()}return e},getBoundaryNodes:function(){return null===this.boundaryNodes&&(this.boundaryNodes=this.nodes.getBoundaryNodes(this.argIndex)),this.boundaryNodes},addSelfIntersectionNode:function(t,e,n){return this.isBoundaryNode(t,e)?null:void(n===L.BOUNDARY&&this.useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n))},addPolygonRing:function(t,e,n){if(t.isEmpty())return null;var i=H.removeRepeatedPoints(t.getCoordinates());if(i.length<4)return this._hasTooFewPoints=!0,this.invalidPoint=i[0],null;var r=e,s=n;he.isCCW(i)&&(r=n,s=e);var o=new Jn(i,new gn(this.argIndex,L.BOUNDARY,r,s));this.lineEdgeMap.put(t,o),this.insertEdge(o),this.insertPoint(this.argIndex,i[0],L.BOUNDARY)},insertPoint:function(t,e,n){var i=this.nodes.addNode(e),r=i.getLabel();null===r?i.label=new gn(t,n):r.setLocation(t,n)},createEdgeSetIntersector:function(){return new Fn},addSelfIntersectionNodes:function(t){for(var e=this.edges.iterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.eiList.iterator();r.hasNext();){var s=r.next();this.addSelfIntersectionNode(t,s.coord,i)}},add:function(){if(1!==arguments.length)return Cn.prototype.add.apply(this,arguments);var t=arguments[0];if(t.isEmpty())return null;if(t instanceof Ot&&(this.useBoundaryDeterminationRule=!1),t instanceof Tt)this.addPolygon(t);else if(t instanceof St)this.addLineString(t);else if(t instanceof Lt)this.addPoint(t);else if(t instanceof Pt)this.addCollection(t);else if(t instanceof gt)this.addCollection(t);else if(t instanceof Ot)this.addCollection(t);else{if(!(t instanceof ft))throw new UnsupportedOperationException(t.getClass().getName());this.addCollection(t)}},addCollection:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},locate:function(t){return R(this.parentGeom,Rt)&&this.parentGeom.getNumGeometries()>50?(null===this.areaPtLocator&&(this.areaPtLocator=new Un(this.parentGeom)),this.areaPtLocator.locate(t)):this.ptLocator.locate(t,this.parentGeom)},findEdge:function(){if(1===arguments.length){var t=arguments[0];return this.lineEdgeMap.get(t)}return Cn.prototype.findEdge.apply(this,arguments)},interfaces_:function(){return[]},getClass:function(){return $n}}),$n.determineBoundary=function(t,e){return t.isInBoundary(e)?L.BOUNDARY:L.INTERIOR},e(ti.prototype,{getArgGeometry:function(t){return this.arg[t].getGeometry()},setComputationPrecision:function(t){this.resultPrecisionModel=t,this.li.setPrecisionModel(this.resultPrecisionModel)},interfaces_:function(){return[]},getClass:function(){return ti}}),e(ei.prototype,{compareTo:function(t){var e=t,n=ei.compareOriented(this.pts,this._orientation,e.pts,e._orientation);return n},interfaces_:function(){return[s]},getClass:function(){return ei}}),ei.orientation=function(t){return 1===H.increasingDirection(t)},ei.compareOriented=function(t,e,n,i){for(var r=e?1:-1,s=i?1:-1,o=e?t.length:-1,a=i?n.length:-1,u=e?0:t.length-1,l=i?0:n.length-1;;){var h=t[u].compareTo(n[l]);if(0!==h)return h;u+=r,l+=s;var c=u===o,f=l===a;if(c&&!f)return-1;if(!c&&f)return 1;if(c&&f)return 0}},e(ni.prototype,{print:function(t){t.print(\"MULTILINESTRING ( \");for(var e=0;e<this.edges.size();e++){var n=this.edges.get(e);e>0&&t.print(\",\"),t.print(\"(\");for(var i=n.getCoordinates(),r=0;r<i.length;r++)r>0&&t.print(\",\"),t.print(i[r].x+\" \"+i[r].y);t.println(\")\")}t.print(\")  \")},addAll:function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},findEdgeIndex:function(t){for(var e=0;e<this.edges.size();e++)if(this.edges.get(e).equals(t))return e;return-1},iterator:function(){return this.edges.iterator()},getEdges:function(){return this.edges},get:function(t){return this.edges.get(t)},findEqualEdge:function(t){var e=new ei(t.getCoordinates()),n=this.ocaMap.get(e);return n},add:function(t){this.edges.add(t);var e=new ei(t.getCoordinates());this.ocaMap.put(e,t)},interfaces_:function(){return[]},getClass:function(){return ni}}),h(ii,ti),e(ii.prototype,{insertUniqueEdge:function(t){var e=this.edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new gn(t.getLabel()),i.flip());var r=e.getDepth();r.isNull()&&r.add(n),r.add(i),n.merge(i)}else this.edgeList.add(t)},getGraph:function(){return this.graph},cancelDuplicateResultEdges:function(){for(var t=this.graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},isCoveredByLA:function(t){return!!this.isCovered(t,this.resultLineList)||!!this.isCovered(t,this.resultPolyList)},computeGeometry:function(t,e,n,i){var r=new I;return r.addAll(t),r.addAll(e),r.addAll(n),r.isEmpty()?ii.createEmptyResult(i,this.arg[0].getGeometry(),this.arg[1].getGeometry(),this.geomFact):this.geomFact.buildGeometry(r)},mergeSymLabels:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();e.getEdges().mergeSymLabels()}},isCovered:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next(),r=this.ptLocator.locate(t,i);if(r!==L.EXTERIOR)return!0}return!1},replaceCollapsedEdges:function(){for(var t=new I,e=this.edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this.edgeList.addAll(t)},updateNodeLabelling:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},getResultGeometry:function(t){return this.computeOverlay(t),this.resultGeom},insertUniqueEdges:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},computeOverlay:function(t){this.copyPoints(0),this.copyPoints(1),this.arg[0].computeSelfNodes(this.li,!1),this.arg[1].computeSelfNodes(this.li,!1),this.arg[0].computeEdgeIntersections(this.arg[1],this.li,!0);var e=new I;this.arg[0].computeSplitEdges(e),this.arg[1].computeSplitEdges(e);this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),\nln.checkValid(this.edgeList.getEdges()),this.graph.addEdges(this.edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new Sn(this.geomFact);n.add(this.graph),this.resultPolyList=n.getPolygons();var i=new wn(this,this.geomFact,this.ptLocator);this.resultLineList=i.build(t);var r=new Ln(this,this.geomFact,this.ptLocator);this.resultPointList=r.build(t),this.resultGeom=this.computeGeometry(this.resultPointList,this.resultLineList,this.resultPolyList,t)},labelIncompleteNode:function(t,e){var n=this.ptLocator.locate(t.getCoordinate(),this.arg[e].getGeometry());t.getLabel().setLocation(e,n)},copyPoints:function(t){for(var e=this.arg[t].getNodeIterator();e.hasNext();){var n=e.next(),i=this.graph.addNode(n.getCoordinate());i.setLabel(t,n.getLabel().getLocation(t))}},findResultAreaEdges:function(t){for(var e=this.graph.getEdgeEnds().iterator();e.hasNext();){var n=e.next(),i=n.getLabel();i.isArea()&&!n.isInteriorAreaEdge()&&ii.isResultOfOp(i.getLocation(0,cn.RIGHT),i.getLocation(1,cn.RIGHT),t)&&n.setInResult(!0)}},computeLabelsFromDepths:function(){for(var t=this.edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),i=e.getDepth();if(!i.isNull()){i.normalize();for(var r=0;r<2;r++)n.isNull(r)||!n.isArea()||i.isNull(r)||(0===i.getDelta(r)?n.toLine(r):(f.isTrue(!i.isNull(r,cn.LEFT),\"depth of LEFT side has not been initialized\"),n.setLocation(r,cn.LEFT,i.getLocation(r,cn.LEFT)),f.isTrue(!i.isNull(r,cn.RIGHT),\"depth of RIGHT side has not been initialized\"),n.setLocation(r,cn.RIGHT,i.getLocation(r,cn.RIGHT))))}}},computeLabelling:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();e.getEdges().computeLabelling(this.arg)}this.mergeSymLabels(),this.updateNodeLabelling()},labelIncompleteNodes:function(){for(var t=0,e=this.graph.getNodes().iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(t++,i.isNull(0)?this.labelIncompleteNode(n,0):this.labelIncompleteNode(n,1)),n.getEdges().updateLabelling(i)}},isCoveredByA:function(t){return!!this.isCovered(t,this.resultPolyList)},interfaces_:function(){return[]},getClass:function(){return ii}}),ii.overlayOp=function(t,e,n){var i=new ii(t,e),r=i.getResultGeometry(n);return r},ii.intersection=function(t,e){if(t.isEmpty()||e.isEmpty())return ii.createEmptyResult(ii.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){var n=e;return hn.map(t,{interfaces_:function(){return[MapOp]},map:function(t){return t.intersection(n)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),si.overlayOp(t,e,ii.INTERSECTION)},ii.symDifference=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return ii.createEmptyResult(ii.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),si.overlayOp(t,e,ii.SYMDIFFERENCE)},ii.resultDimension=function(t,e,n){var i=e.getDimension(),r=n.getDimension(),s=-1;switch(t){case ii.INTERSECTION:s=Math.min(i,r);break;case ii.UNION:s=Math.max(i,r);break;case ii.DIFFERENCE:s=i;break;case ii.SYMDIFFERENCE:s=Math.max(i,r)}return s},ii.createEmptyResult=function(t,e,n,i){var r=null;switch(ii.resultDimension(t,e,n)){case-1:r=i.createGeometryCollection(new Array(0).fill(null));break;case 0:r=i.createPoint();break;case 1:r=i.createLineString();break;case 2:r=i.createPolygon()}return r},ii.difference=function(t,e){return t.isEmpty()?ii.createEmptyResult(ii.DIFFERENCE,t,e,t.getFactory()):e.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),si.overlayOp(t,e,ii.DIFFERENCE))},ii.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),i=t.getLocation(1);return ii.isResultOfOp(n,i,e)}if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2];switch(r===L.BOUNDARY&&(r=L.INTERIOR),s===L.BOUNDARY&&(s=L.INTERIOR),o){case ii.INTERSECTION:return r===L.INTERIOR&&s===L.INTERIOR;case ii.UNION:return r===L.INTERIOR||s===L.INTERIOR;case ii.DIFFERENCE:return r===L.INTERIOR&&s!==L.INTERIOR;case ii.SYMDIFFERENCE:return r===L.INTERIOR&&s!==L.INTERIOR||r!==L.INTERIOR&&s===L.INTERIOR}return!1}},ii.INTERSECTION=1,ii.UNION=2,ii.DIFFERENCE=3,ii.SYMDIFFERENCE=4,e(ri.prototype,{selfSnap:function(t){var e=new Ie(t),n=e.snapTo(t,this.snapTolerance);return n},removeCommonBits:function(t){this.cbr=new Se,this.cbr.add(t[0]),this.cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this.cbr.removeCommonBits(t[0].copy()),e[1]=this.cbr.removeCommonBits(t[1].copy()),e},prepareResult:function(t){return this.cbr.addCommonBits(t),t},getResultGeometry:function(t){var e=this.snap(this.geom),n=ii.overlayOp(e[0],e[1],t);return this.prepareResult(n)},checkValid:function(t){t.isValid()||A.out.println(\"Snapped geometry is invalid\")},computeSnapTolerance:function(){this.snapTolerance=Ie.computeOverlaySnapTolerance(this.geom[0],this.geom[1])},snap:function(t){var e=this.removeCommonBits(t),n=Ie.snap(e[0],e[1],this.snapTolerance);return n},interfaces_:function(){return[]},getClass:function(){return ri}}),ri.overlayOp=function(t,e,n){var i=new ri(t,e);return i.getResultGeometry(n)},ri.union=function(t,e){return ri.overlayOp(t,e,ii.UNION)},ri.intersection=function(t,e){return ri.overlayOp(t,e,ii.INTERSECTION)},ri.symDifference=function(t,e){return ri.overlayOp(t,e,ii.SYMDIFFERENCE)},ri.difference=function(t,e){return ri.overlayOp(t,e,ii.DIFFERENCE)},e(si.prototype,{getResultGeometry:function(t){var e=null,n=!1,i=null;try{e=ii.overlayOp(this.geom[0],this.geom[1],t);var r=!0;r&&(n=!0)}catch(t){if(!(t instanceof l))throw t;i=t}finally{}if(!n)try{e=ri.overlayOp(this.geom[0],this.geom[1],t)}catch(t){throw t instanceof l?i:t}finally{}return e},interfaces_:function(){return[]},getClass:function(){return si}}),si.overlayOp=function(t,e,n){var i=new si(t,e);return i.getResultGeometry(n)},si.union=function(t,e){return si.overlayOp(t,e,ii.UNION)},si.intersection=function(t,e){return si.overlayOp(t,e,ii.INTERSECTION)},si.symDifference=function(t,e){return si.overlayOp(t,e,ii.SYMDIFFERENCE)},si.difference=function(t,e){return si.overlayOp(t,e,ii.DIFFERENCE)},e(oi.prototype,{addPolygon:function(t){if(t.isEmpty())return null;var e=null,n=0,i=this.horizontalBisector(t);if(0===i.getLength())n=0,e=i.getCoordinate();else{var r=si.overlayOp(i,t,ii.INTERSECTION),s=this.widestGeometry(r);n=s.getEnvelopeInternal().getWidth(),e=oi.centre(s.getEnvelopeInternal())}(null===this.interiorPoint||n>this.maxWidth)&&(this.interiorPoint=e,this.maxWidth=n)},getInteriorPoint:function(){return this.interiorPoint},widestGeometry:function t(){if(arguments[0]instanceof ft){var e=arguments[0];if(e.isEmpty())return e;for(var t=e.getGeometryN(0),n=1;n<e.getNumGeometries();n++)e.getGeometryN(n).getEnvelopeInternal().getWidth()>t.getEnvelopeInternal().getWidth()&&(t=e.getGeometryN(n));return t}if(arguments[0]instanceof B){var i=arguments[0];return i instanceof ft?this.widestGeometry(i):i}},horizontalBisector:function(t){var e=t.getEnvelopeInternal(),n=ai.getBisectorY(t);return this.factory.createLineString([new g(e.getMinX(),n),new g(e.getMaxX(),n)])},add:function(t){if(t instanceof Tt)this.addPolygon(t);else if(t instanceof ft)for(var e=t,n=0;n<e.getNumGeometries();n++)this.add(e.getGeometryN(n))},interfaces_:function(){return[]},getClass:function(){return oi}}),oi.centre=function(t){return new g(oi.avg(t.getMinX(),t.getMaxX()),oi.avg(t.getMinY(),t.getMaxY()))},oi.avg=function(t,e){return(t+e)/2},e(ai.prototype,{updateInterval:function(t){t<=this.centreY?t>this.loY&&(this.loY=t):t>this.centreY&&t<this.hiY&&(this.hiY=t)},getBisectorY:function(){this.process(this.poly.getExteriorRing());for(var t=0;t<this.poly.getNumInteriorRing();t++)this.process(this.poly.getInteriorRingN(t));var e=oi.avg(this.hiY,this.loY);return e},process:function(t){for(var e=t.getCoordinateSequence(),n=0;n<e.size();n++){var i=e.getY(n);this.updateInterval(i)}},interfaces_:function(){return[]},getClass:function(){return ai}}),ai.getBisectorY=function(t){var e=new ai(t);return e.getBisectorY()},oi.SafeBisectorFinder=ai,e(ui.prototype,{addEndpoints:function(){if(arguments[0]instanceof B){var t=arguments[0];if(t instanceof St)this.addEndpoints(t.getCoordinates());else if(t instanceof ft)for(var e=t,n=0;n<e.getNumGeometries();n++)this.addEndpoints(e.getGeometryN(n))}else if(arguments[0]instanceof Array){var i=arguments[0];this.add(i[0]),this.add(i[i.length-1])}},getInteriorPoint:function(){return this.interiorPoint},addInterior:function(){if(arguments[0]instanceof B){var t=arguments[0];if(t instanceof St)this.addInterior(t.getCoordinates());else if(t instanceof ft)for(var e=t,n=0;n<e.getNumGeometries();n++)this.addInterior(e.getGeometryN(n))}else if(arguments[0]instanceof Array)for(var i=arguments[0],n=1;n<i.length-1;n++)this.add(i[n])},add:function(t){var e=t.distance(this.centroid);e<this.minDistance&&(this.interiorPoint=new g(t),this.minDistance=e)},interfaces_:function(){return[]},getClass:function(){return ui}}),e(li.prototype,{getInteriorPoint:function(){return this.interiorPoint},add:function(){if(arguments[0]instanceof B){var t=arguments[0];if(t instanceof Lt)this.add(t.getCoordinate());else if(t instanceof ft)for(var e=t,n=0;n<e.getNumGeometries();n++)this.add(e.getGeometryN(n))}else if(arguments[0]instanceof g){var i=arguments[0],r=i.distance(this.centroid);r<this.minDistance&&(this.interiorPoint=new g(i),this.minDistance=r)}},interfaces_:function(){return[]},getClass:function(){return li}}),e(hi.prototype,{select:function(){if(1===arguments.length){arguments[0]}else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},interfaces_:function(){return[]},getClass:function(){return hi}}),e(ci.prototype,{hasChildren:function(){for(var t=0;t<2;t++)if(null!==this.subnode[t])return!0;return!1},isPrunable:function(){return!(this.hasChildren()||this.hasItems())},addAllItems:function(t){t.addAll(this.items);for(var e=0;e<2;e++)null!==this.subnode[e]&&this.subnode[e].addAllItems(t);return t},size:function(){for(var t=0,e=0;e<2;e++)null!==this.subnode[e]&&(t+=this.subnode[e].size());return t+this.items.size()},addAllItemsFromOverlapping:function(t,e){return null===t||this.isSearchMatch(t)?(e.addAll(this.items),null!==this.subnode[0]&&this.subnode[0].addAllItemsFromOverlapping(t,e),void(null!==this.subnode[1]&&this.subnode[1].addAllItemsFromOverlapping(t,e))):null},hasItems:function(){return!this.items.isEmpty()},remove:function(t,e){if(!this.isSearchMatch(t))return!1;for(var n=!1,i=0;i<2;i++)if(null!==this.subnode[i]&&(n=this.subnode[i].remove(t,e))){this.subnode[i].isPrunable()&&(this.subnode[i]=null);break}return n?n:n=this.items.remove(e)},getItems:function(){return this.items},depth:function(){for(var t=0,e=0;e<2;e++)if(null!==this.subnode[e]){var n=this.subnode[e].depth();n>t&&(t=n)}return t+1},nodeSize:function(){for(var t=0,e=0;e<2;e++)null!==this.subnode[e]&&(t+=this.subnode[e].nodeSize());return t+1},add:function(t){this.items.add(t)},interfaces_:function(){return[]},getClass:function(){return ci}}),ci.getSubnodeIndex=function(t,e){var n=-1;return t.min>=e&&(n=1),t.max<=e&&(n=0),n},e(fi.prototype,{expandToInclude:function(t){t.max>this.max&&(this.max=t.max),t.min<this.min&&(this.min=t.min)},getWidth:function(){return this.max-this.min},overlaps:function(){if(1===arguments.length){var t=arguments[0];return this.overlaps(t.min,t.max)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!(this.min>n||this.max<e)}},getMin:function(){return this.min},toString:function(){return\"[\"+this.min+\", \"+this.max+\"]\"},contains:function(){if(1===arguments.length){if(arguments[0]instanceof fi){var t=arguments[0];return this.contains(t.min,t.max)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return e>=this.min&&e<=this.max}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return n>=this.min&&i<=this.max}},init:function(t,e){this.min=t,this.max=e,t>e&&(this.min=e,this.max=t)},getMax:function(){return this.max},interfaces_:function(){return[]},getClass:function(){return fi}}),gi.exponent=function(t){return di(64,t)-1023},gi.powerOf2=function(t){return Math.pow(2,t)},e(pi.prototype,{getInterval:function(){return this.interval},getLevel:function(){return this.level},computeKey:function(t){for(this.level=pi.computeLevel(t),this.interval=new fi,this.computeInterval(this.level,t);!this.interval.contains(t);)this.level+=1,this.computeInterval(this.level,t)},computeInterval:function(t,e){var n=gi.powerOf2(t);this.pt=Math.floor(e.getMin()/n)*n,this.interval.init(this.pt,this.pt+n)},getPoint:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return pi}}),pi.computeLevel=function(t){var e=t.getWidth(),n=gi.exponent(e)+1;return n},h(vi,ci),e(vi.prototype,{getInterval:function(){return this.interval},find:function(t){var e=ci.getSubnodeIndex(t,this.centre);if(e===-1)return this;if(null!==this.subnode[e]){var n=this.subnode[e];return n.find(t)}return this},insert:function(t){f.isTrue(null===this.interval||this.interval.contains(t.interval));var e=ci.getSubnodeIndex(t.interval,this.centre);if(t.level===this.level-1)this.subnode[e]=t;else{var n=this.createSubnode(e);n.insert(t),this.subnode[e]=n}},isSearchMatch:function(t){return t.overlaps(this.interval)},getSubnode:function(t){return null===this.subnode[t]&&(this.subnode[t]=this.createSubnode(t)),this.subnode[t]},getNode:function(t){var e=ci.getSubnodeIndex(t,this.centre);if(e!==-1){var n=this.getSubnode(e);return n.getNode(t)}return this},createSubnode:function(t){var e=0,n=0;switch(t){case 0:e=this.interval.getMin(),n=this.centre;break;case 1:e=this.centre,n=this.interval.getMax()}var i=new fi(e,n),r=new vi(i,this.level-1);return r},interfaces_:function(){return[]},getClass:function(){return vi}}),vi.createNode=function(t){var e=new pi(t),n=new vi(e.getInterval(),e.getLevel());return n},vi.createExpanded=function(t,e){var n=new fi(e);null!==t&&n.expandToInclude(t.interval);var i=vi.createNode(n);return null!==t&&i.insert(t),i},e(mi.prototype,{interfaces_:function(){return[]},getClass:function(){return mi}});mi.isZeroWidth=function(t,e){var n=e-t;if(0===n)return!0;var i=Math.max(Math.abs(t),Math.abs(e)),r=n/i,s=gi.exponent(r);return s<=mi.MIN_BINARY_EXPONENT};mi.MIN_BINARY_EXPONENT=-50,h(yi,ci),e(yi.prototype,{insert:function(t,e){var n=ci.getSubnodeIndex(t,yi.origin);if(n===-1)return this.add(e),null;var i=this.subnode[n];if(null===i||!i.getInterval().contains(t)){var r=vi.createExpanded(i,t);this.subnode[n]=r}this.insertContained(this.subnode[n],t,e)},isSearchMatch:function(t){return!0},insertContained:function(t,e,n){f.isTrue(t.getInterval().contains(e));var i=mi.isZeroWidth(e.getMin(),e.getMax()),r=null;r=i?t.find(e):t.getNode(e),r.add(n)},interfaces_:function(){return[]},getClass:function(){return yi}}),yi.origin=0,e(xi.prototype,{size:function(){return null!==this.root?this.root.size():0},insert:function(t,e){this.collectStats(t);var n=xi.ensureExtent(t,this.minExtent);this.root.insert(n,e)},query:function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];return this.query(new fi(t,t))}if(arguments[0]instanceof fi){var e=arguments[0],n=new I;return this.query(e,n),n}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.root.addAllItemsFromOverlapping(i,r)}},iterator:function(){var t=new I;return this.root.addAllItems(t),t.iterator()},remove:function(t,e){var n=xi.ensureExtent(t,this.minExtent);return this.root.remove(n,e)},collectStats:function(t){var e=t.getWidth();e<this.minExtent&&e>0&&(this.minExtent=e)},depth:function(){return null!==this.root?this.root.depth():0},nodeSize:function(){return null!==this.root?this.root.nodeSize():0},interfaces_:function(){return[]},getClass:function(){return xi}}),xi.ensureExtent=function(t,e){var n=t.getMin(),i=t.getMax();return n!==i?t:(n===i&&(n-=e/2,i=n+e/2),new fi(n,i))},e(Ei.prototype,{isInside:function(t){},interfaces_:function(){return[]},getClass:function(){return Ei}}),e(Ii.prototype,{testLineSegment:function(t,e){var n=null,i=null,r=null,s=null,o=null,a=e.p0,u=e.p1;i=a.x-t.x,r=a.y-t.y,s=u.x-t.x,o=u.y-t.y,(r>0&&o<=0||o>0&&r<=0)&&(n=ue.signOfDet2x2(i,r,s,o)/(o-r),0<n&&this.crossings++)},buildIndex:function(){this.tree=new xi;for(var t=H.removeRepeatedPoints(this.ring.getCoordinates()),e=$e.getChains(t),n=0;n<e.size();n++){var i=e.get(n),r=i.getEnvelope();this.interval.min=r.getMinY(),this.interval.max=r.getMaxY(),this.tree.insert(this.interval,i)}},testMonotoneChain:function(t,e,n){n.select(t,e)},isInside:function(t){this.crossings=0;var e=new C(r.NEGATIVE_INFINITY,r.POSITIVE_INFINITY,t.y,t.y);this.interval.min=t.y,this.interval.max=t.y;for(var n=this.tree.query(this.interval),i=new Ni(this,t),s=n.iterator();s.hasNext();){var o=s.next();this.testMonotoneChain(e,i,o)}return this.crossings%2===1},interfaces_:function(){return[Ei]},getClass:function(){return Ii}}),h(Ni,hi),e(Ni.prototype,{select:function(){if(1!==arguments.length)return hi.prototype.select.apply(this,arguments);var t=arguments[0];this.mcp.testLineSegment(this.p,t)},interfaces_:function(){return[]},getClass:function(){return Ni}}),Ii.MCSelecter=Ni,e(Ci.prototype,{interfaces_:function(){return[]},getClass:function(){return Ci}}),Ci.toDegrees=function(t){return 180*t/Math.PI},Ci.normalize=function(t){for(;t>Math.PI;)t-=Ci.PI_TIMES_2;for(;t<=-Math.PI;)t+=Ci.PI_TIMES_2;return t},Ci.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],i=n.x-e.x,r=n.y-e.y;return Math.atan2(r,i)}},Ci.isAcute=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,s=n.x-e.x,o=n.y-e.y,a=i*s+r*o;return a>0},Ci.isObtuse=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,s=n.x-e.x,o=n.y-e.y,a=i*s+r*o;return a<0},Ci.interiorAngle=function(t,e,n){var i=Ci.angle(e,t),r=Ci.angle(e,n);return Math.abs(r-i)},Ci.normalizePositive=function(t){if(t<0){for(;t<0;)t+=Ci.PI_TIMES_2;t>=Ci.PI_TIMES_2&&(t=0)}else{for(;t>=Ci.PI_TIMES_2;)t-=Ci.PI_TIMES_2;t<0&&(t=0)}return t},Ci.angleBetween=function(t,e,n){var i=Ci.angle(e,t),r=Ci.angle(e,n);return Ci.diff(i,r)},Ci.diff=function(t,e){var n=null;return n=t<e?e-t:t-e,n>Math.PI&&(n=2*Math.PI-n),n},Ci.toRadians=function(t){return t*Math.PI/180},Ci.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?Ci.COUNTERCLOCKWISE:n<0?Ci.CLOCKWISE:Ci.NONE},Ci.angleBetweenOriented=function(t,e,n){var i=Ci.angle(e,t),r=Ci.angle(e,n),s=r-i;return s<=-Math.PI?s+Ci.PI_TIMES_2:s>Math.PI?s-Ci.PI_TIMES_2:s},Ci.PI_TIMES_2=2*Math.PI,Ci.PI_OVER_2=Math.PI/2,Ci.PI_OVER_4=Math.PI/4,Ci.COUNTERCLOCKWISE=he.COUNTERCLOCKWISE,Ci.CLOCKWISE=he.CLOCKWISE,Ci.NONE=he.COLLINEAR,e(Si.prototype,{area:function(){return Si.area(this.p0,this.p1,this.p2)},signedArea:function(){return Si.signedArea(this.p0,this.p1,this.p2)},interpolateZ:function(t){if(null===t)throw new i(\"Supplied point is null.\");return Si.interpolateZ(t,this.p0,this.p1,this.p2)},longestSideLength:function(){return Si.longestSideLength(this.p0,this.p1,this.p2)},isAcute:function(){return Si.isAcute(this.p0,this.p1,this.p2)},circumcentre:function(){return Si.circumcentre(this.p0,this.p1,this.p2)},area3D:function(){return Si.area3D(this.p0,this.p1,this.p2)},centroid:function(){return Si.centroid(this.p0,this.p1,this.p2)},inCentre:function(){return Si.inCentre(this.p0,this.p1,this.p2)},interfaces_:function(){return[]},getClass:function(){return Si}}),Si.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},Si.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},Si.det=function(t,e,n,i){return t*i-e*n},Si.interpolateZ=function(t,e,n,i){var r=e.x,s=e.y,o=n.x-r,a=i.x-r,u=n.y-s,l=i.y-s,h=o*l-a*u,c=t.x-r,f=t.y-s,g=(l*c-a*f)/h,d=(-u*c+o*f)/h,p=e.z+g*(n.z-e.z)+d*(i.z-e.z);return p},Si.longestSideLength=function(t,e,n){var i=t.distance(e),r=e.distance(n),s=n.distance(t),o=i;return r>o&&(o=r),s>o&&(o=s),o},Si.isAcute=function(t,e,n){return!!Ci.isAcute(t,e,n)&&(!!Ci.isAcute(e,n,t)&&!!Ci.isAcute(n,t,e))},Si.circumcentre=function(t,e,n){var i=n.x,r=n.y,s=t.x-i,o=t.y-r,a=e.x-i,u=e.y-r,l=2*Si.det(s,o,a,u),h=Si.det(o,s*s+o*o,u,a*a+u*u),c=Si.det(s,s*s+o*o,a,a*a+u*u),f=i-h/l,d=r+c/l;return new g(f,d)},Si.perpendicularBisector=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=new F(t.x+n/2,t.y+i/2,1),s=new F(t.x-i+n/2,t.y+n+i/2,1);return new F(r,s)},Si.angleBisector=function(t,e,n){var i=e.distance(t),r=e.distance(n),s=i/(i+r),o=n.x-t.x,a=n.y-t.y,u=new g(t.x+s*o,t.y+s*a);return u},Si.area3D=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,s=e.z-t.z,o=n.x-t.x,a=n.y-t.y,u=n.z-t.z,l=r*u-s*a,h=s*o-i*u,c=i*a-r*o,f=l*l+h*h+c*c,g=Math.sqrt(f)/2;return g},Si.centroid=function(t,e,n){var i=(t.x+e.x+n.x)/3,r=(t.y+e.y+n.y)/3;return new g(i,r)},Si.inCentre=function(t,e,n){var i=e.distance(n),r=t.distance(n),s=t.distance(e),o=i+r+s,a=(i*t.x+r*e.x+s*n.x)/o,u=(i*t.y+r*e.y+s*n.y)/o;return new g(a,u)},e(wi.prototype,{getRadius:function(){return this.compute(),this.radius},getDiameter:function(){switch(this.compute(),this.extremalPts.length){case 0:return this.input.getFactory().createLineString();case 1:return this.input.getFactory().createPoint(this.centre)}var t=this.extremalPts[0],e=this.extremalPts[1];return this.input.getFactory().createLineString([t,e])},getExtremalPoints:function(){return this.compute(),this.extremalPts},computeCirclePoints:function(){if(this.input.isEmpty())return this.extremalPts=new Array(0).fill(null),null;if(1===this.input.getNumPoints()){var t=this.input.getCoordinates();return this.extremalPts=[new g(t[0])],null}var e=this.input.convexHull(),n=e.getCoordinates(),t=n;if(n[0].equals2D(n[n.length-1])&&(t=new Array(n.length-1).fill(null),H.copyDeep(n,0,t,0,n.length-1)),t.length<=2)return this.extremalPts=H.copyDeep(t),null;for(var i=wi.lowestPoint(t),r=wi.pointWitMinAngleWithX(t,i),s=0;s<t.length;s++){var o=wi.pointWithMinAngleWithSegment(t,i,r);if(Ci.isObtuse(i,o,r))return this.extremalPts=[new g(i),new g(r)],null;if(Ci.isObtuse(o,i,r))i=o;else{if(!Ci.isObtuse(o,r,i))return this.extremalPts=[new g(i),new g(r),new g(o)],null;r=o}}f.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\")},compute:function(){return null!==this.extremalPts?null:(this.computeCirclePoints(),this.computeCentre(),void(null!==this.centre&&(this.radius=this.centre.distance(this.extremalPts[0]))))},getFarthestPoints:function(){switch(this.compute(),this.extremalPts.length){case 0:return this.input.getFactory().createLineString();case 1:return this.input.getFactory().createPoint(this.centre)}var t=this.extremalPts[0],e=this.extremalPts[this.extremalPts.length-1];return this.input.getFactory().createLineString([t,e])},getCircle:function(){if(this.compute(),null===this.centre)return this.input.getFactory().createPolygon();var t=this.input.getFactory().createPoint(this.centre);return 0===this.radius?t:t.buffer(this.radius)},getCentre:function(){return this.compute(),this.centre},computeCentre:function(){switch(this.extremalPts.length){case 0:this.centre=null;break;case 1:this.centre=this.extremalPts[0];break;case 2:this.centre=new g((this.extremalPts[0].x+this.extremalPts[1].x)/2,(this.extremalPts[0].y+this.extremalPts[1].y)/2);break;case 3:this.centre=Si.circumcentre(this.extremalPts[0],this.extremalPts[1],this.extremalPts[2])}},interfaces_:function(){return[]},getClass:function(){return wi}}),wi.pointWitMinAngleWithX=function(t,e){for(var n=r.MAX_VALUE,i=null,s=0;s<t.length;s++){var o=t[s];if(o!==e){var a=o.x-e.x,u=o.y-e.y;u<0&&(u=-u);var l=Math.sqrt(a*a+u*u),h=u/l;h<n&&(n=h,i=o)}}return i},wi.lowestPoint=function(t){for(var e=t[0],n=1;n<t.length;n++)t[n].y<e.y&&(e=t[n]);return e},wi.pointWithMinAngleWithSegment=function(t,e,n){for(var i=r.MAX_VALUE,s=null,o=0;o<t.length;o++){var a=t[o];if(a!==e&&a!==n){var u=Ci.angleBetween(e,a,n);u<i&&(i=u,s=a)}}return s},e(Li.prototype,{getWidthCoordinate:function(){return this.computeMinimumDiameter(),this.minWidthPt},getSupportingSegment:function(){return this.computeMinimumDiameter(),this.inputGeom.getFactory().createLineString([this.minBaseSeg.p0,this.minBaseSeg.p1])},getDiameter:function(){if(this.computeMinimumDiameter(),null===this.minWidthPt)return this.inputGeom.getFactory().createLineString(null);var t=this.minBaseSeg.project(this.minWidthPt);return this.inputGeom.getFactory().createLineString([t,this.minWidthPt])},computeWidthConvex:function(t){t instanceof Tt?this.convexHullPts=t.getExteriorRing().getCoordinates():this.convexHullPts=t.getCoordinates(),0===this.convexHullPts.length?(this.minWidth=0,this.minWidthPt=null,this.minBaseSeg=null):1===this.convexHullPts.length?(this.minWidth=0,this.minWidthPt=this.convexHullPts[0],this.minBaseSeg.p0=this.convexHullPts[0],this.minBaseSeg.p1=this.convexHullPts[0]):2===this.convexHullPts.length||3===this.convexHullPts.length?(this.minWidth=0,this.minWidthPt=this.convexHullPts[0],this.minBaseSeg.p0=this.convexHullPts[0],this.minBaseSeg.p1=this.convexHullPts[1]):this.computeConvexRingMinDiameter(this.convexHullPts)},computeConvexRingMinDiameter:function(t){this.minWidth=r.MAX_VALUE;for(var e=1,n=new ce,i=0;i<t.length-1;i++)n.p0=t[i],n.p1=t[i+1],e=this.findMaxPerpDistance(t,n,e)},computeMinimumDiameter:function(){if(null!==this.minWidthPt)return null;if(this.isConvex)this.computeWidthConvex(this.inputGeom);else{var t=new me(this.inputGeom).getConvexHull();this.computeWidthConvex(t)}},getLength:function(){return this.computeMinimumDiameter(),this.minWidth},findMaxPerpDistance:function(t,e,n){for(var i=e.distancePerpendicular(t[n]),r=i,s=n,o=s;r>=i;)i=r,s=o,o=Li.nextIndex(t,s),r=e.distancePerpendicular(t[o]);return i<this.minWidth&&(this.minPtIndex=s,this.minWidth=i,this.minWidthPt=t[this.minPtIndex],this.minBaseSeg=new ce(e)),s},getMinimumRectangle:function(){if(this.computeMinimumDiameter(),0===this.minWidth)return this.minBaseSeg.p0.equals2D(this.minBaseSeg.p1)?this.inputGeom.getFactory().createPoint(this.minBaseSeg.p0):this.minBaseSeg.toGeometry(this.inputGeom.getFactory());for(var t=this.minBaseSeg.p1.x-this.minBaseSeg.p0.x,e=this.minBaseSeg.p1.y-this.minBaseSeg.p0.y,n=r.MAX_VALUE,i=-r.MAX_VALUE,s=r.MAX_VALUE,o=-r.MAX_VALUE,a=0;a<this.convexHullPts.length;a++){var u=Li.computeC(t,e,this.convexHullPts[a]);u>i&&(i=u),u<n&&(n=u);var l=Li.computeC(-e,t,this.convexHullPts[a]);l>o&&(o=l),l<s&&(s=l)}var h=Li.computeSegmentForLine(-t,-e,o),c=Li.computeSegmentForLine(-t,-e,s),f=Li.computeSegmentForLine(-e,t,i),g=Li.computeSegmentForLine(-e,t,n),d=f.lineIntersection(h),p=g.lineIntersection(h),v=g.lineIntersection(c),m=f.lineIntersection(c),y=this.inputGeom.getFactory().createLinearRing([d,p,v,m,d]);return this.inputGeom.getFactory().createPolygon(y,null)},interfaces_:function(){return[]},getClass:function(){return Li}}),Li.nextIndex=function(t,e){return e++,e>=t.length&&(e=0),e},Li.computeC=function(t,e,n){return t*n.y-e*n.x},Li.getMinimumDiameter=function(t){return new Li(t).getDiameter()},Li.getMinimumRectangle=function(t){return new Li(t).getMinimumRectangle()},Li.computeSegmentForLine=function(t,e,n){var i=null,r=null;return Math.abs(e)>Math.abs(t)?(i=new g(0,n/e),r=new g(1,n/e-t/e)):(i=new g(n/t,0),r=new g(n/t-e/t,1)),new ce(i,r)};var co=Object.freeze({Centroid:ge,CGAlgorithms:he,ConvexHull:me,InteriorPointArea:oi,InteriorPointLine:ui,InteriorPointPoint:li,RobustLineIntersector:ae,MCPointInRing:Ii,MinimumBoundingCircle:wi,MinimumDiameter:Li});e(Ri.prototype,{getResultGeometry:function(){return new Ti(this.distanceTolerance).transform(this.inputGeom)},setDistanceTolerance:function(t){if(t<=0)throw new i(\"Tolerance must be positive\");this.distanceTolerance=t},interfaces_:function(){return[]},getClass:function(){return Ri}}),Ri.densifyPoints=function(t,e,n){for(var i=new ce,r=new N,s=0;s<t.length-1;s++){i.p0=t[s],i.p1=t[s+1],r.add(i.p0,!1);var o=i.getLength(),a=Math.trunc(o/e)+1;if(a>1)for(var u=o/a,l=1;l<a;l++){var h=l*u/o,c=i.pointAlong(h);n.makePrecise(c),r.add(c,!1)}}return r.add(t[t.length-1],!1),r.toCoordinateArray()},Ri.densify=function(t,e){var n=new Ri(t);return n.setDistanceTolerance(e),n.getResultGeometry()},h(Ti,xe),e(Ti.prototype,{transformMultiPolygon:function(t,e){var n=xe.prototype.transformMultiPolygon.call(this,t,e);return this.createValidArea(n)},transformPolygon:function(t,e){var n=xe.prototype.transformPolygon.call(this,t,e);return e instanceof Ot?n:this.createValidArea(n)},transformCoordinates:function(t,e){var n=t.toCoordinateArray(),i=Ri.densifyPoints(n,this.distanceTolerance,e.getPrecisionModel());return e instanceof St&&1===i.length&&(i=new Array(0).fill(null)),this.factory.getCoordinateSequenceFactory().create(i)},createValidArea:function(t){return t.buffer(0)},interfaces_:function(){return[]},getClass:function(){return Ti}}),Ri.DensifyTransformer=Ti;var fo=Object.freeze({Densifier:Ri});e(Pi.prototype,{find:function(t){var e=this;do{if(null===e)return null;if(e.dest().equals2D(t))return e;e=e.oNext()}while(e!==this);return null},dest:function(){return this._sym._orig},oNext:function(){return this._sym._next},insert:function(t){if(this.oNext()===this)return this.insertAfter(t),null;var e=this.compareTo(t),n=this;do{var i=n.oNext(),r=i.compareTo(t);if(r!==e||i===this)return n.insertAfter(t),null;n=i}while(n!==this);f.shouldNeverReachHere()},insertAfter:function(t){f.equals(this._orig,t.orig());var e=this.oNext();this._sym.setNext(t),t.sym().setNext(e)},degree:function t(){var t=0,e=this;do t++,e=e.oNext();while(e!==this);return t},equals:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this._orig.equals2D(t)&&this._sym._orig.equals(e)}},deltaY:function(){return this._sym._orig.y-this._orig.y},sym:function(){return this._sym},prev:function(){return this._sym.next()._sym},compareAngularDirection:function(t){var e=this.deltaX(),n=this.deltaY(),i=t.deltaX(),r=t.deltaY();if(e===i&&n===r)return 0;var s=Je.quadrant(e,n),o=Je.quadrant(i,r);return s>o?1:s<o?-1:he.computeOrientation(t._orig,t.dest(),this.dest())},prevNode:function(){for(var t=this;2===t.degree();)if(t=t.prev(),t===this)return null;return t},compareTo:function(t){var e=t,n=this.compareAngularDirection(e);return n},next:function(){return this._next},setSym:function(t){this._sym=t},orig:function(){return this._orig},toString:function(){return\"HE(\"+this._orig.x+\" \"+this._orig.y+\", \"+this._sym._orig.x+\" \"+this._sym._orig.y+\")\"},setNext:function(t){this._next=t},init:function(t){this.setSym(t),t.setSym(this),this.setNext(t),t.setNext(this)},deltaX:function(){return this._sym._orig.x-this._orig.x},interfaces_:function(){return[]},getClass:function(){return Pi}}),Pi.init=function(t,e){if(null!==t._sym||null!==e._sym||null!==t._next||null!==e._next)throw new IllegalStateException(\"Edges are already initialized\");return t.init(e),t},Pi.create=function(t,e){var n=new Pi(t),i=new Pi(e);return n.init(i),n},h(bi,Pi),e(bi.prototype,{mark:function(){this._isMarked=!0},setMark:function(t){this._isMarked=t},isMarked:function(){return this._isMarked},interfaces_:function(){return[]},getClass:function(){return bi}}),bi.setMarkBoth=function(t,e){t.setMark(e),t.sym().setMark(e)},bi.isMarked=function(t){return t.isMarked()},bi.setMark=function(t,e){t.setMark(e)},bi.markBoth=function(t){t.mark(),t.sym().mark()},bi.mark=function(t){t.mark()},e(Oi.prototype,{insert:function(t,e,n){var i=this.create(t,e);null!==n?n.insert(i):this.vertexMap.put(t,i);var r=this.vertexMap.get(e);return null!==r?r.insert(i.sym()):this.vertexMap.put(e,i.sym()),i},create:function(t,e){var n=this.createEdge(t),i=this.createEdge(e);return Pi.init(n,i),n},createEdge:function(t){return new Pi(t)},addEdge:function(t,e){if(!Oi.isValidEdge(t,e))return null;var n=this.vertexMap.get(t),i=null;if(null!==n&&(i=n.find(e)),null!==i)return i;var r=this.insert(t,e,n);return r},getVertexEdges:function(){return this.vertexMap.values()},findEdge:function(t,e){var n=this.vertexMap.get(t);return null===n?null:n.find(e)},interfaces_:function(){\nreturn[]},getClass:function(){return Oi}}),Oi.isValidEdge=function(t,e){var n=e.compareTo(t);return 0!==n},h(_i,bi),e(_i.prototype,{setStart:function(){this._isStart=!0},isStart:function(){return this._isStart},interfaces_:function(){return[]},getClass:function(){return _i}}),h(Mi,Oi),e(Mi.prototype,{createEdge:function(t){return new _i(t)},interfaces_:function(){return[]},getClass:function(){return Mi}}),e(Di.prototype,{addLine:function(t){this.lines.add(this.factory.createLineString(t.toCoordinateArray()))},updateRingStartEdge:function(t){return t.isStart()||(t=t.sym(),t.isStart())?null===this.ringStartEdge?(this.ringStartEdge=t,null):void(t.orig().compareTo(this.ringStartEdge.orig())<0&&(this.ringStartEdge=t)):null},getResult:function(){return null===this.result&&this.computeResult(),this.result},process:function(t){var e=t.prevNode();null===e&&(e=t),this.stackEdges(e),this.buildLines()},buildRing:function(t){var e=new N,n=t;for(e.add(n.orig().copy(),!1);2===n.sym().degree();){var i=n.next();if(i===t)break;e.add(i.orig().copy(),!1),n=i}e.add(n.dest().copy(),!1),this.addLine(e)},buildLine:function(t){var e=new N,n=t;for(this.ringStartEdge=null,bi.markBoth(n),e.add(n.orig().copy(),!1);2===n.sym().degree();){this.updateRingStartEdge(n);var i=n.next();if(i===t)return this.buildRing(this.ringStartEdge),null;e.add(i.orig().copy(),!1),n=i,bi.markBoth(n)}e.add(n.dest().copy(),!1),this.stackEdges(n.sym()),this.addLine(e)},stackEdges:function(t){var e=t;do bi.isMarked(e)||this.nodeEdgeStack.add(e),e=e.oNext();while(e!==t)},computeResult:function(){for(var t=this.graph.getVertexEdges(),e=t.iterator();e.hasNext();){var n=e.next();bi.isMarked(n)||this.process(n)}this.result=this.factory.buildGeometry(this.lines)},buildLines:function(){for(;!this.nodeEdgeStack.empty();){var t=this.nodeEdgeStack.pop();bi.isMarked(t)||this.buildLine(t)}},add:function(){if(arguments[0]instanceof B){var t=arguments[0];t.apply({interfaces_:function(){return[q]},filter:function(t){t instanceof St&&this.add(t)}})}else if(R(arguments[0],v))for(var e=arguments[0],n=e.iterator();n.hasNext();){var i=n.next();this.add(i)}else if(arguments[0]instanceof St){var r=arguments[0];null===this.factory&&(this.factory=r.getFactory());for(var s=r.getCoordinateSequence(),o=!1,n=1;n<s.size();n++){var a=this.graph.addEdge(s.getCoordinate(n-1),s.getCoordinate(n));null!==a&&(o||(a.setStart(),o=!0))}}},interfaces_:function(){return[]},getClass:function(){return Di}}),Di.dissolve=function(t){var e=new Di;return e.add(t),e.getResult()};var go=Object.freeze({LineDissolver:Di}),po=Object.freeze({GeometryGraph:$n});e(Ai.prototype,{hasChildren:function(){for(var t=0;t<4;t++)if(null!==this.subnode[t])return!0;return!1},isPrunable:function(){return!(this.hasChildren()||this.hasItems())},addAllItems:function(t){t.addAll(this.items);for(var e=0;e<4;e++)null!==this.subnode[e]&&this.subnode[e].addAllItems(t);return t},getNodeCount:function(){for(var t=0,e=0;e<4;e++)null!==this.subnode[e]&&(t+=this.subnode[e].size());return t+1},size:function(){for(var t=0,e=0;e<4;e++)null!==this.subnode[e]&&(t+=this.subnode[e].size());return t+this.items.size()},addAllItemsFromOverlapping:function(t,e){if(!this.isSearchMatch(t))return null;e.addAll(this.items);for(var n=0;n<4;n++)null!==this.subnode[n]&&this.subnode[n].addAllItemsFromOverlapping(t,e)},visitItems:function(t,e){for(var n=this.items.iterator();n.hasNext();)e.visitItem(n.next())},hasItems:function(){return!this.items.isEmpty()},remove:function(t,e){if(!this.isSearchMatch(t))return!1;for(var n=!1,i=0;i<4;i++)if(null!==this.subnode[i]&&(n=this.subnode[i].remove(t,e))){this.subnode[i].isPrunable()&&(this.subnode[i]=null);break}return n?n:n=this.items.remove(e)},visit:function(t,e){if(!this.isSearchMatch(t))return null;this.visitItems(t,e);for(var n=0;n<4;n++)null!==this.subnode[n]&&this.subnode[n].visit(t,e)},getItems:function(){return this.items},depth:function(){for(var t=0,e=0;e<4;e++)if(null!==this.subnode[e]){var n=this.subnode[e].depth();n>t&&(t=n)}return t+1},isEmpty:function t(){var t=!0;this.items.isEmpty()||(t=!1);for(var e=0;e<4;e++)null!==this.subnode[e]&&(this.subnode[e].isEmpty()||(t=!1));return t},add:function(t){this.items.add(t)},interfaces_:function(){return[u]},getClass:function(){return Ai}}),Ai.getSubnodeIndex=function(t,e,n){var i=-1;return t.getMinX()>=e&&(t.getMinY()>=n&&(i=3),t.getMaxY()<=n&&(i=1)),t.getMaxX()<=e&&(t.getMinY()>=n&&(i=2),t.getMaxY()<=n&&(i=0)),i},e(Fi.prototype,{getLevel:function(){return this.level},computeKey:function(){if(1===arguments.length){var t=arguments[0];for(this.level=Fi.computeQuadLevel(t),this.env=new C,this.computeKey(this.level,t);!this.env.contains(t);)this.level+=1,this.computeKey(this.level,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=gi.powerOf2(e);this.pt.x=Math.floor(n.getMinX()/i)*i,this.pt.y=Math.floor(n.getMinY()/i)*i,this.env.init(this.pt.x,this.pt.x+i,this.pt.y,this.pt.y+i)}},getEnvelope:function(){return this.env},getCentre:function(){return new g((this.env.getMinX()+this.env.getMaxX())/2,(this.env.getMinY()+this.env.getMaxY())/2)},getPoint:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return Fi}}),Fi.computeQuadLevel=function(t){var e=t.getWidth(),n=t.getHeight(),i=e>n?e:n,r=gi.exponent(i)+1;return r},h(Gi,Ai),e(Gi.prototype,{find:function(t){var e=Ai.getSubnodeIndex(t,this.centrex,this.centrey);if(e===-1)return this;if(null!==this.subnode[e]){var n=this.subnode[e];return n.find(t)}return this},isSearchMatch:function(t){return this.env.intersects(t)},getSubnode:function(t){return null===this.subnode[t]&&(this.subnode[t]=this.createSubnode(t)),this.subnode[t]},getEnvelope:function(){return this.env},getNode:function(t){var e=Ai.getSubnodeIndex(t,this.centrex,this.centrey);if(e!==-1){var n=this.getSubnode(e);return n.getNode(t)}return this},createSubnode:function(t){var e=0,n=0,i=0,r=0;switch(t){case 0:e=this.env.getMinX(),n=this.centrex,i=this.env.getMinY(),r=this.centrey;break;case 1:e=this.centrex,n=this.env.getMaxX(),i=this.env.getMinY(),r=this.centrey;break;case 2:e=this.env.getMinX(),n=this.centrex,i=this.centrey,r=this.env.getMaxY();break;case 3:e=this.centrex,n=this.env.getMaxX(),i=this.centrey,r=this.env.getMaxY()}var s=new C(e,n,i,r),o=new Gi(s,this.level-1);return o},insertNode:function(t){f.isTrue(null===this.env||this.env.contains(t.env));var e=Ai.getSubnodeIndex(t.env,this.centrex,this.centrey);if(t.level===this.level-1)this.subnode[e]=t;else{var n=this.createSubnode(e);n.insertNode(t),this.subnode[e]=n}},interfaces_:function(){return[]},getClass:function(){return Gi}}),Gi.createNode=function(t){var e=new Fi(t),n=new Gi(e.getEnvelope(),e.getLevel());return n},Gi.createExpanded=function(t,e){var n=new C(e);null!==t&&n.expandToInclude(t.env);var i=Gi.createNode(n);return null!==t&&i.insertNode(t),i},h(qi,Ai),e(qi.prototype,{insert:function(t,e){var n=Ai.getSubnodeIndex(t,qi.origin.x,qi.origin.y);if(n===-1)return this.add(e),null;var i=this.subnode[n];if(null===i||!i.getEnvelope().contains(t)){var r=Gi.createExpanded(i,t);this.subnode[n]=r}this.insertContained(this.subnode[n],t,e)},isSearchMatch:function(t){return!0},insertContained:function(t,e,n){f.isTrue(t.getEnvelope().contains(e));var i=mi.isZeroWidth(e.getMinX(),e.getMaxX()),r=mi.isZeroWidth(e.getMinY(),e.getMaxY()),s=null;s=i||r?t.find(e):t.getNode(e),s.add(n)},interfaces_:function(){return[]},getClass:function(){return qi}}),qi.origin=new g(0,0),e(Bi.prototype,{size:function(){return null!==this.root?this.root.size():0},insert:function(t,e){this.collectStats(t);var n=Bi.ensureExtent(t,this.minExtent);this.root.insert(n,e)},query:function(){if(1===arguments.length){var t=arguments[0],e=new Yn;return this.query(t,e),e.getItems()}if(2===arguments.length){var n=arguments[0],i=arguments[1];this.root.visit(n,i)}},queryAll:function(){var t=new I;return this.root.addAllItems(t),t},remove:function(t,e){var n=Bi.ensureExtent(t,this.minExtent);return this.root.remove(n,e)},collectStats:function(t){var e=t.getWidth();e<this.minExtent&&e>0&&(this.minExtent=e);var n=t.getHeight();n<this.minExtent&&n>0&&(this.minExtent=n)},depth:function(){return null!==this.root?this.root.depth():0},isEmpty:function(){return null===this.root},interfaces_:function(){return[Fe,u]},getClass:function(){return Bi}}),Bi.ensureExtent=function(t,e){var n=t.getMinX(),i=t.getMaxX(),r=t.getMinY(),s=t.getMaxY();return n!==i&&r!==s?t:(n===i&&(n-=e/2,i=n+e/2),r===s&&(r-=e/2,s=r+e/2),new C(n,i,r,s))},Bi.serialVersionUID=-0x678b60c967a25400;var vo=Object.freeze({Quadtree:Bi}),mo=Object.freeze({STRtree:ke}),yo=Object.freeze({quadtree:vo,strtree:mo}),xo=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"];e(zi.prototype,{read:function(t){var e=void 0;e=\"string\"==typeof t?JSON.parse(t):t;var n=e.type;if(!Eo[n])throw new Error(\"Unknown GeoJSON type: \"+e.type);return xo.indexOf(n)!==-1?Eo[n].apply(this,[e.coordinates]):\"GeometryCollection\"===n?Eo[n].apply(this,[e.geometries]):Eo[n].apply(this,[e])},write:function(t){var e=t.getGeometryType();if(!Io[e])throw new Error(\"Geometry is not supported\");return Io[e].apply(this,[t])}});var Eo={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var i=t.geometry.type;if(!Eo[i])throw new Error(\"Unknown GeoJSON type: \"+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=Eo.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function t(e){for(var t=[],n=0;n<e.length;++n){var i=e[n];t.push(new g(i[0],i[1]))}return t},bbox:function(t){return this.geometryFactory.createLinearRing([new g(t[0],t[1]),new g(t[2],t[1]),new g(t[2],t[3]),new g(t[0],t[3]),new g(t[0],t[1])])},Point:function(t){var e=new g(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Eo.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=Eo.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Eo.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=Eo.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),i=[],r=1;r<t.length;++r){var s=t[r],o=Eo.coordinates.apply(this,[s]),a=this.geometryFactory.createLinearRing(o);i.push(a)}return this.geometryFactory.createPolygon(n,i)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(Eo.Polygon.apply(this,[i]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(this.read(i))}return this.geometryFactory.createGeometryCollection(e)}},Io={coordinate:function(t){return[t.x,t.y]},Point:function(t){var e=Io.coordinate.apply(this,[t.getCoordinate()]);return{type:\"Point\",coordinates:e}},MultiPoint:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=Io.Point.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPoint\",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),i=0;i<n.length;++i){var r=n[i];e.push(Io.coordinate.apply(this,[r]))}return{type:\"LineString\",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=Io.LineString.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiLineString\",coordinates:e}},Polygon:function(t){var e=[],n=Io.LineString.apply(this,[t.shell]);e.push(n.coordinates);for(var i=0;i<t.holes.length;++i){var r=t.holes[i],s=Io.LineString.apply(this,[r]);e.push(s.coordinates)}return{type:\"Polygon\",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=Io.Polygon.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPolygon\",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=i.getGeometryType();e.push(Io[r].apply(this,[i]))}return{type:\"GeometryCollection\",geometries:e}}};e(Vi.prototype,{read:function(t){var e=this.parser.read(t);return this.precisionModel.getType()===ee.FIXED&&this.reducePrecision(e),e},reducePrecision:function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;e<n;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;e<n;e++)this.reducePrecision(t.geometries[e])}}),e(ki.prototype,{write:function(t){return this.parser.write(t)}}),e(Yi.prototype,{read:function(t){var e=this.parser.read(t);return this.precisionModel.getType()===ee.FIXED&&this.reducePrecision(e),e},reducePrecision:function(t){if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(var e=0,n=t.points.coordinates.length;e<n;e++)this.precisionModel.makePrecise(t.points.coordinates[e]);else if(t.geometries)for(var i=0,r=t.geometries.length;i<r;i++)this.reducePrecision(t.geometries[i])}}),e(Xi.prototype,{read:function(t){var e=this.ol;return t instanceof e.geom.Point?this.convertFromPoint(t):t instanceof e.geom.LineString?this.convertFromLineString(t):t instanceof e.geom.LinearRing?this.convertFromLinearRing(t):t instanceof e.geom.Polygon?this.convertFromPolygon(t):t instanceof e.geom.MultiPoint?this.convertFromMultiPoint(t):t instanceof e.geom.MultiLineString?this.convertFromMultiLineString(t):t instanceof e.geom.MultiPolygon?this.convertFromMultiPolygon(t):t instanceof e.geom.GeometryCollection?this.convertFromCollection(t):void 0},convertFromPoint:function(t){var e=t.getCoordinates();return this.geometryFactory.createPoint(new g(e[0],e[1]))},convertFromLineString:function(t){return this.geometryFactory.createLineString(t.getCoordinates().map(function(t){return new g(t[0],t[1])}))},convertFromLinearRing:function(t){return this.geometryFactory.createLinearRing(t.getCoordinates().map(function(t){return new g(t[0],t[1])}))},convertFromPolygon:function(t){for(var e=t.getLinearRings(),n=null,i=[],r=0;r<e.length;r++){var s=this.convertFromLinearRing(e[r]);0===r?n=s:i.push(s)}return this.geometryFactory.createPolygon(n,i)},convertFromMultiPoint:function(t){var e=t.getPoints().map(function(t){return this.convertFromPoint(t)},this);return this.geometryFactory.createMultiPoint(e)},convertFromMultiLineString:function(t){var e=t.getLineStrings().map(function(t){return this.convertFromLineString(t)},this);return this.geometryFactory.createMultiLineString(e)},convertFromMultiPolygon:function(t){var e=t.getPolygons().map(function(t){return this.convertFromPolygon(t)},this);return this.geometryFactory.createMultiPolygon(e)},convertFromCollection:function(t){var e=t.getGeometries().map(function(t){return this.read(t)},this);return this.geometryFactory.createGeometryCollection(e)},write:function(t){return\"Point\"===t.getGeometryType()?this.convertToPoint(t.getCoordinate()):\"LineString\"===t.getGeometryType()?this.convertToLineString(t):\"LinearRing\"===t.getGeometryType()?this.convertToLinearRing(t):\"Polygon\"===t.getGeometryType()?this.convertToPolygon(t):\"MultiPoint\"===t.getGeometryType()?this.convertToMultiPoint(t):\"MultiLineString\"===t.getGeometryType()?this.convertToMultiLineString(t):\"MultiPolygon\"===t.getGeometryType()?this.convertToMultiPolygon(t):\"GeometryCollection\"===t.getGeometryType()?this.convertToCollection(t):void 0},convertToPoint:function(t){return new this.ol.geom.Point([t.x,t.y])},convertToLineString:function(t){var e=t.points.coordinates.map(Ui);return new this.ol.geom.LineString(e)},convertToLinearRing:function(t){var e=t.points.coordinates.map(Ui);return new this.ol.geom.LinearRing(e)},convertToPolygon:function(t){for(var e=[t.shell.points.coordinates.map(Ui)],n=0;n<t.holes.length;n++)e.push(t.holes[n].points.coordinates.map(Ui));return new this.ol.geom.Polygon(e)},convertToMultiPoint:function(t){return new this.ol.geom.MultiPoint(t.getCoordinates().map(Ui))},convertToMultiLineString:function(t){for(var e=[],n=0;n<t.geometries.length;n++)e.push(this.convertToLineString(t.geometries[n]).getCoordinates());return new this.ol.geom.MultiLineString(e)},convertToMultiPolygon:function(t){for(var e=[],n=0;n<t.geometries.length;n++)e.push(this.convertToPolygon(t.geometries[n]).getCoordinates());return new this.ol.geom.MultiPolygon(e)},convertToCollection:function(t){for(var e=[],n=0;n<t.geometries.length;n++){var i=t.geometries[n];e.push(this.write(i))}return new this.ol.geom.GeometryCollection(e)}});var No=Object.freeze({GeoJSONReader:Vi,GeoJSONWriter:ki,OL3Parser:Xi,WKTReader:Yi,WKTWriter:se});e(Hi.prototype,{rescale:function(){if(R(arguments[0],v))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.rescale(n.getCoordinates())}else if(arguments[0]instanceof Array){var i=arguments[0],r=null,s=null;2===i.length&&(r=new g(i[0]),s=new g(i[1]));for(var e=0;e<i.length;e++)i[e].x=i[e].x/this.scaleFactor+this.offsetX,i[e].y=i[e].y/this.scaleFactor+this.offsetY;2===i.length&&i[0].equals2D(i[1])&&A.out.println(i)}},scale:function(){if(R(arguments[0],v)){for(var t=arguments[0],e=new I,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Ke(this.scale(i.getCoordinates()),i.getData()))}return e}if(arguments[0]instanceof Array){for(var r=arguments[0],s=new Array(r.length).fill(null),n=0;n<r.length;n++)s[n]=new g(Math.round((r[n].x-this.offsetX)*this.scaleFactor),Math.round((r[n].y-this.offsetY)*this.scaleFactor),r[n].z);var o=H.removeRepeatedPoints(s);return o}},isIntegerPrecision:function(){return 1===this.scaleFactor},getNodedSubstrings:function(){var t=this.noder.getNodedSubstrings();return this.isScaled&&this.rescale(t),t},computeNodes:function(t){var e=t;this.isScaled&&(e=this.scale(t)),this.noder.computeNodes(e)},interfaces_:function(){return[tn]},getClass:function(){return Hi}});var Co=Object.freeze({MCIndexNoder:nn,ScaledNoder:Hi,SegmentString:be});e(Wi.prototype,{isSimpleMultiPoint:function(t){if(t.isEmpty())return!0;for(var e=new at,n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n),r=i.getCoordinate();if(e.contains(r))return this.nonSimpleLocation=r,!1;e.add(r)}return!0},isSimplePolygonal:function(t){for(var e=kn.getLines(t),n=e.iterator();n.hasNext();){var i=n.next();if(!this.isSimpleLinearGeometry(i))return!1}return!0},hasClosedEndpointIntersection:function(t){for(var e=new rt,n=t.getEdgeIterator();n.hasNext();){var i=n.next(),r=(i.getMaximumSegmentIndex(),i.isClosed()),s=i.getCoordinate(0);this.addEndpoint(e,s,r);var o=i.getCoordinate(i.getNumPoints()-1);this.addEndpoint(e,o,r)}for(var n=e.values().iterator();n.hasNext();){var a=n.next();if(a.isClosed&&2!==a.degree)return this.nonSimpleLocation=a.getCoordinate(),!0}return!1},getNonSimpleLocation:function(){return this.nonSimpleLocation},isSimpleLinearGeometry:function(t){if(t.isEmpty())return!0;var e=new $n(0,t),n=new ae,i=e.computeSelfNodes(n,!0);return!i.hasIntersection()||(i.hasProperIntersection()?(this.nonSimpleLocation=i.getProperIntersectionPoint(),!1):!this.hasNonEndpointIntersection(e)&&(!this.isClosedEndpointsInInterior||!this.hasClosedEndpointIntersection(e)))},hasNonEndpointIntersection:function(t){for(var e=t.getEdgeIterator();e.hasNext();)for(var n=e.next(),i=n.getMaximumSegmentIndex(),r=n.getEdgeIntersectionList().iterator();r.hasNext();){var s=r.next();if(!s.isEndPoint(i))return this.nonSimpleLocation=s.getCoordinate(),!0}return!1},addEndpoint:function(t,e,n){var i=t.get(e);null===i&&(i=new ji(e),t.put(e,i)),i.addEndpoint(n)},computeSimple:function(t){return this.nonSimpleLocation=null,!!t.isEmpty()||(t instanceof St?this.isSimpleLinearGeometry(t):t instanceof gt?this.isSimpleLinearGeometry(t):t instanceof Pt?this.isSimpleMultiPoint(t):R(t,Rt)?this.isSimplePolygonal(t):!(t instanceof ft)||this.isSimpleGeometryCollection(t))},isSimple:function(){return this.nonSimpleLocation=null,this.computeSimple(this.inputGeom)},isSimpleGeometryCollection:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);if(!this.computeSimple(n))return!1}return!0},interfaces_:function(){return[]},getClass:function(){return Wi}}),e(ji.prototype,{addEndpoint:function(t){this.degree++,this.isClosed|=t},getCoordinate:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return ji}}),Wi.EndpointInfo=ji,e(Ki.prototype,{getEndCapStyle:function(){return this.endCapStyle},isSingleSided:function(){return this._isSingleSided},setQuadrantSegments:function(t){this.quadrantSegments=t,0===this.quadrantSegments&&(this.joinStyle=Ki.JOIN_BEVEL),this.quadrantSegments<0&&(this.joinStyle=Ki.JOIN_MITRE,this.mitreLimit=Math.abs(this.quadrantSegments)),t<=0&&(this.quadrantSegments=1),this.joinStyle!==Ki.JOIN_ROUND&&(this.quadrantSegments=Ki.DEFAULT_QUADRANT_SEGMENTS)},getJoinStyle:function(){return this.joinStyle},setJoinStyle:function(t){this.joinStyle=t},setSimplifyFactor:function(t){this.simplifyFactor=t<0?0:t},getSimplifyFactor:function(){return this.simplifyFactor},getQuadrantSegments:function(){return this.quadrantSegments},setEndCapStyle:function(t){this.endCapStyle=t},getMitreLimit:function(){return this.mitreLimit},setMitreLimit:function(t){this.mitreLimit=t},setSingleSided:function(t){this._isSingleSided=t},interfaces_:function(){return[]},getClass:function(){return Ki}}),Ki.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},Ki.CAP_ROUND=1,Ki.CAP_FLAT=2,Ki.CAP_SQUARE=3,Ki.JOIN_ROUND=1,Ki.JOIN_MITRE=2,Ki.JOIN_BEVEL=3,Ki.DEFAULT_QUADRANT_SEGMENTS=8,Ki.DEFAULT_MITRE_LIMIT=5,Ki.DEFAULT_SIMPLIFY_FACTOR=.01,e(Zi.prototype,{getCoordinate:function(){return this.minCoord},getRightmostSide:function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this.minCoord=null,this.checkForRightmostCoordinate(t)),n},findRightmostEdgeAtVertex:function(){var t=this.minDe.getEdge().getCoordinates();f.isTrue(this.minIndex>0&&this.minIndex<t.length,\"rightmost point expected to be interior vertex of edge\");var e=t[this.minIndex-1],n=t[this.minIndex+1],i=he.computeOrientation(this.minCoord,n,e),r=!1;e.y<this.minCoord.y&&n.y<this.minCoord.y&&i===he.COUNTERCLOCKWISE?r=!0:e.y>this.minCoord.y&&n.y>this.minCoord.y&&i===he.CLOCKWISE&&(r=!0),r&&(this.minIndex=this.minIndex-1)},getRightmostSideOfSegment:function(t,e){var n=t.getEdge(),i=n.getCoordinates();if(e<0||e+1>=i.length)return-1;if(i[e].y===i[e+1].y)return-1;var r=cn.LEFT;return i[e].y<i[e+1].y&&(r=cn.RIGHT),r},getEdge:function(){return this.orientedDe},checkForRightmostCoordinate:function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this.minCoord||e[n].x>this.minCoord.x)&&(this.minDe=t,this.minIndex=n,this.minCoord=e[n])},findRightmostEdgeAtNode:function(){var t=this.minDe.getNode(),e=t.getEdges();this.minDe=e.getRightmostEdge(),this.minDe.isForward()||(this.minDe=this.minDe.getSym(),this.minIndex=this.minDe.getEdge().getCoordinates().length-1)},findEdge:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}f.isTrue(0!==this.minIndex||this.minCoord.equals(this.minDe.getCoordinate()),\"inconsistency in rightmost processing\"),0===this.minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this.orientedDe=this.minDe;var i=this.getRightmostSide(this.minDe,this.minIndex);i===cn.LEFT&&(this.orientedDe=this.minDe.getSym())},interfaces_:function(){return[]},getClass:function(){return Zi}}),Qi.prototype.addLast=function(t){this.array_.push(t)},Qi.prototype.removeFirst=function(){return this.array_.shift()},Qi.prototype.isEmpty=function(){return 0===this.array_.length},e(Ji.prototype,{clearVisitedEdges:function(){for(var t=this.dirEdgeList.iterator();t.hasNext();){var e=t.next();e.setVisited(!1)}},getRightmostCoordinate:function(){return this.rightMostCoord},computeNodeDepth:function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var i=n.next();if(i.isVisited()||i.getSym().isVisited()){e=i;break}}if(null===e)throw new sn(\"unable to find edge to compute depths at \"+t.getCoordinate());t.getEdges().computeDepths(e);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();i.setVisited(!0),this.copySymDepths(i)}},computeDepth:function(t){this.clearVisitedEdges();var e=this.finder.getEdge();e.getNode(),e.getLabel();e.setEdgeDepths(cn.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},create:function(t){this.addReachable(t),this.finder.findEdge(this.dirEdgeList),this.rightMostCoord=this.finder.getCoordinate()},findResultEdges:function(){for(var t=this.dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(cn.RIGHT)>=1&&e.getDepth(cn.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},computeDepths:function(t){var e=new J,n=new Qi,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){var r=n.removeFirst();e.add(r),this.computeNodeDepth(r);for(var s=r.getEdges().iterator();s.hasNext();){var o=s.next(),a=o.getSym();if(!a.isVisited()){var u=a.getNode();e.contains(u)||(n.addLast(u),e.add(u))}}}},compareTo:function(t){var e=t;return this.rightMostCoord.x<e.rightMostCoord.x?-1:this.rightMostCoord.x>e.rightMostCoord.x?1:0},getEnvelope:function(){if(null===this.env){for(var t=new C,e=this.dirEdgeList.iterator();e.hasNext();)for(var n=e.next(),i=n.getEdge().getCoordinates(),r=0;r<i.length-1;r++)t.expandToInclude(i[r]);this.env=t}return this.env},addReachable:function(t){var e=new pe;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},copySymDepths:function(t){var e=t.getSym();e.setDepth(cn.LEFT,t.getDepth(cn.RIGHT)),e.setDepth(cn.RIGHT,t.getDepth(cn.LEFT))},add:function(t,e){t.setVisited(!0),this.nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();this.dirEdgeList.add(i);var r=i.getSym(),s=r.getNode();s.isVisited()||e.push(s)}},getNodes:function(){return this.nodes},getDirectedEdges:function(){return this.dirEdgeList},interfaces_:function(){return[s]},getClass:function(){return Ji}}),e($i.prototype,{isDeletable:function(t,e,n,i){var r=this.inputLine[t],s=this.inputLine[e],o=this.inputLine[n];return!!this.isConcave(r,s,o)&&(!!this.isShallow(r,s,o,i)&&this.isShallowSampled(r,s,t,n,i))},deleteShallowConcavities:function(){for(var t=1,e=(this.inputLine.length-1,this.findNextNonDeletedIndex(t)),n=this.findNextNonDeletedIndex(e),i=!1;n<this.inputLine.length;){var r=!1;this.isDeletable(t,e,n,this.distanceTol)&&(this.isDeleted[e]=$i.DELETE,r=!0,i=!0),t=r?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return i},isShallowConcavity:function(t,e,n,i){var r=he.computeOrientation(t,e,n),s=r===this.angleOrientation;if(!s)return!1;var o=he.distancePointLine(e,t,n);return o<i},isShallowSampled:function(t,e,n,i,r){var s=Math.trunc((i-n)/$i.NUM_PTS_TO_CHECK);s<=0&&(s=1);for(var o=n;o<i;o+=s)if(!this.isShallow(t,e,this.inputLine[o],r))return!1;return!0},isConcave:function t(e,n,i){var r=he.computeOrientation(e,n,i),t=r===this.angleOrientation;return t},simplify:function(t){this.distanceTol=Math.abs(t),t<0&&(this.angleOrientation=he.CLOCKWISE),this.isDeleted=new Array(this.inputLine.length).fill(null);var e=!1;do e=this.deleteShallowConcavities();while(e);return this.collapseLine()},findNextNonDeletedIndex:function(t){for(var e=t+1;e<this.inputLine.length&&this.isDeleted[e]===$i.DELETE;)e++;return e},isShallow:function(t,e,n,i){var r=he.distancePointLine(e,t,n);return r<i},collapseLine:function(){for(var t=new N,e=0;e<this.inputLine.length;e++)this.isDeleted[e]!==$i.DELETE&&t.add(this.inputLine[e]);return t.toCoordinateArray()},interfaces_:function(){return[]},getClass:function(){return $i}}),$i.simplify=function(t,e){var n=new $i(t);return n.simplify(e)},$i.INIT=0,$i.DELETE=1,$i.KEEP=1,$i.NUM_PTS_TO_CHECK=10,e(tr.prototype,{getCoordinates:function(){var t=this.ptList.toArray(tr.COORDINATE_ARRAY_TYPE);return t},setPrecisionModel:function(t){this.precisionModel=t},addPt:function(t){var e=new g(t);return this.precisionModel.makePrecise(e),this.isRedundant(e)?null:void this.ptList.add(e)},reverse:function(){},addPts:function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var n=t.length-1;n>=0;n--)this.addPt(t[n])},isRedundant:function(t){if(this.ptList.size()<1)return!1;var e=this.ptList.get(this.ptList.size()-1),n=t.distance(e);return n<this.minimimVertexDistance},toString:function(){var t=new ie,e=t.createLineString(this.getCoordinates());return e.toString()},closeRing:function(){if(this.ptList.size()<1)return null;var t=new g(this.ptList.get(0)),e=this.ptList.get(this.ptList.size()-1),n=null;return this.ptList.size()>=2&&(n=this.ptList.get(this.ptList.size()-2)),t.equals(e)?null:void this.ptList.add(t)},setMinimumVertexDistance:function(t){this.minimimVertexDistance=t},interfaces_:function(){return[]},getClass:function(){return tr}}),tr.COORDINATE_ARRAY_TYPE=new Array(0).fill(null),e(er.prototype,{addNextSegment:function(t,e){if(this.s0=this.s1,this.s1=this.s2,this.s2=t,this.seg0.setCoordinates(this.s0,this.s1),this.computeOffsetSegment(this.seg0,this.side,this.distance,this.offset0),this.seg1.setCoordinates(this.s1,this.s2),this.computeOffsetSegment(this.seg1,this.side,this.distance,this.offset1),this.s1.equals(this.s2))return null;var n=he.computeOrientation(this.s0,this.s1,this.s2),i=n===he.CLOCKWISE&&this.side===cn.LEFT||n===he.COUNTERCLOCKWISE&&this.side===cn.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},addLineEndCap:function(t,e){var n=new ce(t,e),i=new ce;this.computeOffsetSegment(n,cn.LEFT,this.distance,i);var r=new ce;this.computeOffsetSegment(n,cn.RIGHT,this.distance,r);var s=e.x-t.x,o=e.y-t.y,a=Math.atan2(o,s);switch(this.bufParams.getEndCapStyle()){case Ki.CAP_ROUND:this.segList.addPt(i.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,he.CLOCKWISE,this.distance),this.segList.addPt(r.p1);break;case Ki.CAP_FLAT:this.segList.addPt(i.p1),this.segList.addPt(r.p1);break;case Ki.CAP_SQUARE:var u=new g;u.x=Math.abs(this.distance)*Math.cos(a),u.y=Math.abs(this.distance)*Math.sin(a);var l=new g(i.p1.x+u.x,i.p1.y+u.y),h=new g(r.p1.x+u.x,r.p1.y+u.y);this.segList.addPt(l),this.segList.addPt(h)}},getCoordinates:function(){var t=this.segList.getCoordinates();return t},addMitreJoin:function(t,e,n,i){var r=!0,s=null;try{s=F.intersection(e.p0,e.p1,n.p0,n.p1);var o=i<=0?1:s.distance(t)/Math.abs(i);o>this.bufParams.getMitreLimit()&&(r=!1)}catch(t){if(!(t instanceof w))throw t;s=new g(0,0),r=!1}finally{}r?this.segList.addPt(s):this.addLimitedMitreJoin(e,n,i,this.bufParams.getMitreLimit())},addFilletCorner:function(t,e,n,i,r){var s=e.x-t.x,o=e.y-t.y,a=Math.atan2(o,s),u=n.x-t.x,l=n.y-t.y,h=Math.atan2(l,u);i===he.CLOCKWISE?a<=h&&(a+=2*Math.PI):a>=h&&(a-=2*Math.PI),this.segList.addPt(e),this.addFilletArc(t,a,h,i,r),this.segList.addPt(n)},addOutsideTurn:function(t,e){return this.offset0.p1.distance(this.offset1.p0)<this.distance*er.OFFSET_SEGMENT_SEPARATION_FACTOR?(this.segList.addPt(this.offset0.p1),null):void(this.bufParams.getJoinStyle()===Ki.JOIN_MITRE?this.addMitreJoin(this.s1,this.offset0,this.offset1,this.distance):this.bufParams.getJoinStyle()===Ki.JOIN_BEVEL?this.addBevelJoin(this.offset0,this.offset1):(e&&this.segList.addPt(this.offset0.p1),this.addFilletCorner(this.s1,this.offset0.p1,this.offset1.p0,t,this.distance),this.segList.addPt(this.offset1.p0)))},createSquare:function(t){this.segList.addPt(new g(t.x+this.distance,t.y+this.distance)),this.segList.addPt(new g(t.x+this.distance,t.y-this.distance)),this.segList.addPt(new g(t.x-this.distance,t.y-this.distance)),this.segList.addPt(new g(t.x-this.distance,t.y+this.distance)),this.segList.closeRing()},addSegments:function(t,e){this.segList.addPts(t,e)},addFirstSegment:function(){this.segList.addPt(this.offset1.p0)},addLastSegment:function(){this.segList.addPt(this.offset1.p1)},initSideSegments:function(t,e,n){this.s1=t,this.s2=e,this.side=n,this.seg1.setCoordinates(t,e),this.computeOffsetSegment(this.seg1,n,this.distance,this.offset1);\n},addLimitedMitreJoin:function(t,e,n,i){var r=this.seg0.p1,s=Ci.angle(r,this.seg0.p0),o=(Ci.angle(r,this.seg1.p1),Ci.angleBetweenOriented(this.seg0.p0,r,this.seg1.p1)),a=o/2,u=Ci.normalize(s+a),l=Ci.normalize(u+Math.PI),h=i*n,c=h*Math.abs(Math.sin(a)),f=n-c,d=r.x+h*Math.cos(l),p=r.y+h*Math.sin(l),v=new g(d,p),m=new ce(r,v),y=m.pointAlongOffset(1,f),x=m.pointAlongOffset(1,-f);this.side===cn.LEFT?(this.segList.addPt(y),this.segList.addPt(x)):(this.segList.addPt(x),this.segList.addPt(y))},computeOffsetSegment:function(t,e,n,i){var r=e===cn.LEFT?1:-1,s=t.p1.x-t.p0.x,o=t.p1.y-t.p0.y,a=Math.sqrt(s*s+o*o),u=r*n*s/a,l=r*n*o/a;i.p0.x=t.p0.x-l,i.p0.y=t.p0.y+u,i.p1.x=t.p1.x-l,i.p1.y=t.p1.y+u},addFilletArc:function(t,e,n,i,r){var s=i===he.CLOCKWISE?-1:1,o=Math.abs(e-n),a=Math.trunc(o/this.filletAngleQuantum+.5);if(a<1)return null;var u=null,l=null;u=0,l=o/a;for(var h=u,c=new g;h<o;){var f=e+s*h;c.x=t.x+r*Math.cos(f),c.y=t.y+r*Math.sin(f),this.segList.addPt(c),h+=l}},addInsideTurn:function(t,e){if(this.li.computeIntersection(this.offset0.p0,this.offset0.p1,this.offset1.p0,this.offset1.p1),this.li.hasIntersection())this.segList.addPt(this.li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this.offset0.p1.distance(this.offset1.p0)<this.distance*er.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this.segList.addPt(this.offset0.p1);else{if(this.segList.addPt(this.offset0.p1),this.closingSegLengthFactor>0){var n=new g((this.closingSegLengthFactor*this.offset0.p1.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset0.p1.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(n);var i=new g((this.closingSegLengthFactor*this.offset1.p0.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset1.p0.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(i)}else this.segList.addPt(this.s1);this.segList.addPt(this.offset1.p0)}},createCircle:function(t){var e=new g(t.x+this.distance,t.y);this.segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this.distance),this.segList.closeRing()},addBevelJoin:function(t,e){this.segList.addPt(t.p1),this.segList.addPt(e.p0)},init:function(t){this.distance=t,this.maxCurveSegmentError=t*(1-Math.cos(this.filletAngleQuantum/2)),this.segList=new tr,this.segList.setPrecisionModel(this.precisionModel),this.segList.setMinimumVertexDistance(t*er.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},addCollinear:function(t){this.li.computeIntersection(this.s0,this.s1,this.s1,this.s2);var e=this.li.getIntersectionNum();e>=2&&(this.bufParams.getJoinStyle()===Ki.JOIN_BEVEL||this.bufParams.getJoinStyle()===Ki.JOIN_MITRE?(t&&this.segList.addPt(this.offset0.p1),this.segList.addPt(this.offset1.p0)):this.addFilletCorner(this.s1,this.offset0.p1,this.offset1.p0,he.CLOCKWISE,this.distance))},closeRing:function(){this.segList.closeRing()},hasNarrowConcaveAngle:function(){return this._hasNarrowConcaveAngle},interfaces_:function(){return[]},getClass:function(){return er}}),er.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,er.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,er.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,er.MAX_CLOSING_SEG_LEN_FACTOR=80,e(nr.prototype,{getOffsetCurve:function(t,e){if(this.distance=e,0===e)return null;var n=e<0,i=Math.abs(e),r=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);var s=r.getCoordinates();return n&&H.reverse(s),s},computeSingleSidedBufferCurve:function(t,e,n){var i=this.simplifyTolerance(this.distance);if(e){n.addSegments(t,!0);var r=$i.simplify(t,-i),s=r.length-1;n.initSideSegments(r[s],r[s-1],cn.LEFT),n.addFirstSegment();for(var o=s-2;o>=0;o--)n.addNextSegment(r[o],!0)}else{n.addSegments(t,!1);var a=$i.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],cn.LEFT),n.addFirstSegment();for(var o=2;o<=u;o++)n.addNextSegment(a[o],!0)}n.addLastSegment(),n.closeRing()},computeRingBufferCurve:function(t,e,n){var i=this.simplifyTolerance(this.distance);e===cn.RIGHT&&(i=-i);var r=$i.simplify(t,i),s=r.length-1;n.initSideSegments(r[s-1],r[0],e);for(var o=1;o<=s;o++){var a=1!==o;n.addNextSegment(r[o],a)}n.closeRing()},computeLineBufferCurve:function(t,e){var n=this.simplifyTolerance(this.distance),i=$i.simplify(t,n),r=i.length-1;e.initSideSegments(i[0],i[1],cn.LEFT);for(var s=2;s<=r;s++)e.addNextSegment(i[s],!0);e.addLastSegment(),e.addLineEndCap(i[r-1],i[r]);var o=$i.simplify(t,-n),a=o.length-1;e.initSideSegments(o[a],o[a-1],cn.LEFT);for(var s=a-2;s>=0;s--)e.addNextSegment(o[s],!0);e.addLastSegment(),e.addLineEndCap(o[1],o[0]),e.closeRing()},computePointCurve:function(t,e){switch(this.bufParams.getEndCapStyle()){case Ki.CAP_ROUND:e.createCircle(t);break;case Ki.CAP_SQUARE:e.createSquare(t)}},getLineCurve:function(t,e){if(this.distance=e,e<0&&!this.bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this.bufParams.isSingleSided()){var r=e<0;this.computeSingleSidedBufferCurve(t,r,i)}else this.computeLineBufferCurve(t,i);var s=i.getCoordinates();return s},getBufferParameters:function(){return this.bufParams},simplifyTolerance:function(t){return t*this.bufParams.getSimplifyFactor()},getRingCurve:function(t,e,n){if(this.distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return nr.copyCoordinates(t);var i=this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()},computeOffsetCurve:function(t,e,n){var i=this.simplifyTolerance(this.distance);if(e){var r=$i.simplify(t,-i),s=r.length-1;n.initSideSegments(r[s],r[s-1],cn.LEFT),n.addFirstSegment();for(var o=s-2;o>=0;o--)n.addNextSegment(r[o],!0)}else{var a=$i.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],cn.LEFT),n.addFirstSegment();for(var o=2;o<=u;o++)n.addNextSegment(a[o],!0)}n.addLastSegment()},getSegGen:function(t){return new er(this.precisionModel,this.bufParams,t)},interfaces_:function(){return[]},getClass:function(){return nr}}),nr.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new g(t[n]);return e},e(ir.prototype,{findStabbedSegments:function(){if(1===arguments.length){for(var t=arguments[0],e=new I,n=this.subgraphs.iterator();n.hasNext();){var i=n.next(),r=i.getEnvelope();t.y<r.getMinY()||t.y>r.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(R(arguments[2],y)&&arguments[0]instanceof g&&arguments[1]instanceof In)for(var s=arguments[0],o=arguments[1],a=arguments[2],u=o.getEdge().getCoordinates(),n=0;n<u.length-1;n++){this.seg.p0=u[n],this.seg.p1=u[n+1],this.seg.p0.y>this.seg.p1.y&&this.seg.reverse();var l=Math.max(this.seg.p0.x,this.seg.p1.x);if(!(l<s.x||this.seg.isHorizontal()||s.y<this.seg.p0.y||s.y>this.seg.p1.y||he.computeOrientation(this.seg.p0,this.seg.p1,s)===he.RIGHT)){var h=o.getDepth(cn.LEFT);this.seg.p0.equals(u[n])||(h=o.getDepth(cn.RIGHT));var c=new rr(this.seg,h);a.add(c)}}else if(R(arguments[2],y)&&arguments[0]instanceof g&&R(arguments[1],y))for(var f=arguments[0],d=arguments[1],p=arguments[2],n=d.iterator();n.hasNext();){var v=n.next();v.isForward()&&this.findStabbedSegments(f,v,p)}},getDepth:function(t){var e=this.findStabbedSegments(t);if(0===e.size())return 0;var n=ho.min(e);return n.leftDepth},interfaces_:function(){return[]},getClass:function(){return ir}}),e(rr.prototype,{compareTo:function(t){var e=t;if(this.upwardSeg.minX()>=e.upwardSeg.maxX())return 1;if(this.upwardSeg.maxX()<=e.upwardSeg.minX())return-1;var n=this.upwardSeg.orientationIndex(e.upwardSeg);return 0!==n?n:(n=-1*e.upwardSeg.orientationIndex(this.upwardSeg),0!==n?n:this.upwardSeg.compareTo(e.upwardSeg))},compareX:function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},toString:function(){return this.upwardSeg.toString()},interfaces_:function(){return[s]},getClass:function(){return rr}}),ir.DepthSegment=rr,e(sr.prototype,{addPoint:function(t){if(this.distance<=0)return null;var e=t.getCoordinates(),n=this.curveBuilder.getLineCurve(e,this.distance);this.addCurve(n,L.EXTERIOR,L.INTERIOR)},addPolygon:function(t){var e=this.distance,n=cn.LEFT;this.distance<0&&(e=-this.distance,n=cn.RIGHT);var i=t.getExteriorRing(),r=H.removeRepeatedPoints(i.getCoordinates());if(this.distance<0&&this.isErodedCompletely(i,this.distance))return null;if(this.distance<=0&&r.length<3)return null;this.addPolygonRing(r,e,n,L.EXTERIOR,L.INTERIOR);for(var s=0;s<t.getNumInteriorRing();s++){var o=t.getInteriorRingN(s),a=H.removeRepeatedPoints(o.getCoordinates());this.distance>0&&this.isErodedCompletely(o,-this.distance)||this.addPolygonRing(a,e,cn.opposite(n),L.INTERIOR,L.EXTERIOR)}},isTriangleErodedCompletely:function(t,e){var n=new Si(t[0],t[1],t[2]),i=n.inCentre(),r=he.distancePointLine(i,n.p0,n.p1);return r<Math.abs(e)},addLineString:function(t){if(this.distance<=0&&!this.curveBuilder.getBufferParameters().isSingleSided())return null;var e=H.removeRepeatedPoints(t.getCoordinates()),n=this.curveBuilder.getLineCurve(e,this.distance);this.addCurve(n,L.EXTERIOR,L.INTERIOR)},addCurve:function(t,e,n){if(null===t||t.length<2)return null;var i=new Ke(t,new gn(0,L.BOUNDARY,e,n));this.curveList.add(i)},getCurves:function(){return this.add(this.inputGeom),this.curveList},addPolygonRing:function(t,e,n,i,r){if(0===e&&t.length<bt.MINIMUM_VALID_SIZE)return null;var s=i,o=r;t.length>=bt.MINIMUM_VALID_SIZE&&he.isCCW(t)&&(s=r,o=i,n=cn.opposite(n));var a=this.curveBuilder.getRingCurve(t,n,e);this.addCurve(a,s,o)},add:function(t){if(t.isEmpty())return null;if(t instanceof Tt)this.addPolygon(t);else if(t instanceof St)this.addLineString(t);else if(t instanceof Lt)this.addPoint(t);else if(t instanceof Pt)this.addCollection(t);else if(t instanceof gt)this.addCollection(t);else if(t instanceof Ot)this.addCollection(t);else{if(!(t instanceof ft))throw new UnsupportedOperationException(t.getClass().getName());this.addCollection(t)}},isErodedCompletely:function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var i=t.getEnvelopeInternal(),r=Math.min(i.getHeight(),i.getWidth());return e<0&&2*Math.abs(e)>r},addCollection:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},interfaces_:function(){return[]},getClass:function(){return sr}}),e(or.prototype,{isTrivialIntersection:function(t,e,n,i){if(t===n&&1===this.li.getIntersectionNum()){if(or.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.size()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},getProperIntersectionPoint:function(){return this.properIntersectionPoint},hasProperInteriorIntersection:function(){return this.hasProperInterior},getLineIntersector:function(){return this.li},hasProperIntersection:function(){return this.hasProper},processIntersections:function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this.li.computeIntersection(r,s,o,a),this.li.hasIntersection()&&(this.numIntersections++,this.li.isInteriorIntersection()&&(this.numInteriorIntersections++,this.hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this.li,e,0),n.addIntersections(this.li,i,1),this.li.isProper()&&(this.numProperIntersections++,this.hasProper=!0,this.hasProperInterior=!0)))},hasIntersection:function(){return this._hasIntersection},isDone:function(){return!1},hasInteriorIntersection:function(){return this.hasInterior},interfaces_:function(){return[on]},getClass:function(){return or}}),or.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)},e(ar.prototype,{setWorkingPrecisionModel:function(t){this.workingPrecisionModel=t},insertUniqueEdge:function(t){var e=this.edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new gn(t.getLabel()),i.flip()),n.merge(i);var r=ar.depthDelta(i),s=e.getDepthDelta(),o=s+r;e.setDepthDelta(o)}else this.edgeList.add(t),t.setDepthDelta(ar.depthDelta(t.getLabel()))},buildSubgraphs:function(t,e){for(var n=new I,i=t.iterator();i.hasNext();){var r=i.next(),s=r.getRightmostCoordinate(),o=new ir(n),a=o.getDepth(s);r.computeDepth(a),r.findResultEdges(),n.add(r),e.add(r.getDirectedEdges(),r.getNodes())}},createSubgraphs:function(t){for(var e=new I,n=t.getNodes().iterator();n.hasNext();){var i=n.next();if(!i.isVisited()){var r=new Ji;r.create(i),e.add(r)}}return ho.sort(e,ho.reverseOrder()),e},createEmptyResultGeometry:function(){var t=this.geomFact.createPolygon();return t},getNoder:function(t){if(null!==this.workingNoder)return this.workingNoder;var e=new nn,n=new ae;return n.setPrecisionModel(t),e.setSegmentIntersector(new or(n)),e},buffer:function(t,e){var n=this.workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this.geomFact=t.getFactory();var i=new nr(n,this.bufParams),r=new sr(t,e,i),s=r.getCurves();if(s.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(s,n),this.graph=new Cn(new On),this.graph.addEdges(this.edgeList.getEdges());var o=this.createSubgraphs(this.graph),a=new Sn(this.geomFact);this.buildSubgraphs(o,a);var u=a.getPolygons();if(u.size()<=0)return this.createEmptyResultGeometry();var l=this.geomFact.buildGeometry(u);return l},computeNodedEdges:function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var i=n.getNodedSubstrings(),r=i.iterator();r.hasNext();){var s=r.next(),o=s.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var a=s.getData(),u=new Jn(s.getCoordinates(),new gn(a));this.insertUniqueEdge(u)}}},setNoder:function(t){this.workingNoder=t},interfaces_:function(){return[]},getClass:function(){return ar}}),ar.depthDelta=function(t){var e=t.getLocation(0,cn.LEFT),n=t.getLocation(0,cn.RIGHT);return e===L.INTERIOR&&n===L.EXTERIOR?1:e===L.EXTERIOR&&n===L.INTERIOR?-1:0},ar.convertSegStrings=function(t){for(var e=new ie,n=new I;t.hasNext();){var i=t.next(),r=e.createLineString(i.getCoordinates());n.add(r)}return e.buildGeometry(n)},e(ur.prototype,{checkEndPtVertexIntersections:function(){if(0===arguments.length)for(var t=this.segStrings.iterator();t.hasNext();){var e=t.next(),n=e.getCoordinates();this.checkEndPtVertexIntersections(n[0],this.segStrings),this.checkEndPtVertexIntersections(n[n.length-1],this.segStrings)}else if(2===arguments.length)for(var i=arguments[0],r=arguments[1],t=r.iterator();t.hasNext();)for(var e=t.next(),n=e.getCoordinates(),s=1;s<n.length-1;s++)if(n[s].equals(i))throw new l(\"found endpt/interior pt intersection at index \"+s+\" :pt \"+i)},checkInteriorIntersections:function(){if(0===arguments.length)for(var t=this.segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this.segStrings.iterator();n.hasNext();){var i=n.next();this.checkInteriorIntersections(e,i)}else if(2===arguments.length)for(var r=arguments[0],s=arguments[1],o=r.getCoordinates(),a=s.getCoordinates(),u=0;u<o.length-1;u++)for(var h=0;h<a.length-1;h++)this.checkInteriorIntersections(r,u,s,h);else if(4===arguments.length){var c=arguments[0],f=arguments[1],g=arguments[2],d=arguments[3];if(c===g&&f===d)return null;var p=c.getCoordinates()[f],v=c.getCoordinates()[f+1],m=g.getCoordinates()[d],y=g.getCoordinates()[d+1];if(this.li.computeIntersection(p,v,m,y),this.li.hasIntersection()&&(this.li.isProper()||this.hasInteriorIntersection(this.li,p,v)||this.hasInteriorIntersection(this.li,m,y)))throw new l(\"found non-noded intersection at \"+p+\"-\"+v+\" and \"+m+\"-\"+y)}},checkValid:function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},checkCollapses:function(){if(0===arguments.length)for(var t=this.segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0],i=n.getCoordinates(),t=0;t<i.length-2;t++)this.checkCollapse(i[t],i[t+1],i[t+2])},hasInteriorIntersection:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++){var r=t.getIntersection(i);if(!r.equals(e)&&!r.equals(n))return!0}return!1},checkCollapse:function(t,e,n){if(t.equals(n))throw new l(\"found non-noded collapse at \"+ur.fact.createLineString([t,e,n]))},interfaces_:function(){return[]},getClass:function(){return ur}}),ur.fact=new ie,e(lr.prototype,{intersectsScaled:function(t,e){var n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),r=Math.min(t.y,e.y),s=Math.max(t.y,e.y),o=this.maxx<n||this.minx>i||this.maxy<r||this.miny>s;if(o)return!1;var a=this.intersectsToleranceSquare(t,e);return f.isTrue(!(o&&a),\"Found bad envelope test\"),a},initCorners:function(t){var e=.5;this.minx=t.x-e,this.maxx=t.x+e,this.miny=t.y-e,this.maxy=t.y+e,this.corner[0]=new g(this.maxx,this.maxy),this.corner[1]=new g(this.minx,this.maxy),this.corner[2]=new g(this.minx,this.miny),this.corner[3]=new g(this.maxx,this.miny)},intersects:function(t,e){return 1===this.scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this.p0Scaled),this.copyScaled(e,this.p1Scaled),this.intersectsScaled(this.p0Scaled,this.p1Scaled))},scale:function(t){return Math.round(t*this.scaleFactor)},getCoordinate:function(){return this.originalPt},copyScaled:function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},getSafeEnvelope:function(){if(null===this.safeEnv){var t=lr.SAFE_ENV_EXPANSION_FACTOR/this.scaleFactor;this.safeEnv=new C(this.originalPt.x-t,this.originalPt.x+t,this.originalPt.y-t,this.originalPt.y+t)}return this.safeEnv},intersectsPixelClosure:function(t,e){return this.li.computeIntersection(t,e,this.corner[0],this.corner[1]),!!this.li.hasIntersection()||(this.li.computeIntersection(t,e,this.corner[1],this.corner[2]),!!this.li.hasIntersection()||(this.li.computeIntersection(t,e,this.corner[2],this.corner[3]),!!this.li.hasIntersection()||(this.li.computeIntersection(t,e,this.corner[3],this.corner[0]),!!this.li.hasIntersection())))},intersectsToleranceSquare:function(t,e){var n=!1,i=!1;return this.li.computeIntersection(t,e,this.corner[0],this.corner[1]),!!this.li.isProper()||(this.li.computeIntersection(t,e,this.corner[1],this.corner[2]),!!this.li.isProper()||(this.li.hasIntersection()&&(n=!0),this.li.computeIntersection(t,e,this.corner[2],this.corner[3]),!!this.li.isProper()||(this.li.hasIntersection()&&(i=!0),this.li.computeIntersection(t,e,this.corner[3],this.corner[0]),!!this.li.isProper()||(!(!n||!i)||(!!t.equals(this.pt)||!!e.equals(this.pt))))))},addSnappedNode:function(t,e){var n=t.getCoordinate(e),i=t.getCoordinate(e+1);return!!this.intersects(n,i)&&(t.addIntersection(this.getCoordinate(),e),!0)},interfaces_:function(){return[]},getClass:function(){return lr}}),lr.SAFE_ENV_EXPANSION_FACTOR=.75,e(hr.prototype,{snap:function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=e.getSafeEnvelope(),s=new cr(e,n,i);return this.index.query(r,{interfaces_:function(){return[Ae]},visitItem:function(t){var e=t;e.select(r,s)}}),s.isNodeAdded()}},interfaces_:function(){return[]},getClass:function(){return hr}}),h(cr,hi),e(cr.prototype,{isNodeAdded:function(){return this._isNodeAdded},select:function(){if(2!==arguments.length)return hi.prototype.select.apply(this,arguments);var t=arguments[0],e=arguments[1],n=t.getContext();return null!==this.parentEdge&&n===this.parentEdge&&e===this.hotPixelVertexIndex?null:void(this._isNodeAdded=this.hotPixel.addSnappedNode(n,e))},interfaces_:function(){return[]},getClass:function(){return cr}}),hr.HotPixelSnapAction=cr,e(fr.prototype,{processIntersections:function(t,e,n,i){if(t===n&&e===i)return null;var r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];if(this.li.computeIntersection(r,s,o,a),this.li.hasIntersection()&&this.li.isInteriorIntersection()){for(var u=0;u<this.li.getIntersectionNum();u++)this.interiorIntersections.add(this.li.getIntersection(u));t.addIntersections(this.li,e,0),n.addIntersections(this.li,i,1)}},isDone:function(){return!1},getInteriorIntersections:function(){return this.interiorIntersections},interfaces_:function(){return[on]},getClass:function(){return fr}}),e(gr.prototype,{checkCorrectness:function(t){var e=Ke.getNodedSubstrings(t),n=new ur(e);try{n.checkValid()}catch(t){if(!(t instanceof S))throw t;t.printStackTrace()}finally{}},getNodedSubstrings:function(){return Ke.getNodedSubstrings(this.nodedSegStrings)},snapRound:function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},findInteriorIntersections:function(t,e){var n=new fr(e);return this.noder.setSegmentIntersector(n),this.noder.computeNodes(t),n.getInteriorIntersections()},computeVertexSnaps:function(){if(R(arguments[0],v))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.computeVertexSnaps(n)}else if(arguments[0]instanceof Ke)for(var i=arguments[0],r=i.getCoordinates(),s=0;s<r.length;s++){var o=new lr(r[s],this.scaleFactor,this.li),a=this.pointSnapper.snap(o,i,s);a&&i.addIntersection(r[s],s)}},computeNodes:function(t){this.nodedSegStrings=t,this.noder=new nn,this.pointSnapper=new hr(this.noder.getIndex()),this.snapRound(t,this.li)},computeIntersectionSnaps:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=new lr(n,this.scaleFactor,this.li);this.pointSnapper.snap(i)}},interfaces_:function(){return[tn]},getClass:function(){return gr}}),e(dr.prototype,{bufferFixedPrecision:function(t){var e=new Hi(new gr(new ee(1)),t.getScale()),n=new ar(this.bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this.resultGeometry=n.buffer(this.argGeom,this.distance)},bufferReducedPrecision:function(){if(0===arguments.length){for(var t=dr.MAX_PRECISION_DIGITS;t>=0;t--){try{this.bufferReducedPrecision(t)}catch(t){if(!(t instanceof sn))throw t;this.saveException=t}finally{}if(null!==this.resultGeometry)return null}throw this.saveException}if(1===arguments.length){var e=arguments[0],n=dr.precisionScaleFactor(this.argGeom,this.distance,e),i=new ee(n);this.bufferFixedPrecision(i)}},computeGeometry:function(){if(this.bufferOriginalPrecision(),null!==this.resultGeometry)return null;var t=this.argGeom.getFactory().getPrecisionModel();t.getType()===ee.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},setQuadrantSegments:function(t){this.bufParams.setQuadrantSegments(t)},bufferOriginalPrecision:function(){try{var t=new ar(this.bufParams);this.resultGeometry=t.buffer(this.argGeom,this.distance)}catch(t){if(!(t instanceof l))throw t;this.saveException=t}finally{}},getResultGeometry:function(t){return this.distance=t,this.computeGeometry(),this.resultGeometry},setEndCapStyle:function(t){this.bufParams.setEndCapStyle(t)},interfaces_:function(){return[]},getClass:function(){return dr}}),dr.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new dr(t),i=n.getResultGeometry(e);return i}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof B&&\"number\"==typeof arguments[1]){var r=arguments[0],s=arguments[1],o=arguments[2],a=new dr(r);a.setQuadrantSegments(o);var i=a.getResultGeometry(s);return i}if(arguments[2]instanceof Ki&&arguments[0]instanceof B&&\"number\"==typeof arguments[1]){var u=arguments[0],l=arguments[1],h=arguments[2],a=new dr(u,h),i=a.getResultGeometry(l);return i}}else if(4===arguments.length){var c=arguments[0],f=arguments[1],g=arguments[2],d=arguments[3],a=new dr(c);a.setQuadrantSegments(g),a.setEndCapStyle(d);var i=a.getResultGeometry(f);return i}},dr.precisionScaleFactor=function(t,e,n){var i=t.getEnvelopeInternal(),r=T.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY())),s=e>0?e:0,o=r+2*s,a=Math.trunc(Math.log(o)/Math.log(10)+1),u=n-a,l=Math.pow(10,u);return l},dr.CAP_ROUND=Ki.CAP_ROUND,dr.CAP_BUTT=Ki.CAP_FLAT,dr.CAP_FLAT=Ki.CAP_FLAT,dr.CAP_SQUARE=Ki.CAP_SQUARE,dr.MAX_PRECISION_DIGITS=12;var So=Object.freeze({BufferOp:dr,BufferParameters:Ki});e(pr.prototype,{filter:function(t){t instanceof Tt&&this.comps.add(t)},interfaces_:function(){return[ht]},getClass:function(){return pr}}),pr.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return pr.getPolygons(t,new I)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Tt?n.add(e):e instanceof ft&&e.apply(new pr(n)),n}},e(vr.prototype,{isInsideArea:function(){return this.segIndex===vr.INSIDE_AREA},getCoordinate:function(){return this.pt},getGeometryComponent:function(){return this.component},getSegmentIndex:function(){return this.segIndex},interfaces_:function(){return[]},getClass:function(){return vr}}),vr.INSIDE_AREA=-1,e(mr.prototype,{filter:function(t){t instanceof Lt&&this.pts.add(t)},interfaces_:function(){return[ht]},getClass:function(){return mr}}),mr.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Lt?ho.singletonList(t):mr.getPoints(t,new I)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Lt?n.add(e):e instanceof ft&&e.apply(new mr(n)),n}},e(yr.prototype,{filter:function(t){(t instanceof Lt||t instanceof St||t instanceof Tt)&&this.locations.add(new vr(t,0,t.getCoordinate()))},interfaces_:function(){return[ht]},getClass:function(){return yr}}),yr.getLocations=function(t){var e=new I;return t.apply(new yr(e)),e},e(xr.prototype,{computeContainmentDistance:function(){if(0===arguments.length){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this.minDistance<=this.terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=1-e,r=pr.getPolygons(this.geom[e]);if(r.size()>0){var s=yr.getLocations(this.geom[i]);if(this.computeContainmentDistance(s,r,n),this.minDistance<=this.terminateDistance)return this.minDistanceLocation[i]=n[0],this.minDistanceLocation[e]=n[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&R(arguments[0],y)&&R(arguments[1],y)){for(var o=arguments[0],a=arguments[1],u=arguments[2],l=0;l<o.size();l++)for(var h=o.get(l),c=0;c<a.size();c++)if(this.computeContainmentDistance(h,a.get(c),u),this.minDistance<=this.terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof vr&&arguments[1]instanceof Tt){var f=arguments[0],g=arguments[1],d=arguments[2],p=f.getCoordinate();if(L.EXTERIOR!==this.ptLocator.locate(p,g))return this.minDistance=0,d[0]=f,d[1]=new vr(g,p),null}},computeMinDistanceLinesPoints:function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),s=0;s<e.size();s++){var o=e.get(s);if(this.computeMinDistance(r,o,n),this.minDistance<=this.terminateDistance)return null}},computeFacetDistance:function(){var t=new Array(2).fill(null),e=kn.getLines(this.geom[0]),n=kn.getLines(this.geom[1]),i=mr.getPoints(this.geom[0]),r=mr.getPoints(this.geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this.minDistance<=this.terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,r,t),this.updateMinDistance(t,!1),this.minDistance<=this.terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,i,t),this.updateMinDistance(t,!0),this.minDistance<=this.terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(i,r,t),void this.updateMinDistance(t,!1))))},nearestLocations:function(){return this.computeMinDistance(),this.minDistanceLocation},updateMinDistance:function(t,e){return null===t[0]?null:void(e?(this.minDistanceLocation[0]=t[1],this.minDistanceLocation[1]=t[0]):(this.minDistanceLocation[0]=t[0],this.minDistanceLocation[1]=t[1]))},nearestPoints:function(){this.computeMinDistance();var t=[this.minDistanceLocation[0].getCoordinate(),this.minDistanceLocation[1].getCoordinate()];return t},computeMinDistance:function(){if(0===arguments.length){if(null!==this.minDistanceLocation)return null;if(this.minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this.minDistance<=this.terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof St&&arguments[1]instanceof Lt){var t=arguments[0],e=arguments[1],n=arguments[2];if(t.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this.minDistance)return null;for(var i=t.getCoordinates(),r=e.getCoordinate(),s=0;s<i.length-1;s++){var o=he.distancePointLine(r,i[s],i[s+1]);if(o<this.minDistance){this.minDistance=o;var a=new ce(i[s],i[s+1]),u=a.closestPoint(r);n[0]=new vr(t,s,u),n[1]=new vr(e,0,r)}if(this.minDistance<=this.terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof St&&arguments[1]instanceof St){var l=arguments[0],h=arguments[1],c=arguments[2];if(l.getEnvelopeInternal().distance(h.getEnvelopeInternal())>this.minDistance)return null;for(var i=l.getCoordinates(),f=h.getCoordinates(),s=0;s<i.length-1;s++)for(var g=0;g<f.length-1;g++){var o=he.distanceLineLine(i[s],i[s+1],f[g],f[g+1]);if(o<this.minDistance){this.minDistance=o;var d=new ce(i[s],i[s+1]),p=new ce(f[g],f[g+1]),v=d.closestPoints(p);c[0]=new vr(l,s,v[0]),c[1]=new vr(h,g,v[1])}if(this.minDistance<=this.terminateDistance)return null}}},computeMinDistancePoints:function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),s=0;s<e.size();s++){var o=e.get(s),a=r.getCoordinate().distance(o.getCoordinate());if(a<this.minDistance&&(this.minDistance=a,n[0]=new vr(r,0,r.getCoordinate()),n[1]=new vr(o,0,o.getCoordinate())),this.minDistance<=this.terminateDistance)return null}},distance:function(){if(null===this.geom[0]||null===this.geom[1])throw new i(\"null geometries are not supported\");return this.geom[0].isEmpty()||this.geom[1].isEmpty()?0:(this.computeMinDistance(),this.minDistance)},computeMinDistanceLines:function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),s=0;s<e.size();s++){var o=e.get(s);if(this.computeMinDistance(r,o,n),this.minDistance<=this.terminateDistance)return null}},interfaces_:function(){return[]},getClass:function(){return xr}}),xr.distance=function(t,e){var n=new xr(t,e);return n.distance()},xr.isWithinDistance=function(t,e,n){var i=new xr(t,e,n);return i.distance()<=n},xr.nearestPoints=function(t,e){var n=new xr(t,e);return n.nearestPoints()};var wo=Object.freeze({DistanceOp:xr});e(Er.prototype,{getCoordinates:function(){if(null===this.coordinates){for(var t=0,e=0,n=new N,i=this.directedEdges.iterator();i.hasNext();){var r=i.next();r.getEdgeDirection()?t++:e++,n.add(r.getEdge().getLine().getCoordinates(),!1,r.getEdgeDirection())}this.coordinates=n.toCoordinateArray(),e>t&&H.reverse(this.coordinates)}return this.coordinates},toLineString:function(){return this.factory.createLineString(this.getCoordinates())},add:function(t){this.directedEdges.add(t)},interfaces_:function(){return[]},getClass:function(){return Er}}),e(Ir.prototype,{setVisited:function(t){this._isVisited=t},isMarked:function(){return this._isMarked},setData:function(t){this.data=t},getData:function(){return this.data},setMarked:function(t){this._isMarked=t},getContext:function(){return this.data},isVisited:function(){return this._isVisited},setContext:function(t){this.data=t},interfaces_:function(){return[]},getClass:function(){return Ir}}),Ir.getComponentWithVisitedState=function(t,e){for(;t.hasNext();){var n=t.next();if(n.isVisited()===e)return n}return null},Ir.setVisited=function(t,e){for(;t.hasNext();){var n=t.next();n.setVisited(e)}},Ir.setMarked=function(t,e){for(;t.hasNext();){var n=t.next();n.setMarked(e)}},h(Nr,Ir),e(Nr.prototype,{isRemoved:function(){return null===this.parentEdge},compareDirection:function(t){return this.quadrant>t.quadrant?1:this.quadrant<t.quadrant?-1:he.computeOrientation(t.p0,t.p1,this.p1)},getCoordinate:function(){return this.from.getCoordinate()},print:function(t){var e=this.getClass().getName(),n=e.lastIndexOf(\".\"),i=e.substring(n+1);t.print(\"  \"+i+\": \"+this.p0+\" - \"+this.p1+\" \"+this.quadrant+\":\"+this.angle)},getDirectionPt:function(){return this.p1},getAngle:function(){return this.angle},compareTo:function(t){var e=t;return this.compareDirection(e)},getFromNode:function(){return this.from},getSym:function(){return this.sym;\n},setEdge:function(t){this.parentEdge=t},remove:function(){this.sym=null,this.parentEdge=null},getEdge:function(){return this.parentEdge},getQuadrant:function(){return this.quadrant},setSym:function(t){this.sym=t},getToNode:function(){return this.to},getEdgeDirection:function(){return this.edgeDirection},interfaces_:function(){return[s]},getClass:function(){return Nr}}),Nr.toEdges=function(t){for(var e=new I,n=t.iterator();n.hasNext();)e.add(n.next().parentEdge);return e},h(Cr,Nr),e(Cr.prototype,{getNext:function(){return 2!==this.getToNode().getDegree()?null:this.getToNode().getOutEdges().getEdges().get(0)===this.getSym()?this.getToNode().getOutEdges().getEdges().get(1):(f.isTrue(this.getToNode().getOutEdges().getEdges().get(1)===this.getSym()),this.getToNode().getOutEdges().getEdges().get(0))},interfaces_:function(){return[]},getClass:function(){return Cr}}),h(Sr,Ir),e(Sr.prototype,{isRemoved:function(){return null===this.dirEdge},setDirectedEdges:function(t,e){this.dirEdge=[t,e],t.setEdge(this),e.setEdge(this),t.setSym(e),e.setSym(t),t.getFromNode().addOutEdge(t),e.getFromNode().addOutEdge(e)},getDirEdge:function(){if(Number.isInteger(arguments[0])){var t=arguments[0];return this.dirEdge[t]}if(arguments[0]instanceof Lr){var e=arguments[0];return this.dirEdge[0].getFromNode()===e?this.dirEdge[0]:this.dirEdge[1].getFromNode()===e?this.dirEdge[1]:null}},remove:function(){this.dirEdge=null},getOppositeNode:function(t){return this.dirEdge[0].getFromNode()===t?this.dirEdge[0].getToNode():this.dirEdge[1].getFromNode()===t?this.dirEdge[1].getToNode():null},interfaces_:function(){return[]},getClass:function(){return Sr}}),e(wr.prototype,{getNextEdge:function(t){var e=this.getIndex(t);return this.outEdges.get(this.getIndex(e+1))},getCoordinate:function(){var t=this.iterator();if(!t.hasNext())return null;var e=t.next();return e.getCoordinate()},iterator:function(){return this.sortEdges(),this.outEdges.iterator()},sortEdges:function(){this.sorted||(ho.sort(this.outEdges),this.sorted=!0)},remove:function(t){this.outEdges.remove(t)},getEdges:function(){return this.sortEdges(),this.outEdges},getNextCWEdge:function(t){var e=this.getIndex(t);return this.outEdges.get(this.getIndex(e-1))},getIndex:function(){if(arguments[0]instanceof Sr){var t=arguments[0];this.sortEdges();for(var e=0;e<this.outEdges.size();e++){var n=this.outEdges.get(e);if(n.getEdge()===t)return e}return-1}if(arguments[0]instanceof Nr){var i=arguments[0];this.sortEdges();for(var e=0;e<this.outEdges.size();e++){var n=this.outEdges.get(e);if(n===i)return e}return-1}if(Number.isInteger(arguments[0])){var r=arguments[0],s=r%this.outEdges.size();return s<0&&(s+=this.outEdges.size()),s}},add:function(t){this.outEdges.add(t),this.sorted=!1},getDegree:function(){return this.outEdges.size()},interfaces_:function(){return[]},getClass:function(){return wr}}),h(Lr,Ir),e(Lr.prototype,{isRemoved:function(){return null===this.pt},addOutEdge:function(t){this.deStar.add(t)},getCoordinate:function(){return this.pt},getOutEdges:function(){return this.deStar},remove:function(){if(0===arguments.length)this.pt=null;else if(1===arguments.length){var t=arguments[0];this.deStar.remove(t)}},getIndex:function(t){return this.deStar.getIndex(t)},getDegree:function(){return this.deStar.getDegree()},interfaces_:function(){return[]},getClass:function(){return Lr}}),Lr.getEdgesBetween=function(t,e){var n=Nr.toEdges(t.getOutEdges().getEdges()),i=new J(n),r=Nr.toEdges(e.getOutEdges().getEdges());return i.retainAll(r),i},h(Rr,Sr),e(Rr.prototype,{getLine:function(){return this.line},interfaces_:function(){return[]},getClass:function(){return Rr}}),e(Tr.prototype,{find:function(t){return this.nodeMap.get(t)},iterator:function(){return this.nodeMap.values().iterator()},remove:function(t){return this.nodeMap.remove(t)},values:function(){return this.nodeMap.values()},add:function(t){return this.nodeMap.put(t.getCoordinate(),t),t},interfaces_:function(){return[]},getClass:function(){return Tr}}),e(Pr.prototype,{findNodesOfDegree:function(t){for(var e=new I,n=this.nodeIterator();n.hasNext();){var i=n.next();i.getDegree()===t&&e.add(i)}return e},dirEdgeIterator:function(){return this.dirEdges.iterator()},edgeIterator:function(){return this.edges.iterator()},remove:function(){if(arguments[0]instanceof Sr){var t=arguments[0];this.remove(t.getDirEdge(0)),this.remove(t.getDirEdge(1)),this.edges.remove(t),t.remove()}else if(arguments[0]instanceof Nr){var e=arguments[0],n=e.getSym();null!==n&&n.setSym(null),e.getFromNode().remove(e),e.remove(),this.dirEdges.remove(e)}else if(arguments[0]instanceof Lr){for(var i=arguments[0],r=i.getOutEdges().getEdges(),s=r.iterator();s.hasNext();){var o=s.next(),n=o.getSym();null!==n&&this.remove(n),this.dirEdges.remove(o);var a=o.getEdge();null!==a&&this.edges.remove(a)}this.nodeMap.remove(i.getCoordinate()),i.remove()}},findNode:function(t){return this.nodeMap.find(t)},getEdges:function(){return this.edges},nodeIterator:function(){return this.nodeMap.iterator()},contains:function(){if(arguments[0]instanceof Sr){var t=arguments[0];return this.edges.contains(t)}if(arguments[0]instanceof Nr){var e=arguments[0];return this.dirEdges.contains(e)}},add:function(){if(arguments[0]instanceof Lr){var t=arguments[0];this.nodeMap.add(t)}else if(arguments[0]instanceof Sr){var e=arguments[0];this.edges.add(e),this.add(e.getDirEdge(0)),this.add(e.getDirEdge(1))}else if(arguments[0]instanceof Nr){var n=arguments[0];this.dirEdges.add(n)}},getNodes:function(){return this.nodeMap.values()},interfaces_:function(){return[]},getClass:function(){return Pr}}),h(br,Pr),e(br.prototype,{addEdge:function(t){if(t.isEmpty())return null;var e=H.removeRepeatedPoints(t.getCoordinates());if(e.length<=1)return null;var n=e[0],i=e[e.length-1],r=this.getNode(n),s=this.getNode(i),o=new Cr(r,s,e[1],(!0)),a=new Cr(s,r,e[e.length-2],(!1)),u=new Rr(t);u.setDirectedEdges(o,a),this.add(u)},getNode:function(t){var e=this.findNode(t);return null===e&&(e=new Lr(t),this.add(e)),e},interfaces_:function(){return[]},getClass:function(){return br}}),e(Or.prototype,{buildEdgeStringsForUnprocessedNodes:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();e.isMarked()||(f.isTrue(2===e.getDegree()),this.buildEdgeStringsStartingAt(e),e.setMarked(!0))}},buildEdgeStringsForNonDegree2Nodes:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();2!==e.getDegree()&&(this.buildEdgeStringsStartingAt(e),e.setMarked(!0))}},buildEdgeStringsForObviousStartNodes:function(){this.buildEdgeStringsForNonDegree2Nodes()},getMergedLineStrings:function(){return this.merge(),this.mergedLineStrings},buildEdgeStringsStartingAt:function(t){for(var e=t.getOutEdges().iterator();e.hasNext();){var n=e.next();n.getEdge().isMarked()||this.edgeStrings.add(this.buildEdgeStringStartingWith(n))}},merge:function(){if(null!==this.mergedLineStrings)return null;Ir.setMarked(this.graph.nodeIterator(),!1),Ir.setMarked(this.graph.edgeIterator(),!1),this.edgeStrings=new I,this.buildEdgeStringsForObviousStartNodes(),this.buildEdgeStringsForIsolatedLoops(),this.mergedLineStrings=new I;for(var t=this.edgeStrings.iterator();t.hasNext();){var e=t.next();this.mergedLineStrings.add(e.toLineString())}},buildEdgeStringStartingWith:function(t){var e=new Er(this.factory),n=t;do e.add(n),n.getEdge().setMarked(!0),n=n.getNext();while(null!==n&&n!==t);return e},add:function(){if(arguments[0]instanceof B){var t=arguments[0];t.apply({interfaces_:function(){return[q]},filter:function(t){t instanceof St&&this.add(t)}})}else if(R(arguments[0],v)){var e=arguments[0];this.mergedLineStrings=null;for(var n=e.iterator();n.hasNext();){var i=n.next();this.add(i)}}else if(arguments[0]instanceof St){var r=arguments[0];null===this.factory&&(this.factory=r.getFactory()),this.graph.addEdge(r)}},buildEdgeStringsForIsolatedLoops:function(){this.buildEdgeStringsForUnprocessedNodes()},interfaces_:function(){return[]},getClass:function(){return Or}});var Lo=Object.freeze({LineMerger:Or}),Ro=Object.freeze({OverlayOp:ii});h(_r,Nr),e(_r.prototype,{getNext:function(){return this.next},isInRing:function(){return null!==this.edgeRing},setRing:function(t){this.edgeRing=t},setLabel:function(t){this.label=t},getLabel:function(){return this.label},setNext:function(t){this.next=t},getRing:function(){return this.edgeRing},interfaces_:function(){return[]},getClass:function(){return _r}}),h(Mr,Sr),e(Mr.prototype,{getLine:function(){return this.line},interfaces_:function(){return[]},getClass:function(){return Mr}}),e(Dr.prototype,{visitInteriorRing:function(t,e){var n=t.getCoordinates(),i=n[0],r=Dr.findDifferentPoint(n,i),s=e.findEdgeInSameDirection(i,r),o=e.findEdgeEnd(s),a=null;o.getLabel().getLocation(0,cn.RIGHT)===L.INTERIOR?a=o:o.getSym().getLabel().getLocation(0,cn.RIGHT)===L.INTERIOR&&(a=o.getSym()),f.isTrue(null!==a,\"unable to find dirEdge with Interior on RHS\"),this.visitLinkedDirectedEdges(a)},visitShellInteriors:function(t,e){if(t instanceof Tt){var n=t;this.visitInteriorRing(n.getExteriorRing(),e)}if(t instanceof Ot)for(var i=t,r=0;r<i.getNumGeometries();r++){var n=i.getGeometryN(r);this.visitInteriorRing(n.getExteriorRing(),e)}},getCoordinate:function(){return this.disconnectedRingcoord},setInteriorEdgesInResult:function(t){for(var e=t.getEdgeEnds().iterator();e.hasNext();){var n=e.next();n.getLabel().getLocation(0,cn.RIGHT)===L.INTERIOR&&n.setInResult(!0)}},visitLinkedDirectedEdges:function(t){var e=t,n=t;do f.isTrue(null!==n,\"found null Directed Edge\"),n.setVisited(!0),n=n.getNext();while(n!==e)},buildEdgeRings:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&null===i.getEdgeRing()){var r=new vn(i,this.geometryFactory);r.linkDirectedEdgesForMinimalEdgeRings();var s=r.buildMinimalRings();e.addAll(s)}}return e},hasUnvisitedShellEdge:function(t){for(var e=0;e<t.size();e++){var n=t.get(e);if(!n.isHole()){var i=n.getEdges(),r=i.get(0);if(r.getLabel().getLocation(0,cn.RIGHT)===L.INTERIOR)for(var s=0;s<i.size();s++)if(r=i.get(s),!r.isVisited())return this.disconnectedRingcoord=r.getCoordinate(),!0}}return!1},isInteriorsConnected:function(){var t=new I;this.geomGraph.computeSplitEdges(t);var e=new Cn(new On);e.addEdges(t),this.setInteriorEdgesInResult(e),e.linkResultDirectedEdges();var n=this.buildEdgeRings(e.getEdgeEnds());return this.visitShellInteriors(this.geomGraph.getGeometry(),e),!this.hasUnvisitedShellEdge(n)},interfaces_:function(){return[]},getClass:function(){return Dr}}),Dr.findDifferentPoint=function(t,e){for(var n=0;n<t.length;n++)if(!t[n].equals(e))return t[n];return null},e(Ar.prototype,{createEdgeEndForNext:function(t,e,n,i){var r=n.segmentIndex+1;if(r>=t.getNumPoints()&&null===i)return null;var s=t.getCoordinate(r);null!==i&&i.segmentIndex===n.segmentIndex&&(s=i.coord);var o=new En(t,n.coord,s,new gn(t.getLabel()));e.add(o)},createEdgeEndForPrev:function(t,e,n,i){var r=n.segmentIndex;if(0===n.dist){if(0===r)return null;r--}var s=t.getCoordinate(r);null!==i&&i.segmentIndex>=r&&(s=i.coord);var o=new gn(t.getLabel());o.flip();var a=new En(t,n.coord,s,o);e.add(a)},computeEdgeEnds:function(){if(1===arguments.length){for(var t=arguments[0],e=new I,n=t;n.hasNext();){var i=n.next();this.computeEdgeEnds(i,e)}return e}if(2===arguments.length){var r=arguments[0],s=arguments[1],o=r.getEdgeIntersectionList();o.addEndpoints();var a=o.iterator(),u=null,l=null;if(!a.hasNext())return null;var h=a.next();do u=l,l=h,h=null,a.hasNext()&&(h=a.next()),null!==l&&(this.createEdgeEndForPrev(r,s,l,u),this.createEdgeEndForNext(r,s,l,h));while(null!==l)}},interfaces_:function(){return[]},getClass:function(){return Ar}}),h(Fr,En),e(Fr.prototype,{insert:function(t){this.edgeEnds.add(t)},print:function(t){t.println(\"EdgeEndBundle--> Label: \"+this.label);for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t),t.println()}},iterator:function(){return this.edgeEnds.iterator()},getEdgeEnds:function(){return this.edgeEnds},computeLabelOn:function(t,e){for(var n=0,i=!1,r=this.iterator();r.hasNext();){var s=r.next(),o=s.getLabel().getLocation(t);o===L.BOUNDARY&&n++,o===L.INTERIOR&&(i=!0)}var o=L.NONE;i&&(o=L.INTERIOR),n>0&&(o=$n.determineBoundary(e,n)),this.label.setLocation(t,o)},computeLabelSide:function(t,e){for(var n=this.iterator();n.hasNext();){var i=n.next();if(i.getLabel().isArea()){var r=i.getLabel().getLocation(t,e);if(r===L.INTERIOR)return this.label.setLocation(t,e,L.INTERIOR),null;r===L.EXTERIOR&&this.label.setLocation(t,e,L.EXTERIOR)}}},getLabel:function(){return this.label},computeLabelSides:function(t){this.computeLabelSide(t,cn.LEFT),this.computeLabelSide(t,cn.RIGHT)},updateIM:function(t){Jn.updateIM(this.label,t)},computeLabel:function(t){for(var e=!1,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().isArea()&&(e=!0)}e?this.label=new gn(L.NONE,L.NONE,L.NONE):this.label=new gn(L.NONE);for(var r=0;r<2;r++)this.computeLabelOn(r,t),e&&this.computeLabelSides(r)},interfaces_:function(){return[]},getClass:function(){return Fr}}),h(Gr,Pn),e(Gr.prototype,{updateIM:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();n.updateIM(t)}},insert:function(t){var e=this.edgeMap.get(t);null===e?(e=new Fr(t),this.insertEdgeEnd(t,e)):e.insert(t)},interfaces_:function(){return[]},getClass:function(){return Gr}}),h(qr,yn),e(qr.prototype,{updateIMFromEdges:function(t){this.edges.updateIM(t)},computeIM:function(t){t.setAtLeastIfValid(this.label.getLocation(0),this.label.getLocation(1),0)},interfaces_:function(){return[]},getClass:function(){return qr}}),h(Br,Nn),e(Br.prototype,{createNode:function(t){return new qr(t,new Gr)},interfaces_:function(){return[]},getClass:function(){return Br}}),e(zr.prototype,{insertEdgeEnds:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.nodes.add(n)}},getNodeIterator:function(){return this.nodes.iterator()},copyNodesAndLabels:function(t,e){for(var n=t.getNodeIterator();n.hasNext();){var i=n.next(),r=this.nodes.addNode(i.getCoordinate());r.setLabel(e,i.getLabel().getLocation(e))}},build:function(t){this.computeIntersectionNodes(t,0),this.copyNodesAndLabels(t,0);var e=new Ar,n=e.computeEdgeEnds(t.getEdgeIterator());this.insertEdgeEnds(n)},computeIntersectionNodes:function(t,e){for(var n=t.getEdgeIterator();n.hasNext();)for(var i=n.next(),r=i.getLabel().getLocation(e),s=i.getEdgeIntersectionList().iterator();s.hasNext();){var o=s.next(),a=this.nodes.addNode(o.coord);r===L.BOUNDARY?a.setLabelBoundary(e):a.getLabel().isNull(e)&&a.setLabel(e,L.INTERIOR)}},interfaces_:function(){return[]},getClass:function(){return zr}}),e(Vr.prototype,{isNodeEdgeAreaLabelsConsistent:function(){for(var t=this.nodeGraph.getNodeIterator();t.hasNext();){var e=t.next();if(!e.getEdges().isAreaLabelsConsistent(this.geomGraph))return this.invalidPoint=e.getCoordinate().copy(),!1}return!0},getInvalidPoint:function(){return this.invalidPoint},hasDuplicateRings:function(){for(var t=this.nodeGraph.getNodeIterator();t.hasNext();)for(var e=t.next(),n=e.getEdges().iterator();n.hasNext();){var i=n.next();if(i.getEdgeEnds().size()>1)return this.invalidPoint=i.getEdge().getCoordinate(0),!0}return!1},isNodeConsistentArea:function(){var t=this.geomGraph.computeSelfNodes(this.li,!0,!0);return t.hasProperIntersection()?(this.invalidPoint=t.getProperIntersectionPoint(),!1):(this.nodeGraph.build(this.geomGraph),this.isNodeEdgeAreaLabelsConsistent())},interfaces_:function(){return[]},getClass:function(){return Vr}}),e(kr.prototype,{buildIndex:function(){this.index=new ke;for(var t=0;t<this.rings.size();t++){var e=this.rings.get(t),n=e.getEnvelopeInternal();this.index.insert(n,e)}},getNestedPoint:function(){return this.nestedPt},isNonNested:function(){this.buildIndex();for(var t=0;t<this.rings.size();t++)for(var e=this.rings.get(t),n=e.getCoordinates(),i=this.index.query(e.getEnvelopeInternal()),r=0;r<i.size();r++){var s=i.get(r),o=s.getCoordinates();if(e!==s&&e.getEnvelopeInternal().intersects(s.getEnvelopeInternal())){var a=Ur.findPtNotNode(n,s,this.graph);if(null!==a){var u=he.isPointInRing(a,o);if(u)return this.nestedPt=a,!1}}}return!0},add:function(t){this.rings.add(t),this.totalEnv.expandToInclude(t.getEnvelopeInternal())},interfaces_:function(){return[]},getClass:function(){return kr}}),e(Yr.prototype,{getErrorType:function(){return this.errorType},getMessage:function(){return Yr.errMsg[this.errorType]},getCoordinate:function(){return this.pt},toString:function(){var t=\"\";return null!==this.pt&&(t=\" at or near point \"+this.pt),this.getMessage()+t},interfaces_:function(){return[]},getClass:function(){return Yr}}),Yr.ERROR=0,Yr.REPEATED_POINT=1,Yr.HOLE_OUTSIDE_SHELL=2,Yr.NESTED_HOLES=3,Yr.DISCONNECTED_INTERIOR=4,Yr.SELF_INTERSECTION=5,Yr.RING_SELF_INTERSECTION=6,Yr.NESTED_SHELLS=7,Yr.DUPLICATE_RINGS=8,Yr.TOO_FEW_POINTS=9,Yr.INVALID_COORDINATE=10,Yr.RING_NOT_CLOSED=11,Yr.errMsg=[\"Topology Validation Error\",\"Repeated Point\",\"Hole lies outside shell\",\"Holes are nested\",\"Interior is disconnected\",\"Self-intersection\",\"Ring Self-intersection\",\"Nested shells\",\"Duplicate Rings\",\"Too few distinct points in geometry component\",\"Invalid Coordinate\",\"Ring is not closed\"],e(Ur.prototype,{checkInvalidCoordinates:function(){if(arguments[0]instanceof Array){for(var t=arguments[0],e=0;e<t.length;e++)if(!Ur.isValid(t[e]))return this.validErr=new Yr(Yr.INVALID_COORDINATE,t[e]),null}else if(arguments[0]instanceof Tt){var n=arguments[0];if(this.checkInvalidCoordinates(n.getExteriorRing().getCoordinates()),null!==this.validErr)return null;for(var e=0;e<n.getNumInteriorRing();e++)if(this.checkInvalidCoordinates(n.getInteriorRingN(e).getCoordinates()),null!==this.validErr)return null}},checkHolesNotNested:function(t,e){for(var n=new kr(e),i=0;i<t.getNumInteriorRing();i++){var r=t.getInteriorRingN(i);n.add(r)}var s=n.isNonNested();s||(this.validErr=new Yr(Yr.NESTED_HOLES,n.getNestedPoint()))},checkConsistentArea:function(t){var e=new Vr(t),n=e.isNodeConsistentArea();return n?void(e.hasDuplicateRings()&&(this.validErr=new Yr(Yr.DUPLICATE_RINGS,e.getInvalidPoint()))):(this.validErr=new Yr(Yr.SELF_INTERSECTION,e.getInvalidPoint()),null)},isValid:function(){return this.checkValid(this.parentGeometry),null===this.validErr},checkShellInsideHole:function(t,e,n){var i=t.getCoordinates(),r=e.getCoordinates(),s=Ur.findPtNotNode(i,e,n);if(null!==s){var o=he.isPointInRing(s,r);if(!o)return s}var a=Ur.findPtNotNode(r,t,n);if(null!==a){var u=he.isPointInRing(a,i);return u?a:null}return f.shouldNeverReachHere(\"points in shell and hole appear to be equal\"),null},checkNoSelfIntersectingRings:function(t){for(var e=t.getEdgeIterator();e.hasNext();){var n=e.next();if(this.checkNoSelfIntersectingRing(n.getEdgeIntersectionList()),null!==this.validErr)return null}},checkConnectedInteriors:function(t){var e=new Dr(t);e.isInteriorsConnected()||(this.validErr=new Yr(Yr.DISCONNECTED_INTERIOR,e.getCoordinate()))},checkNoSelfIntersectingRing:function(t){for(var e=new at,n=!0,i=t.iterator();i.hasNext();){var r=i.next();if(n)n=!1;else{if(e.contains(r.coord))return this.validErr=new Yr(Yr.RING_SELF_INTERSECTION,r.coord),null;e.add(r.coord)}}},checkHolesInShell:function(t,e){for(var n=t.getExteriorRing(),i=new Ii(n),r=0;r<t.getNumInteriorRing();r++){var s=t.getInteriorRingN(r),o=Ur.findPtNotNode(s.getCoordinates(),n,e);if(null===o)return null;var a=!i.isInside(o);if(a)return this.validErr=new Yr(Yr.HOLE_OUTSIDE_SHELL,o),null}},checkTooFewPoints:function(t){if(t.hasTooFewPoints())return this.validErr=new Yr(Yr.TOO_FEW_POINTS,t.getInvalidPoint()),null},getValidationError:function(){return this.checkValid(this.parentGeometry),this.validErr},checkValid:function(){if(arguments[0]instanceof Lt){var t=arguments[0];this.checkInvalidCoordinates(t.getCoordinates())}else if(arguments[0]instanceof Pt){var e=arguments[0];this.checkInvalidCoordinates(e.getCoordinates())}else if(arguments[0]instanceof bt){var n=arguments[0];if(this.checkInvalidCoordinates(n.getCoordinates()),null!==this.validErr)return null;if(this.checkClosedRing(n),null!==this.validErr)return null;var i=new $n(0,n);if(this.checkTooFewPoints(i),null!==this.validErr)return null;var r=new ae;i.computeSelfNodes(r,!0,!0),this.checkNoSelfIntersectingRings(i)}else if(arguments[0]instanceof St){var s=arguments[0];if(this.checkInvalidCoordinates(s.getCoordinates()),null!==this.validErr)return null;var i=new $n(0,s);this.checkTooFewPoints(i)}else if(arguments[0]instanceof Tt){var o=arguments[0];if(this.checkInvalidCoordinates(o),null!==this.validErr)return null;if(this.checkClosedRings(o),null!==this.validErr)return null;var i=new $n(0,o);if(this.checkTooFewPoints(i),null!==this.validErr)return null;if(this.checkConsistentArea(i),null!==this.validErr)return null;if(!this.isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(i),null!==this.validErr))return null;if(this.checkHolesInShell(o,i),null!==this.validErr)return null;if(this.checkHolesNotNested(o,i),null!==this.validErr)return null;this.checkConnectedInteriors(i)}else if(arguments[0]instanceof Ot){for(var a=arguments[0],u=0;u<a.getNumGeometries();u++){var l=a.getGeometryN(u);if(this.checkInvalidCoordinates(l),null!==this.validErr)return null;if(this.checkClosedRings(l),null!==this.validErr)return null}var i=new $n(0,a);if(this.checkTooFewPoints(i),null!==this.validErr)return null;if(this.checkConsistentArea(i),null!==this.validErr)return null;if(!this.isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(i),null!==this.validErr))return null;for(var u=0;u<a.getNumGeometries();u++){var l=a.getGeometryN(u);if(this.checkHolesInShell(l,i),null!==this.validErr)return null}for(var u=0;u<a.getNumGeometries();u++){var l=a.getGeometryN(u);if(this.checkHolesNotNested(l,i),null!==this.validErr)return null}if(this.checkShellsNotNested(a,i),null!==this.validErr)return null;this.checkConnectedInteriors(i)}else if(arguments[0]instanceof ft)for(var h=arguments[0],u=0;u<h.getNumGeometries();u++){var c=h.getGeometryN(u);if(this.checkValid(c),null!==this.validErr)return null}else if(arguments[0]instanceof B){var f=arguments[0];if(this.validErr=null,f.isEmpty())return null;if(f instanceof Lt)this.checkValid(f);else if(f instanceof Pt)this.checkValid(f);else if(f instanceof bt)this.checkValid(f);else if(f instanceof St)this.checkValid(f);else if(f instanceof Tt)this.checkValid(f);else if(f instanceof Ot)this.checkValid(f);else{if(!(f instanceof ft))throw new UnsupportedOperationException(f.getClass().getName());this.checkValid(f)}}},setSelfTouchingRingFormingHoleValid:function(t){this.isSelfTouchingRingFormingHoleValid=t},checkShellNotNested:function(t,e,n){var i=t.getCoordinates(),r=e.getExteriorRing(),s=r.getCoordinates(),o=Ur.findPtNotNode(i,r,n);if(null===o)return null;var a=he.isPointInRing(o,s);if(!a)return null;if(e.getNumInteriorRing()<=0)return this.validErr=new Yr(Yr.NESTED_SHELLS,o),null;for(var u=null,l=0;l<e.getNumInteriorRing();l++){var h=e.getInteriorRingN(l);if(u=this.checkShellInsideHole(t,h,n),null===u)return null}this.validErr=new Yr(Yr.NESTED_SHELLS,u)},checkClosedRings:function(t){if(this.checkClosedRing(t.getExteriorRing()),null!==this.validErr)return null;for(var e=0;e<t.getNumInteriorRing();e++)if(this.checkClosedRing(t.getInteriorRingN(e)),null!==this.validErr)return null},checkClosedRing:function(t){if(!t.isClosed()){var e=null;t.getNumPoints()>=1&&(e=t.getCoordinateN(0)),this.validErr=new Yr(Yr.RING_NOT_CLOSED,e)}},checkShellsNotNested:function(t,e){for(var n=0;n<t.getNumGeometries();n++)for(var i=t.getGeometryN(n),r=i.getExteriorRing(),s=0;s<t.getNumGeometries();s++)if(n!==s){var o=t.getGeometryN(s);if(this.checkShellNotNested(r,o,e),null!==this.validErr)return null}},interfaces_:function(){return[]},getClass:function(){return Ur}}),Ur.findPtNotNode=function(t,e,n){for(var i=n.findEdge(e),r=i.getEdgeIntersectionList(),s=0;s<t.length;s++){var o=t[s];if(!r.isIntersection(o))return o}return null},Ur.isValid=function(){if(arguments[0]instanceof B){var t=arguments[0],e=new Ur(t);return e.isValid()}if(arguments[0]instanceof g){var n=arguments[0];return!r.isNaN(n.x)&&(!r.isInfinite(n.x)&&(!r.isNaN(n.y)&&!r.isInfinite(n.y)))}},e(Xr.prototype,{isIncluded:function(){return this._isIncluded},getCoordinates:function(){if(null===this.ringPts){for(var t=new N,e=this.deList.iterator();e.hasNext();){var n=e.next(),i=n.getEdge();Xr.addEdge(i.getLine().getCoordinates(),n.getEdgeDirection(),t)}this.ringPts=t.toCoordinateArray()}return this.ringPts},isIncludedSet:function(){return this._isIncludedSet},isValid:function(){return this.getCoordinates(),!(this.ringPts.length<=3)&&(this.getRing(),Ur.isValid(this.ring))},build:function(t){var e=t;do this.add(e),e.setRing(this),e=e.getNext(),f.isTrue(null!==e,\"found null DE in ring\"),f.isTrue(e===t||!e.isInRing(),\"found DE already in ring\");while(e!==t)},isOuterHole:function(){return!!this._isHole&&!this.hasShell()},getPolygon:function(){var t=null;if(null!==this.holes){t=new Array(this.holes.size()).fill(null);for(var e=0;e<this.holes.size();e++)t[e]=this.holes.get(e)}var n=this.factory.createPolygon(this.ring,t);return n},isHole:function(){return this._isHole},isProcessed:function(){return this._isProcessed},addHole:function(){if(arguments[0]instanceof bt){var t=arguments[0];null===this.holes&&(this.holes=new I),this.holes.add(t)}else if(arguments[0]instanceof Xr){var e=arguments[0];e.setShell(this);var n=e.getRing();null===this.holes&&(this.holes=new I),this.holes.add(n)}},setIncluded:function(t){this._isIncluded=t,this._isIncludedSet=!0},getOuterHole:function(){if(this.isHole())return null;for(var t=0;t<this.deList.size();t++){var e=this.deList.get(t),n=e.getSym().getRing();if(n.isOuterHole())return n}return null},computeHole:function(){var t=this.getRing();this._isHole=he.isCCW(t.getCoordinates())},hasShell:function(){return null!==this.shell},isOuterShell:function(){return null!==this.getOuterHole()},getLineString:function(){return this.getCoordinates(),this.factory.createLineString(this.ringPts)},toString:function(){return se.toLineString(new Gt(this.getCoordinates()))},getShell:function(){return this.isHole()?this.shell:this},add:function(t){this.deList.add(t)},getRing:function(){if(null!==this.ring)return this.ring;this.getCoordinates(),this.ringPts.length<3&&A.out.println(this.ringPts);try{this.ring=this.factory.createLinearRing(this.ringPts)}catch(t){if(!(t instanceof S))throw t;A.out.println(this.ringPts)}finally{}return this.ring},updateIncluded:function(){if(this.isHole())return null;for(var t=0;t<this.deList.size();t++){var e=this.deList.get(t),n=e.getSym().getRing().getShell();if(null!==n&&n.isIncludedSet())return this.setIncluded(!n.isIncluded()),null}},setShell:function(t){this.shell=t},setProcessed:function(t){this._isProcessed=t},interfaces_:function(){return[]},getClass:function(){return Xr}}),Xr.findDirEdgesInRing=function(t){var e=t,n=new I;do n.add(e),e=e.getNext(),f.isTrue(null!==e,\"found null DE in ring\"),f.isTrue(e===t||!e.isInRing(),\"found DE already in ring\");while(e!==t);return n},Xr.addEdge=function(t,e,n){if(e)for(var i=0;i<t.length;i++)n.add(t[i],!1);else for(var i=t.length-1;i>=0;i--)n.add(t[i],!1)},Xr.findEdgeRingContaining=function(t,e){for(var n=t.getRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),s=null,o=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getRing(),h=l.getEnvelopeInternal();if(!h.equals(i)&&h.contains(i)){r=H.ptNotInList(n.getCoordinates(),l.getCoordinates());var c=!1;he.isPointInRing(r,l.getCoordinates())&&(c=!0),c&&(null===s||o.contains(h))&&(s=u,o=s.getRing().getEnvelopeInternal())}}return s},e(Hr.prototype,{compare:function(t,e){var n=t,i=e;return n.getRing().getEnvelope().compareTo(i.getRing().getEnvelope())},interfaces_:function(){return[a]},getClass:function(){return Hr}}),Xr.EnvelopeComparator=Hr,h(Wr,Pr),e(Wr.prototype,{findEdgeRing:function(t){var e=new Xr(this.factory);return e.build(t),e},computeDepthParity:function(){if(0===arguments.length)for(;;){var t=null;if(null===t)return null;this.computeDepthParity(t)}else if(1===arguments.length){arguments[0]}},computeNextCWEdges:function(){for(var t=this.nodeIterator();t.hasNext();){var e=t.next();Wr.computeNextCWEdges(e)}},addEdge:function(t){if(t.isEmpty())return null;var e=H.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return null;var n=e[0],i=e[e.length-1],r=this.getNode(n),s=this.getNode(i),o=new _r(r,s,e[1],(!0)),a=new _r(s,r,e[e.length-2],(!1)),u=new Mr(t);u.setDirectedEdges(o,a),this.add(u)},deleteCutEdges:function(){this.computeNextCWEdges(),Wr.findLabeledEdgeRings(this.dirEdges);for(var t=new I,e=this.dirEdges.iterator();e.hasNext();){var n=e.next();if(!n.isMarked()){var i=n.getSym();if(n.getLabel()===i.getLabel()){n.setMarked(!0),i.setMarked(!0);var r=n.getEdge();t.add(r.getLine())}}}return t},getEdgeRings:function(){this.computeNextCWEdges(),Wr.label(this.dirEdges,-1);var t=Wr.findLabeledEdgeRings(this.dirEdges);this.convertMaximalToMinimalEdgeRings(t);for(var e=new I,n=this.dirEdges.iterator();n.hasNext();){var i=n.next();if(!i.isMarked()&&!i.isInRing()){var r=this.findEdgeRing(i);e.add(r)}}return e},getNode:function(t){var e=this.findNode(t);return null===e&&(e=new Lr(t),this.add(e)),e},convertMaximalToMinimalEdgeRings:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel(),r=Wr.findIntersectionNodes(n,i);if(null!==r)for(var s=r.iterator();s.hasNext();){var o=s.next();Wr.computeNextCCWEdges(o,i)}}},deleteDangles:function(){for(var t=this.findNodesOfDegree(1),e=new J,n=new pe,i=t.iterator();i.hasNext();)n.push(i.next());for(;!n.isEmpty();){var r=n.pop();Wr.deleteAllEdges(r);for(var s=r.getOutEdges().getEdges(),i=s.iterator();i.hasNext();){var o=i.next();o.setMarked(!0);var a=o.getSym();null!==a&&a.setMarked(!0);var u=o.getEdge();e.add(u.getLine());var l=o.getToNode();1===Wr.getDegreeNonDeleted(l)&&n.push(l)}}return e},interfaces_:function(){return[]},getClass:function(){return Wr}}),Wr.findLabeledEdgeRings=function(t){for(var e=new I,n=1,i=t.iterator();i.hasNext();){var r=i.next();if(!(r.isMarked()||r.getLabel()>=0)){e.add(r);var s=Xr.findDirEdgesInRing(r);Wr.label(s,n),n++}}return e},Wr.getDegreeNonDeleted=function(t){for(var e=t.getOutEdges().getEdges(),n=0,i=e.iterator();i.hasNext();){var r=i.next();r.isMarked()||n++}return n},Wr.deleteAllEdges=function(t){for(var e=t.getOutEdges().getEdges(),n=e.iterator();n.hasNext();){var i=n.next();i.setMarked(!0);var r=i.getSym();null!==r&&r.setMarked(!0)}},Wr.label=function(t,e){for(var n=t.iterator();n.hasNext();){var i=n.next();i.setLabel(e)}},Wr.computeNextCWEdges=function(t){for(var e=t.getOutEdges(),n=null,i=null,r=e.getEdges().iterator();r.hasNext();){var s=r.next();if(!s.isMarked()){if(null===n&&(n=s),null!==i){var o=i.getSym();o.setNext(s)}i=s}}if(null!==i){var o=i.getSym();o.setNext(n)}},Wr.computeNextCCWEdges=function(t,e){for(var n=t.getOutEdges(),i=null,r=null,s=n.getEdges(),o=s.size()-1;o>=0;o--){var a=s.get(o),u=a.getSym(),l=null;a.getLabel()===e&&(l=a);var h=null;u.getLabel()===e&&(h=u),null===l&&null===h||(null!==h&&(r=h),null!==l&&(null!==r&&(r.setNext(l),r=null),null===i&&(i=l)))}null!==r&&(f.isTrue(null!==i),r.setNext(i))},Wr.getDegree=function(t,e){for(var n=t.getOutEdges().getEdges(),i=0,r=n.iterator();r.hasNext();){var s=r.next();s.getLabel()===e&&i++}return i},Wr.findIntersectionNodes=function(t,e){var n=t,i=null;do{var r=n.getFromNode();Wr.getDegree(r,e)>1&&(null===i&&(i=new I),i.add(r)),n=n.getNext(),f.isTrue(null!==n,\"found null DE in ring\"),f.isTrue(n===t||!n.isInRing(),\"found DE already in ring\")}while(n!==t);return i},e(jr.prototype,{getGeometry:function(){return null===this.geomFactory&&(this.geomFactory=new ie),this.polygonize(),this.extractOnlyPolygonal?this.geomFactory.buildGeometry(this.polyList):this.geomFactory.createGeometryCollection(ie.toGeometryArray(this.polyList))},getInvalidRingLines:function(){return this.polygonize(),this.invalidRingLines},findValidRings:function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isValid()?e.add(r):n.add(r.getLineString())}},polygonize:function(){if(null!==this.polyList)return null;\nif(this.polyList=new I,null===this.graph)return null;this.dangles=this.graph.deleteDangles(),this.cutEdges=this.graph.deleteCutEdges();var t=this.graph.getEdgeRings(),e=new I;this.invalidRingLines=new I,this.isCheckingRingsValid?this.findValidRings(t,e,this.invalidRingLines):e=t,this.findShellsAndHoles(e),jr.assignHolesToShells(this.holeList,this.shellList),ho.sort(this.shellList,new Xr.EnvelopeComparator);var n=!0;this.extractOnlyPolygonal&&(jr.findDisjointShells(this.shellList),n=!1),this.polyList=jr.extractPolygons(this.shellList,n)},getDangles:function(){return this.polygonize(),this.dangles},getCutEdges:function(){return this.polygonize(),this.cutEdges},getPolygons:function(){return this.polygonize(),this.polyList},add:function(){if(R(arguments[0],v))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.add(n)}else if(arguments[0]instanceof St){var i=arguments[0];this.geomFactory=i.getFactory(),null===this.graph&&(this.graph=new Wr(this.geomFactory)),this.graph.addEdge(i)}else if(arguments[0]instanceof B){var r=arguments[0];r.apply(this.lineStringAdder)}},setCheckRingsValid:function(t){this.isCheckingRingsValid=t},findShellsAndHoles:function(t){this.holeList=new I,this.shellList=new I;for(var e=t.iterator();e.hasNext();){var n=e.next();n.computeHole(),n.isHole()?this.holeList.add(n):this.shellList.add(n)}},interfaces_:function(){return[]},getClass:function(){return jr}}),jr.findOuterShells=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getOuterHole();null===i||i.isProcessed()||(n.setIncluded(!0),i.setProcessed(!0))}},jr.extractPolygons=function(t,e){for(var n=new I,i=t.iterator();i.hasNext();){var r=i.next();(e||r.isIncluded())&&n.add(r.getPolygon())}return n},jr.assignHolesToShells=function(t,e){for(var n=t.iterator();n.hasNext();){var i=n.next();jr.assignHoleToShell(i,e)}},jr.assignHoleToShell=function(t,e){var n=Xr.findEdgeRingContaining(t,e);null!==n&&n.addHole(t)},jr.findDisjointShells=function(t){jr.findOuterShells(t);var e=null;do{e=!1;for(var n=t.iterator();n.hasNext();){var i=n.next();i.isIncludedSet()||(i.updateIncluded(),i.isIncludedSet()||(e=!0))}}while(e)},e(Kr.prototype,{filter:function(t){t instanceof St&&this.p.add(t)},interfaces_:function(){return[q]},getClass:function(){return Kr}}),jr.LineStringAdder=Kr;var To=Object.freeze({Polygonizer:jr});e(Zr.prototype,{insertEdgeEnds:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.nodes.add(n)}},computeProperIntersectionIM:function(t,e){var n=this.arg[0].getGeometry().getDimension(),i=this.arg[1].getGeometry().getDimension(),r=t.hasProperIntersection(),s=t.hasProperInteriorIntersection();2===n&&2===i?r&&e.setAtLeast(\"212101212\"):2===n&&1===i?(r&&e.setAtLeast(\"FFF0FFFF2\"),s&&e.setAtLeast(\"1FFFFF1FF\")):1===n&&2===i?(r&&e.setAtLeast(\"F0FFFFFF2\"),s&&e.setAtLeast(\"1F1FFFFFF\")):1===n&&1===i&&s&&e.setAtLeast(\"0FFFFFFFF\")},labelIsolatedEdges:function(t,e){for(var n=this.arg[t].getEdgeIterator();n.hasNext();){var i=n.next();i.isIsolated()&&(this.labelIsolatedEdge(i,e,this.arg[e].getGeometry()),this.isolatedEdges.add(i))}},labelIsolatedEdge:function(t,e,n){if(n.getDimension()>0){var i=this.ptLocator.locate(t.getCoordinate(),n);t.getLabel().setAllLocations(e,i)}else t.getLabel().setAllLocations(e,L.EXTERIOR)},computeIM:function(){var t=new fe;if(t.set(L.EXTERIOR,L.EXTERIOR,2),!this.arg[0].getGeometry().getEnvelopeInternal().intersects(this.arg[1].getGeometry().getEnvelopeInternal()))return this.computeDisjointIM(t),t;this.arg[0].computeSelfNodes(this.li,!1),this.arg[1].computeSelfNodes(this.li,!1);var e=this.arg[0].computeEdgeIntersections(this.arg[1],this.li,!1);this.computeIntersectionNodes(0),this.computeIntersectionNodes(1),this.copyNodesAndLabels(0),this.copyNodesAndLabels(1),this.labelIsolatedNodes(),this.computeProperIntersectionIM(e,t);var n=new Ar,i=n.computeEdgeEnds(this.arg[0].getEdgeIterator());this.insertEdgeEnds(i);var r=n.computeEdgeEnds(this.arg[1].getEdgeIterator());return this.insertEdgeEnds(r),this.labelNodeEdges(),this.labelIsolatedEdges(0,1),this.labelIsolatedEdges(1,0),this.updateIM(t),t},labelNodeEdges:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next();e.getEdges().computeLabelling(this.arg)}},copyNodesAndLabels:function(t){for(var e=this.arg[t].getNodeIterator();e.hasNext();){var n=e.next(),i=this.nodes.addNode(n.getCoordinate());i.setLabel(t,n.getLabel().getLocation(t))}},labelIntersectionNodes:function(t){for(var e=this.arg[t].getEdgeIterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.getEdgeIntersectionList().iterator();r.hasNext();){var s=r.next(),o=this.nodes.find(s.coord);o.getLabel().isNull(t)&&(i===L.BOUNDARY?o.setLabelBoundary(t):o.setLabel(t,L.INTERIOR))}},labelIsolatedNode:function(t,e){var n=this.ptLocator.locate(t.getCoordinate(),this.arg[e].getGeometry());t.getLabel().setAllLocations(e,n)},computeIntersectionNodes:function(t){for(var e=this.arg[t].getEdgeIterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.getEdgeIntersectionList().iterator();r.hasNext();){var s=r.next(),o=this.nodes.addNode(s.coord);i===L.BOUNDARY?o.setLabelBoundary(t):o.getLabel().isNull(t)&&o.setLabel(t,L.INTERIOR)}},labelIsolatedNodes:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next(),n=e.getLabel();f.isTrue(n.getGeometryCount()>0,\"node with empty label found\"),e.isIsolated()&&(n.isNull(0)?this.labelIsolatedNode(e,0):this.labelIsolatedNode(e,1))}},updateIM:function(t){for(var e=this.isolatedEdges.iterator();e.hasNext();){var n=e.next();n.updateIM(t)}for(var i=this.nodes.iterator();i.hasNext();){var r=i.next();r.updateIM(t),r.updateIMFromEdges(t)}},computeDisjointIM:function(t){var e=this.arg[0].getGeometry();e.isEmpty()||(t.set(L.INTERIOR,L.EXTERIOR,e.getDimension()),t.set(L.BOUNDARY,L.EXTERIOR,e.getBoundaryDimension()));var n=this.arg[1].getGeometry();n.isEmpty()||(t.set(L.EXTERIOR,L.INTERIOR,n.getDimension()),t.set(L.EXTERIOR,L.BOUNDARY,n.getBoundaryDimension()))},interfaces_:function(){return[]},getClass:function(){return Zr}}),e(Qr.prototype,{isContainedInBoundary:function(t){if(t instanceof Tt)return!1;if(t instanceof Lt)return this.isPointContainedInBoundary(t);if(t instanceof St)return this.isLineStringContainedInBoundary(t);for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);if(!this.isContainedInBoundary(n))return!1}return!0},isLineSegmentContainedInBoundary:function(t,e){if(t.equals(e))return this.isPointContainedInBoundary(t);if(t.x===e.x){if(t.x===this.rectEnv.getMinX()||t.x===this.rectEnv.getMaxX())return!0}else if(t.y===e.y&&(t.y===this.rectEnv.getMinY()||t.y===this.rectEnv.getMaxY()))return!0;return!1},isLineStringContainedInBoundary:function(t){for(var e=t.getCoordinateSequence(),n=new g,i=new g,r=0;r<e.size()-1;r++)if(e.getCoordinate(r,n),e.getCoordinate(r+1,i),!this.isLineSegmentContainedInBoundary(n,i))return!1;return!0},isPointContainedInBoundary:function(){if(arguments[0]instanceof Lt){var t=arguments[0];return this.isPointContainedInBoundary(t.getCoordinate())}if(arguments[0]instanceof g){var e=arguments[0];return e.x===this.rectEnv.getMinX()||e.x===this.rectEnv.getMaxX()||e.y===this.rectEnv.getMinY()||e.y===this.rectEnv.getMaxY()}},contains:function(t){return!!this.rectEnv.contains(t.getEnvelopeInternal())&&!this.isContainedInBoundary(t)},interfaces_:function(){return[]},getClass:function(){return Qr}}),Qr.contains=function(t,e){var n=new Qr(t);return n.contains(e)},e(Jr.prototype,{intersects:function(t,e){var n=new C(t,e);if(!this.rectEnv.intersects(n))return!1;if(this.rectEnv.intersects(t))return!0;if(this.rectEnv.intersects(e))return!0;if(t.compareTo(e)>0){var i=t;t=e,e=i}var r=!1;return e.y>t.y&&(r=!0),r?this.li.computeIntersection(t,e,this.diagDown0,this.diagDown1):this.li.computeIntersection(t,e,this.diagUp0,this.diagUp1),!!this.li.hasIntersection()},interfaces_:function(){return[]},getClass:function(){return Jr}}),e($r.prototype,{applyTo:function(t){for(var e=0;e<t.getNumGeometries()&&!this._isDone;e++){var n=t.getGeometryN(e);if(n instanceof ft)this.applyTo(n);else if(this.visit(n),this.isDone())return this._isDone=!0,null}},interfaces_:function(){return[]},getClass:function(){return $r}}),e(ts.prototype,{intersects:function(t){if(!this.rectEnv.intersects(t.getEnvelopeInternal()))return!1;var e=new es(this.rectEnv);if(e.applyTo(t),e.intersects())return!0;var n=new ns(this.rectangle);if(n.applyTo(t),n.containsPoint())return!0;var i=new is(this.rectangle);return i.applyTo(t),!!i.intersects()},interfaces_:function(){return[]},getClass:function(){return ts}}),ts.intersects=function(t,e){var n=new ts(t);return n.intersects(e)},h(es,$r),e(es.prototype,{isDone:function(){return this._intersects===!0},visit:function(t){var e=t.getEnvelopeInternal();return this.rectEnv.intersects(e)?this.rectEnv.contains(e)?(this._intersects=!0,null):e.getMinX()>=this.rectEnv.getMinX()&&e.getMaxX()<=this.rectEnv.getMaxX()?(this._intersects=!0,null):e.getMinY()>=this.rectEnv.getMinY()&&e.getMaxY()<=this.rectEnv.getMaxY()?(this._intersects=!0,null):void 0:null},intersects:function(){return this._intersects},interfaces_:function(){return[]},getClass:function(){return es}}),h(ns,$r),e(ns.prototype,{isDone:function(){return this._containsPoint===!0},visit:function(t){if(!(t instanceof Tt))return null;var e=t.getEnvelopeInternal();if(!this.rectEnv.intersects(e))return null;for(var n=new g,i=0;i<4;i++)if(this.rectSeq.getCoordinate(i,n),e.contains(n)&&Tn.containsPointInPolygon(n,t))return this._containsPoint=!0,null},containsPoint:function(){return this._containsPoint},interfaces_:function(){return[]},getClass:function(){return ns}}),h(is,$r),e(is.prototype,{intersects:function(){return this.hasIntersection},isDone:function(){return this.hasIntersection===!0},visit:function(t){var e=t.getEnvelopeInternal();if(!this.rectEnv.intersects(e))return null;var n=kn.getLines(t);this.checkIntersectionWithLineStrings(n)},checkIntersectionWithLineStrings:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();if(this.checkIntersectionWithSegments(n),this.hasIntersection)return null}},checkIntersectionWithSegments:function(t){for(var e=t.getCoordinateSequence(),n=1;n<e.size();n++)if(e.getCoordinate(n-1,this.p0),e.getCoordinate(n,this.p1),this.rectIntersector.intersects(this.p0,this.p1))return this.hasIntersection=!0,null},interfaces_:function(){return[]},getClass:function(){return is}}),h(rs,ti),e(rs.prototype,{getIntersectionMatrix:function(){return this._relate.computeIM()},interfaces_:function(){return[]},getClass:function(){return rs}}),rs.covers=function(t,e){return!!t.getEnvelopeInternal().covers(e.getEnvelopeInternal())&&(!!t.isRectangle()||rs.relate(t,e).isCovers())},rs.intersects=function(t,e){return!!t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())&&(t.isRectangle()?ts.intersects(t,e):e.isRectangle()?ts.intersects(e,t):rs.relate(t,e).isIntersects())},rs.touches=function(t,e){return!!t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())&&rs.relate(t,e).isTouches(t.getDimension(),e.getDimension())},rs.within=function(t,e){return e.contains(t)},rs.coveredBy=function(t,e){return rs.covers(e,t)},rs.relate=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new rs(t,e),i=n.getIntersectionMatrix();return i}if(3===arguments.length){if(\"string\"==typeof arguments[2]&&arguments[0]instanceof B&&arguments[1]instanceof B){var r=arguments[0],s=arguments[1],o=arguments[2];return rs.relateWithCheck(r,s).matches(o)}if(R(arguments[2],V)&&arguments[0]instanceof B&&arguments[1]instanceof B){var a=arguments[0],u=arguments[1],l=arguments[2],n=new rs(a,u,l),i=n.getIntersectionMatrix();return i}}},rs.overlaps=function(t,e){return!!t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())&&rs.relate(t,e).isOverlaps(t.getDimension(),e.getDimension())},rs.disjoint=function(t,e){return!t.intersects(e)},rs.relateWithCheck=function(t,e){return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),rs.relate(t,e)},rs.crosses=function(t,e){return!!t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())&&rs.relate(t,e).isCrosses(t.getDimension(),e.getDimension())},rs.contains=function(t,e){return!!t.getEnvelopeInternal().contains(e.getEnvelopeInternal())&&(t.isRectangle()?Qr.contains(t,e):rs.relate(t,e).isContains())};var Po=Object.freeze({RelateOp:rs});e(ss.prototype,{extractElements:function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);this.skipEmpty&&i.isEmpty()||e.add(i)}},combine:function(){for(var t=new I,e=this.inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this.geomFactory?this.geomFactory.createGeometryCollection(null):null:this.geomFactory.buildGeometry(t)},interfaces_:function(){return[]},getClass:function(){return ss}}),ss.combine=function(){if(1===arguments.length){var t=arguments[0],e=new ss(t);return e.combine()}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=new ss(ss.createList(n,i));return e.combine()}if(3===arguments.length){var r=arguments[0],s=arguments[1],o=arguments[2],e=new ss(ss.createList(r,s,o));return e.combine()}},ss.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},ss.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new I;return n.add(t),n.add(e),n}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],n=new I;return n.add(i),n.add(r),n.add(s),n}},e(os.prototype,{union:function(){for(var t=new Te,e=new at,n=0;n<this.pointGeom.getNumGeometries();n++){var i=this.pointGeom.getGeometryN(n),r=i.getCoordinate(),s=t.locate(r,this.otherGeom);s===L.EXTERIOR&&e.add(r)}if(0===e.size())return this.otherGeom;var o=null,a=H.toCoordinateArray(e);return o=1===a.length?this.geomFact.createPoint(a[0]):this.geomFact.createMultiPointFromCoords(a),ss.combine(o,this.otherGeom)},interfaces_:function(){return[]},getClass:function(){return os}}),os.union=function(t,e){var n=new os(t,e);return n.union()},e(as.prototype,{filter:function(t){this.sortIndex!==-1&&t.getSortIndex()!==this.sortIndex||this.comps.add(t)},interfaces_:function(){return[ht]},getClass:function(){return as}}),as.extract=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return as.extract(t,e,new I)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];return n.getSortIndex()===i?r.add(n):n instanceof ft&&n.apply(new as(i,r)),r}},e(us.prototype,{reduceToGeometries:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next(),r=null;R(i,y)?r=this.unionTree(i):i instanceof B&&(r=i),e.add(r)}return e},extractByEnvelope:function(t,e,n){for(var i=new I,r=0;r<e.getNumGeometries();r++){var s=e.getGeometryN(r);s.getEnvelopeInternal().intersects(t)?i.add(s):n.add(s)}return this.geomFactory.buildGeometry(i)},unionOptimized:function(t,e){var n=t.getEnvelopeInternal(),i=e.getEnvelopeInternal();if(!n.intersects(i)){var r=ss.combine(t,e);return r}if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var s=n.intersection(i);return this.unionUsingEnvelopeIntersection(t,e,s)},union:function(){if(null===this.inputPolys)throw new IllegalStateException(\"union() method cannot be called twice\");if(this.inputPolys.isEmpty())return null;this.geomFactory=this.inputPolys.iterator().next().getFactory();for(var t=new ke(us.STRTREE_NODE_CAPACITY),e=this.inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this.inputPolys=null;var i=t.itemsTree(),r=this.unionTree(i);return r},binaryUnion:function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];if(i-n<=1){var r=us.getGeometry(e,n);return this.unionSafe(r,null)}if(i-n===2)return this.unionSafe(us.getGeometry(e,n),us.getGeometry(e,n+1));var s=Math.trunc((i+n)/2),r=this.binaryUnion(e,n,s),o=this.binaryUnion(e,s,i);return this.unionSafe(r,o)}},repeatedUnion:function(t){for(var e=null,n=t.iterator();n.hasNext();){var i=n.next();e=null===e?i.copy():e.union(i)}return e},unionSafe:function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},unionActual:function(t,e){return us.restrictToPolygons(t.union(e))},unionTree:function(t){var e=this.reduceToGeometries(t),n=this.binaryUnion(e);return n},unionUsingEnvelopeIntersection:function(t,e,n){var i=new I,r=this.extractByEnvelope(n,t,i),s=this.extractByEnvelope(n,e,i),o=this.unionActual(r,s);i.add(o);var a=ss.combine(i);return a},bufferUnion:function(){if(1===arguments.length){var t=arguments[0],e=t.get(0).getFactory(),n=e.buildGeometry(t),i=n.buffer(0);return i}if(2===arguments.length){var r=arguments[0],s=arguments[1],e=r.getFactory(),n=e.createGeometryCollection([r,s]),i=n.buffer(0);return i}},interfaces_:function(){return[]},getClass:function(){return us}}),us.restrictToPolygons=function(t){if(R(t,Rt))return t;var e=pr.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(ie.toPolygonArray(e))},us.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},us.union=function(t){var e=new us(t);return e.union()},us.STRTREE_NODE_CAPACITY=4,e(ls.prototype,{unionNoOpt:function(t){var e=this.geomFact.createPoint();return si.overlayOp(t,e,ii.UNION)},unionWithNull:function(t,e){return null===t&&null===e?null:null===e?t:null===t?e:t.union(e)},extract:function(){if(R(arguments[0],v))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.extract(n)}else if(arguments[0]instanceof B){var i=arguments[0];null===this.geomFact&&(this.geomFact=i.getFactory()),as.extract(i,B.SORTINDEX_POLYGON,this.polygons),as.extract(i,B.SORTINDEX_LINESTRING,this.lines),as.extract(i,B.SORTINDEX_POINT,this.points)}},union:function t(){if(null===this.geomFact)return null;var e=null;if(this.points.size()>0){var n=this.geomFact.buildGeometry(this.points);e=this.unionNoOpt(n)}var i=null;if(this.lines.size()>0){var r=this.geomFact.buildGeometry(this.lines);i=this.unionNoOpt(r)}var s=null;this.polygons.size()>0&&(s=us.union(this.polygons));var o=this.unionWithNull(i,s),t=null;return t=null===e?o:null===o?e:os.union(e,o),null===t?this.geomFact.createGeometryCollection():t},interfaces_:function(){return[]},getClass:function(){return ls}}),ls.union=function(){if(1===arguments.length){if(R(arguments[0],v)){var t=arguments[0],e=new ls(t);return e.union()}if(arguments[0]instanceof B){var n=arguments[0],e=new ls(n);return e.union()}}else if(2===arguments.length){var i=arguments[0],r=arguments[1],e=new ls(i,r);return e.union()}};var bo=Object.freeze({UnaryUnionOp:ls}),Oo=Object.freeze({IsValidOp:Ur,ConsistentAreaTester:Vr}),_o=Object.freeze({BoundaryOp:dt,IsSimpleOp:Wi,buffer:So,distance:wo,linemerge:Lo,overlay:Ro,polygonize:To,relate:Po,union:bo,valid:Oo});h(hs,_t.CoordinateOperation),e(hs.prototype,{editCoordinates:function(t,e){if(0===t.length)return null;for(var n=new Array(t.length).fill(null),i=0;i<t.length;i++){var r=new g(t[i]);this.targetPM.makePrecise(r),n[i]=r}var s=new N(n,(!1)),o=s.toCoordinateArray(),a=0;e instanceof St&&(a=2),e instanceof bt&&(a=4);var u=n;return this.removeCollapsed&&(u=null),o.length<a?u:o},interfaces_:function(){return[]},getClass:function(){return hs}}),e(cs.prototype,{fixPolygonalTopology:function(t){var e=t;this.changePrecisionModel||(e=this.changePM(t,this.targetPM));var n=e.buffer(0),i=n;return this.changePrecisionModel||(i=this.changePM(n,t.getPrecisionModel())),i},reducePointwise:function(t){var e=null;if(this.changePrecisionModel){var n=this.createFactory(t.getFactory(),this.targetPM);e=new _t(n)}else e=new _t;var i=this.removeCollapsed;t.getDimension()>=2&&(i=!0);var r=e.edit(t,new hs(this.targetPM,i));return r},changePM:function(t,e){var n=this.createEditor(t.getFactory(),e);return n.edit(t,new _t.NoOpGeometryOperation)},setRemoveCollapsedComponents:function(t){this.removeCollapsed=t},createFactory:function(t,e){var n=new ie(e,t.getSRID(),t.getCoordinateSequenceFactory());return n},setChangePrecisionModel:function(t){this.changePrecisionModel=t},reduce:function(t){var e=this.reducePointwise(t);return this.isPointwise?e:R(e,Rt)?e.isValid()?e:this.fixPolygonalTopology(e):e},setPointwise:function(t){this.isPointwise=t},createEditor:function(t,e){if(t.getPrecisionModel()===e)return new _t;var n=this.createFactory(t,e),i=new _t(n);return i},interfaces_:function(){return[]},getClass:function(){return cs}}),cs.reduce=function(t,e){var n=new cs(e);return n.reduce(t)},cs.reducePointwise=function(t,e){var n=new cs(e);return n.setPointwise(!0),n.reduce(t)};var Mo=Object.freeze({GeometryPrecisionReducer:cs});e(fs.prototype,{simplifySection:function(t,e){if(t+1===e)return null;this.seg.p0=this.pts[t],this.seg.p1=this.pts[e];for(var n=-1,i=t,r=t+1;r<e;r++){var s=this.seg.distance(this.pts[r]);s>n&&(n=s,i=r)}if(n<=this.distanceTolerance)for(var r=t+1;r<e;r++)this.usePt[r]=!1;else this.simplifySection(t,i),this.simplifySection(i,e)},setDistanceTolerance:function(t){this.distanceTolerance=t},simplify:function(){this.usePt=new Array(this.pts.length).fill(null);for(var t=0;t<this.pts.length;t++)this.usePt[t]=!0;this.simplifySection(0,this.pts.length-1);for(var e=new N,t=0;t<this.pts.length;t++)this.usePt[t]&&e.add(new g(this.pts[t]));return e.toCoordinateArray()},interfaces_:function(){return[]},getClass:function(){return fs}}),fs.simplify=function(t,e){var n=new fs(t);return n.setDistanceTolerance(e),n.simplify()},e(gs.prototype,{setEnsureValid:function(t){this.isEnsureValidTopology=t},getResultGeometry:function(){return this.inputGeom.isEmpty()?this.inputGeom.copy():new ds(this.isEnsureValidTopology,this.distanceTolerance).transform(this.inputGeom)},setDistanceTolerance:function(t){if(t<0)throw new i(\"Tolerance must be non-negative\");this.distanceTolerance=t},interfaces_:function(){return[]},getClass:function(){return gs}}),gs.simplify=function(t,e){var n=new gs(t);return n.setDistanceTolerance(e),n.getResultGeometry()},h(ds,xe),e(ds.prototype,{transformPolygon:function(t,e){if(t.isEmpty())return null;var n=xe.prototype.transformPolygon.call(this,t,e);return e instanceof Ot?n:this.createValidArea(n)},createValidArea:function(t){return this.isEnsureValidTopology?t.buffer(0):t},transformCoordinates:function(t,e){var n=t.toCoordinateArray(),i=null;return i=0===n.length?new Array(0).fill(null):fs.simplify(n,this.distanceTolerance),this.factory.getCoordinateSequenceFactory().create(i)},transformMultiPolygon:function(t,e){var n=xe.prototype.transformMultiPolygon.call(this,t,e);return this.createValidArea(n)},transformLinearRing:function(t,e){var n=e instanceof Tt,i=xe.prototype.transformLinearRing.call(this,t,e);return!n||i instanceof bt?i:null},interfaces_:function(){return[]},getClass:function(){return ds}}),gs.DPTransformer=ds,h(ps,ce),e(ps.prototype,{getIndex:function(){return this.index},getParent:function(){return this.parent},interfaces_:function(){return[]},getClass:function(){return ps}}),e(vs.prototype,{addToResult:function(t){this.resultSegs.add(t)},asLineString:function(){return this.parentLine.getFactory().createLineString(vs.extractCoordinates(this.resultSegs))},getResultSize:function(){var t=this.resultSegs.size();return 0===t?0:t+1},getParent:function(){return this.parentLine},getSegment:function(t){return this.segs[t]},getParentCoordinates:function(){return this.parentLine.getCoordinates()},getMinimumSize:function(){return this.minimumSize},asLinearRing:function(){return this.parentLine.getFactory().createLinearRing(vs.extractCoordinates(this.resultSegs))},getSegments:function(){return this.segs},init:function(){var t=this.parentLine.getCoordinates();this.segs=new Array(t.length-1).fill(null);for(var e=0;e<t.length-1;e++){var n=new ps(t[e],t[e+1],this.parentLine,e);this.segs[e]=n}},getResultCoordinates:function(){return vs.extractCoordinates(this.resultSegs)},interfaces_:function(){return[]},getClass:function(){return vs}}),vs.extractCoordinates=function(t){for(var e=new Array(t.size()+1).fill(null),n=null,i=0;i<t.size();i++)n=t.get(i),e[i]=n.p0;return e[e.length-1]=n.p1,e},e(ms.prototype,{remove:function(t){this.index.remove(new C(t.p0,t.p1),t)},add:function(){if(arguments[0]instanceof vs)for(var t=arguments[0],e=t.getSegments(),n=0;n<e.length;n++){var i=e[n];this.add(i)}else if(arguments[0]instanceof ce){var r=arguments[0];this.index.insert(new C(r.p0,r.p1),r)}},query:function(t){var e=new C(t.p0,t.p1),n=new ys(t);this.index.query(e,n);var i=n.getItems();return i},interfaces_:function(){return[]},getClass:function(){return ms}}),e(ys.prototype,{visitItem:function(t){var e=t;C.intersects(e.p0,e.p1,this.querySeg.p0,this.querySeg.p1)&&this.items.add(t)},getItems:function(){return this.items},interfaces_:function(){return[Ae]},getClass:function(){return ys}}),e(xs.prototype,{flatten:function(t,e){var n=this.linePts[t],i=this.linePts[e],r=new ce(n,i);return this.remove(this.line,t,e),this.outputIndex.add(r),r},hasBadIntersection:function(t,e,n){return!!this.hasBadOutputIntersection(n)||!!this.hasBadInputIntersection(t,e,n)},setDistanceTolerance:function(t){this.distanceTolerance=t},simplifySection:function(t,e,n){n+=1;var i=new Array(2).fill(null);if(t+1===e){var r=this.line.getSegment(t);return this.line.addToResult(r),null}var s=!0;if(this.line.getResultSize()<this.line.getMinimumSize()){var o=n+1;o<this.line.getMinimumSize()&&(s=!1)}var a=new Array(1).fill(null),u=this.findFurthestPoint(this.linePts,t,e,a);a[0]>this.distanceTolerance&&(s=!1);var l=new ce;if(l.p0=this.linePts[t],l.p1=this.linePts[e],i[0]=t,i[1]=e,this.hasBadIntersection(this.line,i,l)&&(s=!1),s){var r=this.flatten(t,e);return this.line.addToResult(r),null}this.simplifySection(t,u,n),this.simplifySection(u,e,n)},hasBadOutputIntersection:function(t){for(var e=this.outputIndex.query(t),n=e.iterator();n.hasNext();){var i=n.next();if(this.hasInteriorIntersection(i,t))return!0}return!1},findFurthestPoint:function(t,e,n,i){var r=new ce;r.p0=t[e],r.p1=t[n];for(var s=-1,o=e,a=e+1;a<n;a++){var u=t[a],l=r.distance(u);l>s&&(s=l,o=a)}return i[0]=s,o},simplify:function(t){this.line=t,this.linePts=t.getParentCoordinates(),this.simplifySection(0,this.linePts.length-1,0)},remove:function(t,e,n){for(var i=e;i<n;i++){var r=t.getSegment(i);this.inputIndex.remove(r)}},hasInteriorIntersection:function(t,e){return this.li.computeIntersection(t.p0,t.p1,e.p0,e.p1),this.li.isInteriorIntersection()},hasBadInputIntersection:function(t,e,n){for(var i=this.inputIndex.query(n),r=i.iterator();r.hasNext();){var s=r.next();if(this.hasInteriorIntersection(s,n)){if(xs.isInLineSection(t,e,s))continue;return!0}}return!1},interfaces_:function(){return[]},getClass:function(){return xs}}),xs.isInLineSection=function(t,e,n){if(n.getParent()!==t.getParent())return!1;var i=n.getIndex();return i>=e[0]&&i<e[1]},e(Es.prototype,{setDistanceTolerance:function(t){this.distanceTolerance=t},simplify:function(t){for(var e=t.iterator();e.hasNext();)this.inputIndex.add(e.next());for(var e=t.iterator();e.hasNext();){var n=new xs(this.inputIndex,this.outputIndex);n.setDistanceTolerance(this.distanceTolerance),n.simplify(e.next())}},interfaces_:function(){return[]},getClass:function(){return Es}}),e(Is.prototype,{getResultGeometry:function(){if(this.inputGeom.isEmpty())return this.inputGeom.copy();this.linestringMap=new te,this.inputGeom.apply(new Cs(this)),this.lineSimplifier.simplify(this.linestringMap.values());var t=new Ns(this.linestringMap).transform(this.inputGeom);return t},setDistanceTolerance:function(t){if(t<0)throw new i(\"Tolerance must be non-negative\");this.lineSimplifier.setDistanceTolerance(t)},interfaces_:function(){return[]},getClass:function(){return Is}}),Is.simplify=function(t,e){var n=new Is(t);return n.setDistanceTolerance(e),n.getResultGeometry()},h(Ns,xe),e(Ns.prototype,{transformCoordinates:function(t,e){if(0===t.size())return null;if(e instanceof St){var n=this.linestringMap.get(e);return this.createCoordinateSequence(n.getResultCoordinates())}return xe.prototype.transformCoordinates.call(this,t,e)},interfaces_:function(){return[]},getClass:function(){return Ns}}),e(Cs.prototype,{filter:function(t){if(t instanceof St){var e=t;if(e.isEmpty())return null;var n=e.isClosed()?4:2,i=new vs(e,n);this.tps.linestringMap.put(e,i)}},interfaces_:function(){return[q]},getClass:function(){return Cs}}),Is.LineStringTransformer=Ns,Is.LineStringMapBuilderFilter=Cs;var Do=Object.freeze({DouglasPeuckerSimplifier:gs,TopologyPreservingSimplifier:Is});e(Ss.prototype,{splitAt:function(){if(1===arguments.length){var t=arguments[0],e=this.minimumLen/this.segLen;if(t.distance(this.seg.p0)<this.minimumLen)return this.splitPt=this.seg.pointAlong(e),null;if(t.distance(this.seg.p1)<this.minimumLen)return this.splitPt=Ss.pointAlongReverse(this.seg,e),null;this.splitPt=t}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=this.getConstrainedLength(n),s=r/this.segLen;i.equals2D(this.seg.p0)?this.splitPt=this.seg.pointAlong(s):this.splitPt=Ss.pointAlongReverse(this.seg,s)}},setMinimumLength:function(t){this.minimumLen=t},getConstrainedLength:function(t){return t<this.minimumLen?this.minimumLen:t},getSplitPoint:function(){return this.splitPt},interfaces_:function(){return[]},getClass:function(){return Ss}}),Ss.pointAlongReverse=function(t,e){var n=new g;return n.x=t.p1.x-e*(t.p1.x-t.p0.x),n.y=t.p1.y-e*(t.p1.y-t.p0.y),n},e(ws.prototype,{findSplitPoint:function(t,e){},interfaces_:function(){return[]},getClass:function(){return ws}}),e(Ls.prototype,{findSplitPoint:function(t,e){var n=t.getLineSegment(),i=n.getLength(),r=i/2,s=new Ss(n),o=Ls.projectedSplitPoint(t,e),a=2*o.distance(e)*.8,u=a;return u>r&&(u=r),s.setMinimumLength(u),s.splitAt(o),s.getSplitPoint()},interfaces_:function(){return[ws]},getClass:function(){return Ls}}),Ls.projectedSplitPoint=function(t,e){var n=t.getLineSegment(),i=n.project(e);return i},e(Rs.prototype,{interfaces_:function(){return[]},getClass:function(){return Rs}}),Rs.triArea=function(t,e,n){return(e.x-t.x)*(n.y-t.y)-(e.y-t.y)*(n.x-t.x)},Rs.isInCircleDDNormalized=function(t,e,n,i){var r=_.valueOf(t.x).selfSubtract(i.x),s=_.valueOf(t.y).selfSubtract(i.y),o=_.valueOf(e.x).selfSubtract(i.x),a=_.valueOf(e.y).selfSubtract(i.y),u=_.valueOf(n.x).selfSubtract(i.x),l=_.valueOf(n.y).selfSubtract(i.y),h=r.multiply(a).selfSubtract(o.multiply(s)),c=o.multiply(l).selfSubtract(u.multiply(a)),f=u.multiply(s).selfSubtract(r.multiply(l)),g=r.multiply(r).selfAdd(s.multiply(s)),d=o.multiply(o).selfAdd(a.multiply(a)),p=u.multiply(u).selfAdd(l.multiply(l)),v=g.selfMultiply(c).selfAdd(d.selfMultiply(f)).selfAdd(p.selfMultiply(h)),m=v.doubleValue()>0;return m},Rs.checkRobustInCircle=function(t,e,n,i){var r=Rs.isInCircleNonRobust(t,e,n,i),s=Rs.isInCircleDDSlow(t,e,n,i),o=Rs.isInCircleCC(t,e,n,i),a=Si.circumcentre(t,e,n);A.out.println(\"p radius diff a = \"+Math.abs(i.distance(a)-t.distance(a))/t.distance(a)),r===s&&r===o||(A.out.println(\"inCircle robustness failure (double result = \"+r+\", DD result = \"+s+\", CC result = \"+o+\")\"),A.out.println(se.toLineString(new Gt([t,e,n,i]))),A.out.println(\"Circumcentre = \"+se.toPoint(a)+\" radius = \"+t.distance(a)),A.out.println(\"p radius diff a = \"+Math.abs(i.distance(a)/t.distance(a)-1)),A.out.println(\"p radius diff b = \"+Math.abs(i.distance(a)/e.distance(a)-1)),A.out.println(\"p radius diff c = \"+Math.abs(i.distance(a)/n.distance(a)-1)),A.out.println())},Rs.isInCircleDDFast=function(t,e,n,i){var r=_.sqr(t.x).selfAdd(_.sqr(t.y)).selfMultiply(Rs.triAreaDDFast(e,n,i)),s=_.sqr(e.x).selfAdd(_.sqr(e.y)).selfMultiply(Rs.triAreaDDFast(t,n,i)),o=_.sqr(n.x).selfAdd(_.sqr(n.y)).selfMultiply(Rs.triAreaDDFast(t,e,i)),a=_.sqr(i.x).selfAdd(_.sqr(i.y)).selfMultiply(Rs.triAreaDDFast(t,e,n)),u=r.selfSubtract(s).selfAdd(o).selfSubtract(a),l=u.doubleValue()>0;return l},Rs.isInCircleCC=function(t,e,n,i){var r=Si.circumcentre(t,e,n),s=t.distance(r),o=i.distance(r)-s;return o<=0},Rs.isInCircleNormalized=function(t,e,n,i){var r=t.x-i.x,s=t.y-i.y,o=e.x-i.x,a=e.y-i.y,u=n.x-i.x,l=n.y-i.y,h=r*a-o*s,c=o*l-u*a,f=u*s-r*l,g=r*r+s*s,d=o*o+a*a,p=u*u+l*l,v=g*c+d*f+p*h;\nreturn v>0},Rs.isInCircleDDSlow=function(t,e,n,i){var r=_.valueOf(i.x),s=_.valueOf(i.y),o=_.valueOf(t.x),a=_.valueOf(t.y),u=_.valueOf(e.x),l=_.valueOf(e.y),h=_.valueOf(n.x),c=_.valueOf(n.y),f=o.multiply(o).add(a.multiply(a)).multiply(Rs.triAreaDDSlow(u,l,h,c,r,s)),g=u.multiply(u).add(l.multiply(l)).multiply(Rs.triAreaDDSlow(o,a,h,c,r,s)),d=h.multiply(h).add(c.multiply(c)).multiply(Rs.triAreaDDSlow(o,a,u,l,r,s)),p=r.multiply(r).add(s.multiply(s)).multiply(Rs.triAreaDDSlow(o,a,u,l,h,c)),v=f.subtract(g).add(d).subtract(p),m=v.doubleValue()>0;return m},Rs.isInCircleNonRobust=function(t,e,n,i){var r=(t.x*t.x+t.y*t.y)*Rs.triArea(e,n,i)-(e.x*e.x+e.y*e.y)*Rs.triArea(t,n,i)+(n.x*n.x+n.y*n.y)*Rs.triArea(t,e,i)-(i.x*i.x+i.y*i.y)*Rs.triArea(t,e,n)>0;return r},Rs.isInCircleRobust=function(t,e,n,i){return Rs.isInCircleNormalized(t,e,n,i)},Rs.triAreaDDSlow=function(t,e,n,i,r,s){return n.subtract(t).multiply(s.subtract(e)).subtract(i.subtract(e).multiply(r.subtract(t)))},Rs.triAreaDDFast=function(t,e,n){var i=_.valueOf(e.x).selfSubtract(t.x).selfMultiply(_.valueOf(n.y).selfSubtract(t.y)),r=_.valueOf(e.y).selfSubtract(t.y).selfMultiply(_.valueOf(n.x).selfSubtract(t.x));return i.selfSubtract(r)},e(Ts.prototype,{circleCenter:function(t,e){var n=new Ts(this.getX(),this.getY()),i=this.bisector(n,t),r=this.bisector(t,e),s=new F(i,r),o=null;try{o=new Ts(s.getX(),s.getY())}catch(i){if(!(i instanceof w))throw i;A.err.println(\"a: \"+n+\"  b: \"+t+\"  c: \"+e),A.err.println(i)}finally{}return o},dot:function(t){return this.p.x*t.getX()+this.p.y*t.getY()},magn:function(){return Math.sqrt(this.p.x*this.p.x+this.p.y*this.p.y)},getZ:function(){return this.p.z},bisector:function(t,e){var n=e.getX()-t.getX(),i=e.getY()-t.getY(),r=new F(t.getX()+n/2,t.getY()+i/2,1),s=new F(t.getX()-i+n/2,t.getY()+n+i/2,1);return new F(r,s)},equals:function(){if(1===arguments.length){var t=arguments[0];return this.p.x===t.getX()&&this.p.y===t.getY()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.p.distance(e.getCoordinate())<n}},getCoordinate:function(){return this.p},isInCircle:function(t,e,n){return Rs.isInCircleRobust(t.p,e.p,n.p,this.p)},interpolateZValue:function(t,e,n){var i=t.getX(),r=t.getY(),s=e.getX()-i,o=n.getX()-i,a=e.getY()-r,u=n.getY()-r,l=s*u-o*a,h=this.getX()-i,c=this.getY()-r,f=(u*h-o*c)/l,g=(-a*h+s*c)/l,d=t.getZ()+f*(e.getZ()-t.getZ())+g*(n.getZ()-t.getZ());return d},midPoint:function(t){var e=(this.p.x+t.getX())/2,n=(this.p.y+t.getY())/2,i=(this.p.z+t.getZ())/2;return new Ts(e,n,i)},rightOf:function(t){return this.isCCW(t.dest(),t.orig())},isCCW:function(t,e){return(t.p.x-this.p.x)*(e.p.y-this.p.y)-(t.p.y-this.p.y)*(e.p.x-this.p.x)>0},getX:function(){return this.p.x},crossProduct:function(t){return this.p.x*t.getY()-this.p.y*t.getX()},setZ:function(t){this.p.z=t},times:function(t){return new Ts(t*this.p.x,t*this.p.y)},cross:function(){return new Ts(this.p.y,(-this.p.x))},leftOf:function(t){return this.isCCW(t.orig(),t.dest())},toString:function(){return\"POINT (\"+this.p.x+\" \"+this.p.y+\")\"},sub:function(t){return new Ts(this.p.x-t.getX(),this.p.y-t.getY())},getY:function(){return this.p.y},classify:function(t,e){var n=this,i=e.sub(t),r=n.sub(t),s=i.crossProduct(r);return s>0?Ts.LEFT:s<0?Ts.RIGHT:i.getX()*r.getX()<0||i.getY()*r.getY()<0?Ts.BEHIND:i.magn()<r.magn()?Ts.BEYOND:t.equals(n)?Ts.ORIGIN:e.equals(n)?Ts.DESTINATION:Ts.BETWEEN},sum:function(t){return new Ts(this.p.x+t.getX(),this.p.y+t.getY())},distance:function(t,e){return Math.sqrt(Math.pow(e.getX()-t.getX(),2)+Math.pow(e.getY()-t.getY(),2))},circumRadiusRatio:function(t,e){var n=this.circleCenter(t,e),i=this.distance(n,t),r=this.distance(this,t),s=this.distance(t,e);return s<r&&(r=s),s=this.distance(e,this),s<r&&(r=s),i/r},interfaces_:function(){return[]},getClass:function(){return Ts}}),Ts.interpolateZ=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=e.distance(n),r=t.distance(e),s=n.z-e.z,o=e.z+s*(r/i);return o}if(4===arguments.length){var a=arguments[0],u=arguments[1],l=arguments[2],h=arguments[3],c=u.x,f=u.y,g=l.x-c,d=h.x-c,p=l.y-f,v=h.y-f,m=g*v-d*p,y=a.x-c,x=a.y-f,E=(v*y-d*x)/m,I=(-p*y+g*x)/m,N=u.z+E*(l.z-u.z)+I*(h.z-u.z);return N}},Ts.LEFT=0,Ts.RIGHT=1,Ts.BEYOND=2,Ts.BEHIND=3,Ts.BETWEEN=4,Ts.ORIGIN=5,Ts.DESTINATION=6,h(Ps,Ts),e(Ps.prototype,{getConstraint:function(){return this.constraint},setOnConstraint:function(t){this._isOnConstraint=t},merge:function(t){t._isOnConstraint&&(this._isOnConstraint=!0,this.constraint=t.constraint)},isOnConstraint:function(){return this._isOnConstraint},setConstraint:function(t){this._isOnConstraint=!0,this.constraint=t},interfaces_:function(){return[]},getClass:function(){return Ps}}),e(bs.prototype,{equalsNonOriented:function(t){return!!this.equalsOriented(t)||!!this.equalsOriented(t.sym())},toLineSegment:function(){return new ce(this.vertex.getCoordinate(),this.dest().getCoordinate())},dest:function(){return this.sym().orig()},oNext:function(){return this.next},equalsOriented:function(t){return!(!this.orig().getCoordinate().equals2D(t.orig().getCoordinate())||!this.dest().getCoordinate().equals2D(t.dest().getCoordinate()))},dNext:function(){return this.sym().oNext().sym()},lPrev:function(){return this.next.sym()},rPrev:function(){return this.sym().oNext()},rot:function(){return this._rot},oPrev:function(){return this._rot.next._rot},sym:function(){return this._rot._rot},setOrig:function(t){this.vertex=t},lNext:function(){return this.invRot().oNext().rot()},getLength:function(){return this.orig().getCoordinate().distance(this.dest().getCoordinate())},invRot:function(){return this._rot.sym()},setDest:function(t){this.sym().setOrig(t)},setData:function(t){this.data=t},getData:function(){return this.data},delete:function(){this._rot=null},orig:function(){return this.vertex},rNext:function(){return this._rot.next.invRot()},toString:function(){var t=this.vertex.getCoordinate(),e=this.dest().getCoordinate();return se.toLineString(t,e)},isLive:function(){return null!==this._rot},getPrimary:function(){return this.orig().getCoordinate().compareTo(this.dest().getCoordinate())<=0?this:this.sym()},dPrev:function(){return this.invRot().oNext().invRot()},setNext:function(t){this.next=t},interfaces_:function(){return[]},getClass:function(){return bs}}),bs.makeEdge=function(t,e){var n=new bs,i=new bs,r=new bs,s=new bs;n._rot=i,i._rot=r,r._rot=s,s._rot=n,n.setNext(n),i.setNext(s),r.setNext(r),s.setNext(i);var o=n;return o.setOrig(t),o.setDest(e),o},bs.swap=function(t){var e=t.oPrev(),n=t.sym().oPrev();bs.splice(t,e),bs.splice(t.sym(),n),bs.splice(t,e.lNext()),bs.splice(t.sym(),n.lNext()),t.setOrig(e.dest()),t.setDest(n.dest())},bs.splice=function(t,e){var n=t.oNext().rot(),i=e.oNext().rot(),r=e.oNext(),s=t.oNext(),o=i.oNext(),a=n.oNext();t.setNext(r),e.setNext(s),n.setNext(o),i.setNext(a)},bs.connect=function(t,e){var n=bs.makeEdge(t.dest(),e.orig());return bs.splice(n,t.lNext()),bs.splice(n.sym(),e),n},e(Os.prototype,{insertSite:function(t){var e=this.subdiv.locate(t);if(this.subdiv.isVertexOfEdge(e,t))return e;this.subdiv.isOnEdge(e,t.getCoordinate())&&(e=e.oPrev(),this.subdiv.delete(e.oNext()));var n=this.subdiv.makeEdge(e.orig(),t);bs.splice(n,e);var i=n;do n=this.subdiv.connect(e,n.sym()),e=n.oPrev();while(e.lNext()!==i);for(;;){var r=e.oPrev();if(r.dest().rightOf(e)&&t.isInCircle(e.orig(),r.dest(),e.dest()))bs.swap(e),e=e.oPrev();else{if(e.oNext()===i)return n;e=e.oNext().lPrev()}}},insertSites:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertSite(n)}},interfaces_:function(){return[]},getClass:function(){return Os}}),e(_s.prototype,{locate:function(t){},interfaces_:function(){return[]},getClass:function(){return _s}}),e(Ms.prototype,{init:function(){this.lastEdge=this.findEdge()},locate:function(t){this.lastEdge.isLive()||this.init();var e=this.subdiv.locateFromEdge(t,this.lastEdge);return this.lastEdge=e,e},findEdge:function(){var t=this.subdiv.getEdges();return t.iterator().next()},interfaces_:function(){return[_s]},getClass:function(){return Ms}}),h(Ds,l),e(Ds.prototype,{getSegment:function(){return this.seg},interfaces_:function(){return[]},getClass:function(){return Ds}}),Ds.msgWithSpatial=function(t,e){return null!==e?t+\" [ \"+e+\" ]\":t},e(As.prototype,{visit:function(t){},interfaces_:function(){return[]},getClass:function(){return As}}),e(Fs.prototype,{getTriangleVertices:function(t){var e=new Bs;return this.visitTriangles(e,t),e.getTriangleVertices()},isFrameVertex:function(t){return!!t.equals(this.frameVertex[0])||(!!t.equals(this.frameVertex[1])||!!t.equals(this.frameVertex[2]))},isVertexOfEdge:function(t,e){return!(!e.equals(t.orig(),this.tolerance)&&!e.equals(t.dest(),this.tolerance))},connect:function(t,e){var n=bs.connect(t,e);return this.quadEdges.add(n),n},getVoronoiCellPolygon:function(t,e){var n=new I,i=t;do{var r=t.rot().orig().getCoordinate();n.add(r),t=t.oPrev()}while(t!==i);var s=new N;s.addAll(n,!1),s.closeRing(),s.size()<4&&(A.out.println(s),s.add(s.get(s.size()-1),!0));var o=s.toCoordinateArray(),a=e.createPolygon(e.createLinearRing(o),null),u=i.orig();return a.setUserData(u.getCoordinate()),a},setLocator:function(t){this.locator=t},initSubdiv:function(){var t=this.makeEdge(this.frameVertex[0],this.frameVertex[1]),e=this.makeEdge(this.frameVertex[1],this.frameVertex[2]);bs.splice(t.sym(),e);var n=this.makeEdge(this.frameVertex[2],this.frameVertex[0]);return bs.splice(e.sym(),n),bs.splice(n.sym(),t),t},isFrameBorderEdge:function(t){var e=new Array(3).fill(null);Fs.getTriangleEdges(t,e);var n=new Array(3).fill(null);Fs.getTriangleEdges(t.sym(),n);var i=t.lNext().dest();if(this.isFrameVertex(i))return!0;var r=t.sym().lNext().dest();return!!this.isFrameVertex(r)},makeEdge:function(t,e){var n=bs.makeEdge(t,e);return this.quadEdges.add(n),n},visitTriangles:function(t,e){this.visitedKey++;var n=new pe;n.push(this.startingEdge);for(var i=new J;!n.empty();){var r=n.pop();if(!i.contains(r)){var s=this.fetchTriangleToVisit(r,n,e,i);null!==s&&t.visit(s)}}},isFrameEdge:function(t){return!(!this.isFrameVertex(t.orig())&&!this.isFrameVertex(t.dest()))},isOnEdge:function(t,e){this.seg.setCoordinates(t.orig().getCoordinate(),t.dest().getCoordinate());var n=this.seg.distance(e);return n<this.edgeCoincidenceTolerance},getEnvelope:function(){return new C(this.frameEnv)},createFrame:function(t){var e=t.getWidth(),n=t.getHeight(),i=0;i=e>n?10*e:10*n,this.frameVertex[0]=new Ts((t.getMaxX()+t.getMinX())/2,t.getMaxY()+i),this.frameVertex[1]=new Ts(t.getMinX()-i,t.getMinY()-i),this.frameVertex[2]=new Ts(t.getMaxX()+i,t.getMinY()-i),this.frameEnv=new C(this.frameVertex[0].getCoordinate(),this.frameVertex[1].getCoordinate()),this.frameEnv.expandToInclude(this.frameVertex[2].getCoordinate())},getTriangleCoordinates:function(t){var e=new zs;return this.visitTriangles(e,t),e.getTriangles()},getVertices:function(t){for(var e=new J,n=this.quadEdges.iterator();n.hasNext();){var i=n.next(),r=i.orig();!t&&this.isFrameVertex(r)||e.add(r);var s=i.dest();!t&&this.isFrameVertex(s)||e.add(s)}return e},fetchTriangleToVisit:function(t,e,n,i){var r=t,s=0,o=!1;do{this.triEdges[s]=r,this.isFrameEdge(r)&&(o=!0);var a=r.sym();i.contains(a)||e.push(a),i.add(r),s++,r=r.lNext()}while(r!==t);return o&&!n?null:this.triEdges},getEdges:function(){if(0===arguments.length)return this.quadEdges;if(1===arguments.length){for(var t=arguments[0],e=this.getPrimaryEdges(!1),n=new Array(e.size()).fill(null),i=0,r=e.iterator();r.hasNext();){var s=r.next();n[i++]=t.createLineString([s.orig().getCoordinate(),s.dest().getCoordinate()])}return t.createMultiLineString(n)}},getVertexUniqueEdges:function(t){for(var e=new I,n=new J,i=this.quadEdges.iterator();i.hasNext();){var r=i.next(),s=r.orig();n.contains(s)||(n.add(s),!t&&this.isFrameVertex(s)||e.add(r));var o=r.sym(),a=o.orig();n.contains(a)||(n.add(a),!t&&this.isFrameVertex(a)||e.add(o))}return e},getTriangleEdges:function(t){var e=new qs;return this.visitTriangles(e,t),e.getTriangleEdges()},getPrimaryEdges:function(t){this.visitedKey++;var e=new I,n=new pe;n.push(this.startingEdge);for(var i=new J;!n.empty();){var r=n.pop();if(!i.contains(r)){var s=r.getPrimary();!t&&this.isFrameEdge(s)||e.add(s),n.push(r.oNext()),n.push(r.sym().oNext()),i.add(r),i.add(r.sym())}}return e},delete:function(t){bs.splice(t,t.oPrev()),bs.splice(t.sym(),t.sym().oPrev());var e=t.sym(),n=t.rot(),i=t.rot().sym();this.quadEdges.remove(t),this.quadEdges.remove(e),this.quadEdges.remove(n),this.quadEdges.remove(i),t.delete(),e.delete(),n.delete(),i.delete()},locateFromEdge:function(t,e){for(var n=0,i=this.quadEdges.size(),r=e;;){if(n++,n>i)throw new Ds(r.toLineSegment());if(t.equals(r.orig())||t.equals(r.dest()))break;if(t.rightOf(r))r=r.sym();else if(t.rightOf(r.oNext())){if(t.rightOf(r.dPrev()))break;r=r.dPrev()}else r=r.oNext()}return r},getTolerance:function(){return this.tolerance},getVoronoiCellPolygons:function(t){this.visitTriangles(new Gs,!0);for(var e=new I,n=this.getVertexUniqueEdges(!1),i=n.iterator();i.hasNext();){var r=i.next();e.add(this.getVoronoiCellPolygon(r,t))}return e},getVoronoiDiagram:function(t){var e=this.getVoronoiCellPolygons(t);return t.createGeometryCollection(ie.toGeometryArray(e))},getTriangles:function(t){for(var e=this.getTriangleCoordinates(!1),n=new Array(e.size()).fill(null),i=0,r=e.iterator();r.hasNext();){var s=r.next();n[i++]=t.createPolygon(t.createLinearRing(s),null)}return t.createGeometryCollection(n)},insertSite:function(t){var e=this.locate(t);if(t.equals(e.orig(),this.tolerance)||t.equals(e.dest(),this.tolerance))return e;var n=this.makeEdge(e.orig(),t);bs.splice(n,e);var i=n;do n=this.connect(e,n.sym()),e=n.oPrev();while(e.lNext()!==i);return i},locate:function(){if(1===arguments.length){if(arguments[0]instanceof Ts){var t=arguments[0];return this.locator.locate(t)}if(arguments[0]instanceof g){var e=arguments[0];return this.locator.locate(new Ts(e))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=this.locator.locate(new Ts(n));if(null===r)return null;var s=r;r.dest().getCoordinate().equals2D(n)&&(s=r.sym());var o=s;do{if(o.dest().getCoordinate().equals2D(i))return o;o=o.oNext()}while(o!==s);return null}},interfaces_:function(){return[]},getClass:function(){return Fs}}),Fs.getTriangleEdges=function(t,e){if(e[0]=t,e[1]=e[0].lNext(),e[2]=e[1].lNext(),e[2].lNext()!==e[0])throw new i(\"Edges do not form a triangle\")},e(Gs.prototype,{visit:function(t){for(var e=t[0].orig().getCoordinate(),n=t[1].orig().getCoordinate(),i=t[2].orig().getCoordinate(),r=Si.circumcentre(e,n,i),s=new Ts(r),o=0;o<3;o++)t[o].rot().setOrig(s)},interfaces_:function(){return[As]},getClass:function(){return Gs}}),e(qs.prototype,{getTriangleEdges:function(){return this.triList},visit:function(t){this.triList.add(t.clone())},interfaces_:function(){return[As]},getClass:function(){return qs}}),e(Bs.prototype,{visit:function(t){this.triList.add([t[0].orig(),t[1].orig(),t[2].orig()])},getTriangleVertices:function(){return this.triList},interfaces_:function(){return[As]},getClass:function(){return Bs}}),e(zs.prototype,{checkTriangleSize:function(t){var e=\"\";t.length>=2?e=se.toLineString(t[0],t[1]):t.length>=1&&(e=se.toPoint(t[0]))},visit:function(t){this.coordList.clear();for(var e=0;e<3;e++){var n=t[e].orig();this.coordList.add(n.getCoordinate())}if(this.coordList.size()>0){this.coordList.closeRing();var i=this.coordList.toCoordinateArray();if(4!==i.length)return null;this.triCoords.add(i)}},getTriangles:function(){return this.triCoords},interfaces_:function(){return[As]},getClass:function(){return zs}}),Fs.TriangleCircumcentreVisitor=Gs,Fs.TriangleEdgesListVisitor=qs,Fs.TriangleVertexListVisitor=Bs,Fs.TriangleCoordinatesVisitor=zs,Fs.EDGE_COINCIDENCE_TOL_FACTOR=1e3,e(Vs.prototype,{getLineSegment:function(){return this.ls},getEndZ:function(){var t=this.ls.getCoordinate(1);return t.z},getStartZ:function(){var t=this.ls.getCoordinate(0);return t.z},intersection:function(t){return this.ls.intersection(t.getLineSegment())},getStart:function(){return this.ls.getCoordinate(0)},getEnd:function(){return this.ls.getCoordinate(1)},getEndY:function(){var t=this.ls.getCoordinate(1);return t.y},getStartX:function(){var t=this.ls.getCoordinate(0);return t.x},equalsTopo:function(t){return this.ls.equalsTopo(t.getLineSegment())},getStartY:function(){var t=this.ls.getCoordinate(0);return t.y},setData:function(t){this.data=t},getData:function(){return this.data},getEndX:function(){var t=this.ls.getCoordinate(1);return t.x},toString:function(){return this.ls.toString()},interfaces_:function(){return[]},getClass:function(){return Vs}}),e(ks.prototype,{visit:function(t){},interfaces_:function(){return[]},getClass:function(){return ks}}),e(Ys.prototype,{isRepeated:function(){return this.count>1},getRight:function(){return this.right},getCoordinate:function(){return this.p},setLeft:function(t){this.left=t},getX:function(){return this.p.x},getData:function(){return this.data},getCount:function(){return this.count},getLeft:function(){return this.left},getY:function(){return this.p.y},increment:function(){this.count=this.count+1},setRight:function(t){this.right=t},interfaces_:function(){return[]},getClass:function(){return Ys}}),e(Us.prototype,{insert:function(){if(1===arguments.length){var t=arguments[0];return this.insert(t,null)}if(2===arguments.length){var e=arguments[0],n=arguments[1];if(null===this.root)return this.root=new Ys(e,n),this.root;if(this.tolerance>0){var i=this.findBestMatchNode(e);if(null!==i)return i.increment(),i}return this.insertExact(e,n)}},query:function(){var t=arguments,e=this;if(1===arguments.length){var n=arguments[0],i=new I;return this.query(n,i),i}if(2===arguments.length)if(arguments[0]instanceof C&&R(arguments[1],y))!function(){var n=t[0],i=t[1];e.queryNode(e.root,n,!0,{interfaces_:function(){return[ks]},visit:function(t){i.add(t)}})}();else if(arguments[0]instanceof C&&R(arguments[1],ks)){var r=arguments[0],s=arguments[1];this.queryNode(this.root,r,!0,s)}},queryNode:function(t,e,n,i){if(null===t)return null;var r=null,s=null,o=null;n?(r=e.getMinX(),s=e.getMaxX(),o=t.getX()):(r=e.getMinY(),s=e.getMaxY(),o=t.getY());var a=r<o,u=o<=s;a&&this.queryNode(t.getLeft(),e,!n,i),e.contains(t.getCoordinate())&&i.visit(t),u&&this.queryNode(t.getRight(),e,!n,i)},findBestMatchNode:function(t){var e=new Xs(t,this.tolerance);return this.query(e.queryEnvelope(),e),e.getNode()},isEmpty:function(){return null===this.root},insertExact:function(t,e){for(var n=this.root,i=this.root,r=!0,s=!0;null!==n;){if(null!==n){var o=t.distance(n.getCoordinate())<=this.tolerance;if(o)return n.increment(),n}s=r?t.x<n.getX():t.y<n.getY(),i=n,n=s?n.getLeft():n.getRight(),r=!r}this.numberOfNodes=this.numberOfNodes+1;var a=new Ys(t,e);return s?i.setLeft(a):i.setRight(a),a},interfaces_:function(){return[]},getClass:function(){return Us}}),Us.toCoordinates=function(){if(1===arguments.length){var t=arguments[0];return Us.toCoordinates(t,!1)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=new N,r=e.iterator();r.hasNext();)for(var s=r.next(),o=n?s.getCount():1,a=0;a<o;a++)i.add(s.getCoordinate(),!0);return i.toCoordinateArray()}},e(Xs.prototype,{visit:function(t){var e=this.p.distance(t.getCoordinate()),n=e<=this.tolerance;if(!n)return null;var i=!1;(null===this.matchNode||e<this.matchDist||null!==this.matchNode&&e===this.matchDist&&t.getCoordinate().compareTo(this.matchNode.getCoordinate())<1)&&(i=!0),i&&(this.matchNode=t,this.matchDist=e)},queryEnvelope:function(){var t=new C(this.p);return t.expandBy(this.tolerance),t},getNode:function(){return this.matchNode},interfaces_:function(){return[ks]},getClass:function(){return Xs}}),Us.BestMatchVisitor=Xs,e(Hs.prototype,{getInitialVertices:function(){return this.initialVertices},getKDT:function(){return this.kdt},enforceConstraints:function(){this.addConstraintVertices();var t=0,e=0;do e=this.enforceGabriel(this.segments),t++;while(e>0&&t<Hs.MAX_SPLIT_ITER)},insertSites:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertSite(n)}},getVertexFactory:function(){return this.vertexFactory},getPointArray:function(){for(var t=new Array(this.initialVertices.size()+this.segVertices.size()).fill(null),e=0,n=this.initialVertices.iterator();n.hasNext();){var i=n.next();t[e++]=i.getCoordinate()}for(var r=this.segVertices.iterator();r.hasNext();){var i=r.next();t[e++]=i.getCoordinate()}return t},setConstraints:function(t,e){this.segments=t,this.segVertices=e},computeConvexHull:function(){var t=new ie,e=this.getPointArray(),n=new me(e,t);this.convexHull=n.getConvexHull()},addConstraintVertices:function(){this.computeConvexHull(),this.insertSites(this.segVertices)},findNonGabrielPoint:function(t){var e=t.getStart(),n=t.getEnd(),i=new g((e.x+n.x)/2,(e.y+n.y)/2),s=e.distance(i),o=new C(i);o.expandBy(s);for(var a=this.kdt.query(o),u=null,l=r.MAX_VALUE,h=a.iterator();h.hasNext();){var c=h.next(),f=c.getCoordinate();if(!f.equals2D(e)&&!f.equals2D(n)){var d=i.distance(f);if(d<s){var p=d;(null===u||p<l)&&(u=f,l=p)}}}return u},getConstraintSegments:function(){return this.segments},setSplitPointFinder:function(t){this.splitFinder=t},getConvexHull:function(){return this.convexHull},getTolerance:function(){return this.tolerance},enforceGabriel:function(t){for(var e=new I,n=0,i=new I,r=t.iterator();r.hasNext();){var s=r.next(),o=this.findNonGabrielPoint(s);if(null!==o){this.splitPt=this.splitFinder.findSplitPoint(s,o);var a=this.createVertex(this.splitPt,s),u=(this.insertSite(a),new Vs(s.getStartX(),s.getStartY(),s.getStartZ(),a.getX(),a.getY(),a.getZ(),s.getData())),l=new Vs(a.getX(),a.getY(),a.getZ(),s.getEndX(),s.getEndY(),s.getEndZ(),s.getData());e.add(u),e.add(l),i.add(s),n+=1}}return t.removeAll(i),t.addAll(e),n},createVertex:function(){if(1===arguments.length){var t=arguments[0],e=null;return e=null!==this.vertexFactory?this.vertexFactory.createVertex(t,null):new Ps(t)}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=null;return e=null!==this.vertexFactory?this.vertexFactory.createVertex(n,i):new Ps(n),e.setOnConstraint(!0),e}},getSubdivision:function(){return this.subdiv},computeBoundingBox:function(){var t=Hs.computeVertexEnvelope(this.initialVertices),e=Hs.computeVertexEnvelope(this.segVertices),n=new C(t);n.expandToInclude(e);var i=.2*n.getWidth(),r=.2*n.getHeight(),s=Math.max(i,r);this.computeAreaEnv=new C(n),this.computeAreaEnv.expandBy(s)},setVertexFactory:function(t){this.vertexFactory=t},formInitialDelaunay:function(){this.computeBoundingBox(),this.subdiv=new Fs(this.computeAreaEnv,this.tolerance),this.subdiv.setLocator(new Ms(this.subdiv)),this.incDel=new Os(this.subdiv),this.insertSites(this.initialVertices)},insertSite:function(){if(arguments[0]instanceof Ps){var t=arguments[0],e=this.kdt.insert(t.getCoordinate(),t);if(e.isRepeated()){var n=e.getData();return n.merge(t),n}return this.incDel.insertSite(t),t}if(arguments[0]instanceof g){var i=arguments[0];this.insertSite(this.createVertex(i))}},interfaces_:function(){return[]},getClass:function(){return Hs}}),Hs.computeVertexEnvelope=function(t){for(var e=new C,n=t.iterator();n.hasNext();){var i=n.next();e.expandToInclude(i.getCoordinate())}return e},Hs.MAX_SPLIT_ITER=99,e(Ws.prototype,{create:function(){if(null!==this.subdiv)return null;var t=Ws.envelope(this.siteCoords),e=Ws.toVertices(this.siteCoords);this.subdiv=new Fs(t,this.tolerance);var n=new Os(this.subdiv);n.insertSites(e)},setTolerance:function(t){this.tolerance=t},setSites:function(){if(arguments[0]instanceof B){var t=arguments[0];this.siteCoords=Ws.extractUniqueCoordinates(t)}else if(R(arguments[0],v)){var e=arguments[0];this.siteCoords=Ws.unique(H.toCoordinateArray(e))}},getEdges:function(t){return this.create(),this.subdiv.getEdges(t)},getSubdivision:function(){return this.create(),this.subdiv},getTriangles:function(t){return this.create(),this.subdiv.getTriangles(t)},interfaces_:function(){return[]},getClass:function(){return Ws}}),Ws.extractUniqueCoordinates=function(t){if(null===t)return new N;var e=t.getCoordinates();return Ws.unique(e)},Ws.envelope=function(t){for(var e=new C,n=t.iterator();n.hasNext();){var i=n.next();e.expandToInclude(i)}return e},Ws.unique=function(t){var e=H.copyDeep(t);ut.sort(e);var n=new N(e,(!1));return n},Ws.toVertices=function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Ts(i))}return e},e(js.prototype,{createSiteVertices:function(t){for(var e=new I,n=t.iterator();n.hasNext();){var i=n.next();this.constraintVertexMap.containsKey(i)||e.add(new Ps(i))}return e},create:function(){if(null!==this.subdiv)return null;var t=Ws.envelope(this.siteCoords),e=new I;null!==this.constraintLines&&(t.expandToInclude(this.constraintLines.getEnvelopeInternal()),this.createVertices(this.constraintLines),e=js.createConstraintSegments(this.constraintLines));var n=this.createSiteVertices(this.siteCoords),i=new Hs(n,this.tolerance);i.setConstraints(e,new I(this.constraintVertexMap.values())),i.formInitialDelaunay(),i.enforceConstraints(),this.subdiv=i.getSubdivision()},setTolerance:function(t){this.tolerance=t},setConstraints:function(t){this.constraintLines=t},setSites:function(t){this.siteCoords=Ws.extractUniqueCoordinates(t)},getEdges:function(t){return this.create(),this.subdiv.getEdges(t)},getSubdivision:function(){return this.create(),this.subdiv},getTriangles:function(t){return this.create(),this.subdiv.getTriangles(t)},createVertices:function(t){for(var e=t.getCoordinates(),n=0;n<e.length;n++){var i=new Ps(e[n]);this.constraintVertexMap.put(e[n],i)}},interfaces_:function(){return[]},getClass:function(){return js}}),js.createConstraintSegments=function(){if(1===arguments.length){for(var t=arguments[0],e=kn.getLines(t),n=new I,i=e.iterator();i.hasNext();){var r=i.next();js.createConstraintSegments(r,n)}return n}if(2===arguments.length)for(var s=arguments[0],o=arguments[1],a=s.getCoordinates(),i=1;i<a.length;i++)o.add(new Vs(a[i-1],a[i]))},e(Ks.prototype,{create:function(){if(null!==this.subdiv)return null;var t=Ws.envelope(this.siteCoords);this.diagramEnv=t;var e=Math.max(this.diagramEnv.getWidth(),this.diagramEnv.getHeight());this.diagramEnv.expandBy(e),null!==this.clipEnv&&this.diagramEnv.expandToInclude(this.clipEnv);var n=Ws.toVertices(this.siteCoords);this.subdiv=new Fs(t,this.tolerance);var i=new Os(this.subdiv);i.insertSites(n)},getDiagram:function(t){this.create();var e=this.subdiv.getVoronoiDiagram(t);return Ks.clipGeometryCollection(e,this.diagramEnv)},setTolerance:function(t){this.tolerance=t},setSites:function(){if(arguments[0]instanceof B){var t=arguments[0];this.siteCoords=Ws.extractUniqueCoordinates(t)}else if(R(arguments[0],v)){var e=arguments[0];this.siteCoords=Ws.unique(H.toCoordinateArray(e))}},setClipEnvelope:function(t){this.clipEnv=t},getSubdivision:function(){return this.create(),this.subdiv},interfaces_:function(){return[]},getClass:function(){return Ks}}),Ks.clipGeometryCollection=function(t,e){for(var n=t.getFactory().toGeometry(e),i=new I,r=0;r<t.getNumGeometries();r++){var s=t.getGeometryN(r),o=null;e.contains(s.getEnvelopeInternal())?o=s:e.intersects(s.getEnvelopeInternal())&&(o=n.intersection(s),o.setUserData(s.getUserData())),null===o||o.isEmpty()||i.add(o)}return t.getFactory().createGeometryCollection(ie.toGeometryArray(i))};var Ao=Object.freeze({Vertex:Ts}),Fo=Object.freeze({ConformingDelaunayTriangulationBuilder:js,DelaunayTriangulationBuilder:Ws,VoronoiDiagramBuilder:Ks,quadedge:Ao});e(Zs.prototype,{interfaces_:function(){return[]},getClass:function(){return Zs}}),Zs.union=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return ii.createEmptyResult(ii.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),si.overlayOp(t,e,ii.UNION)},e(B.prototype,{equalsTopo:function(t){return!!this.getEnvelopeInternal().equals(t.getEnvelopeInternal())&&rs.relate(this,t).isEquals(this.getDimension(),t.getDimension())},union:function(){if(0===arguments.length)return ls.union(this);if(1===arguments.length){var t=arguments[0];return Zs.union(this,t)}},isValid:function(){return Ur.isValid(this)},intersection:function(t){if(this.isEmpty()||t.isEmpty())return ii.createEmptyResult(ii.INTERSECTION,this,t,this.factory);if(this.isGeometryCollection()){var e=t;return hn.map(this,{interfaces_:function(){return[MapOp]},map:function(t){return t.intersection(e)}})}return this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),si.overlayOp(this,t,ii.INTERSECTION)},covers:function(t){return rs.covers(this,t)},coveredBy:function(t){return rs.coveredBy(this,t)},touches:function(t){return rs.touches(this,t)},intersects:function(t){return rs.intersects(this,t)},within:function(t){return rs.within(this,t)},overlaps:function(t){return rs.overlaps(this,t)},disjoint:function(t){return rs.disjoint(this,t)},crosses:function(t){return rs.crosses(this,t)},buffer:function(){if(1===arguments.length){var t=arguments[0];return dr.bufferOp(this,t)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return dr.bufferOp(this,e,n)}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];return dr.bufferOp(this,i,r,s)}},convexHull:function(){return new me(this).getConvexHull()},relate:function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return rs.relate.apply(rs,[this].concat(e))},getCentroid:function(){if(this.isEmpty())return this.factory.createPoint();var t=ge.getCentroid(this);return this.createPointFromInternalCoord(t,this)},getInteriorPoint:function(){if(this.isEmpty())return this.factory.createPoint();var t=null,e=this.getDimension();if(0===e){var n=new li(this);t=n.getInteriorPoint()}else if(1===e){var n=new ui(this);t=n.getInteriorPoint()}else{var n=new oi(this);t=n.getInteriorPoint()}return this.createPointFromInternalCoord(t,this)},symDifference:function(t){if(this.isEmpty()||t.isEmpty()){if(this.isEmpty()&&t.isEmpty())return ii.createEmptyResult(ii.SYMDIFFERENCE,this,t,this.factory);if(this.isEmpty())return t.copy();if(t.isEmpty())return this.copy()}return this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),si.overlayOp(this,t,ii.SYMDIFFERENCE)},createPointFromInternalCoord:function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},toText:function(){var t=new se;return t.write(this)},toString:function(){this.toText()},contains:function(t){return rs.contains(this,t)},difference:function(t){return this.isEmpty()?ii.createEmptyResult(ii.DIFFERENCE,this,t,this.factory):t.isEmpty()?this.copy():(this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),si.overlayOp(this,t,ii.DIFFERENCE))},isSimple:function(){var t=new Wi(this);return t.isSimple()},isWithinDistance:function(t,e){var n=this.getEnvelopeInternal().distance(t.getEnvelopeInternal());return!(n>e)&&xr.isWithinDistance(this,t,e)},distance:function(t){return xr.distance(this,t)},isEquivalentClass:function(t){return this.getClass()===t.getClass()}});var Go=\"1.3.0 (6e65adb)\";t.version=Go,t.algorithm=co,t.densify=fo,t.dissolve=go,t.geom=lo,t.geomgraph=po,t.index=yo,t.io=No,t.noding=Co,t.operation=_o,t.precision=Mo,t.simplify=Do,t.triangulate=Fo,Object.defineProperty(t,\"__esModule\",{value:!0})});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsts/dist/jsts.min.js\n// module id = 39\n// module chunks = 0","// depend on jsts for now https://github.com/bjornharrtell/jsts/blob/master/examples/overlay.html\nvar jsts = require('jsts');\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second\n * polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon>} p1 input Polygon feature\n * @param {Feature<Polygon>} p2 Polygon feature to difference from `p1`\n * @return {Feature<(Polygon|MultiPolygon)>} a Polygon or MultiPolygon feature showing the area of `p1` excluding the area of `p2`\n * @example\n * var poly1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-46.738586, -23.596711],\n *       [-46.738586, -23.458207],\n *       [-46.560058, -23.458207],\n *       [-46.560058, -23.596711],\n *       [-46.738586, -23.596711]\n *     ]]\n *   }\n * };\n * var poly2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#00f\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-46.650009, -23.631314],\n *       [-46.650009, -23.5237],\n *       [-46.509246, -23.5237],\n *       [-46.509246, -23.631314],\n *       [-46.650009, -23.631314]\n *     ]]\n *   }\n * };\n *\n * var differenced = turf.difference(poly1, poly2);\n * differenced.properties.fill = '#f00';\n *\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly1, poly2]\n * };\n *\n * //=polygons\n *\n * //=differenced\n */\n\nmodule.exports = function (p1, p2) {\n    var poly1 = JSON.parse(JSON.stringify(p1));\n    var poly2 = JSON.parse(JSON.stringify(p2));\n    if (poly1.type !== 'Feature') {\n        poly1 = {\n            type: 'Feature',\n            properties: {},\n            geometry: poly1\n        };\n    }\n    if (poly2.type !== 'Feature') {\n        poly2 = {\n            type: 'Feature',\n            properties: {},\n            geometry: poly2\n        };\n    }\n\n    var reader = new jsts.io.GeoJSONReader();\n    var a = reader.read(JSON.stringify(poly1.geometry));\n    var b = reader.read(JSON.stringify(poly2.geometry));\n    var differenced = a.difference(b);\n\n    if (differenced.isEmpty()) return undefined;\n\n    var writer = new jsts.io.GeoJSONWriter();\n    var geojsonGeometry = writer.write(differenced);\n\n    poly1.geometry = differenced;\n\n    return {\n        type: 'Feature',\n        properties: poly1.properties,\n        geometry: geojsonGeometry\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/difference/index.js\n// module id = 40\n// module chunks = 0","var turfUnion = require('@turf/union');\nvar turfOverlaps = require('turf-overlaps');\nvar turfbbox = require('@turf/bbox');\nvar Rbush = require('rbush');\nvar gju = require('geojson-utils');\nvar getClosest = require('get-closest');\n\n/**\n * Dissolves a FeatureCollection of polygons based on a property. Note that multipart features within the collection are not supported\n *\n * @name dissolve\n * @param {FeatureCollection<Polygon>} featureCollection input feature collection to be dissolved\n * @param {string} [propertyName] property name on which to dissolve features\n * @returns {FeatureCollection<Polygon>} a FeatureCollection containing the dissolved polygons\n * @example\n * var features = {\n * \"type\": \"FeatureCollection\",\n * \"features\": [\n *   {\n *     \"type\": \"Feature\",\n *     \"properties\": {\n *       \"combine\": \"yes\"\n *     },\n *     \"geometry\": {\n *       \"type\": \"Polygon\",\n *       \"coordinates\": [[[0, 0], [0, 1], [1, 1], [1, 0], [0, 0]]]\n *     }\n *   },\n *   {\n *     \"type\": \"Feature\",\n *     \"properties\": {\n *       \"combine\": \"yes\"\n *     },\n *     \"geometry\": {\n *       \"type\": \"Polygon\",\n *       \"coordinates\": [[[0, -1], [0, 0], [1, 0], [1, -1], [0,-1]]]\n *     }\n *   },\n *   {\n *     \"type\": \"Feature\",\n *     \"properties\": {\n *       \"combine\": \"no\"\n *     },\n *     \"geometry\": {\n *       \"type\": \"Polygon\",\n *       \"coordinates\": [[[1,-1],[1, 0], [2, 0], [2, -1], [1, -1]]]\n *     }\n *   }\n *  ]\n * }\n *\n * var dissolved = turf.dissolve(features, 'combine');\n *\n * //=dissolved\n */\nmodule.exports = function (featureCollection, propertyName) {\n\n    var originalIndexOfItemsRemoved = [];\n    var treeItems = [];\n    var rtree = new Rbush();\n    for (var polyIndex = 0; polyIndex < featureCollection.features.length; polyIndex++) {\n        var inputFeatureBbox = turfbbox(featureCollection.features[polyIndex]);\n        var treeObj = {\n            minX: inputFeatureBbox[0],\n            minY: inputFeatureBbox[1],\n            maxX: inputFeatureBbox[2],\n            maxY: inputFeatureBbox[3],\n            origIndexPosition: polyIndex\n        };\n        treeItems.push(treeObj);\n    }\n    rtree.load(treeItems);\n\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var polygon = featureCollection.features[i];\n\n        var polyBoundingBox = turfbbox(polygon);\n        var searchObj = {\n            minX: polyBoundingBox[0],\n            minY: polyBoundingBox[1],\n            maxX: polyBoundingBox[2],\n            maxY: polyBoundingBox[3]\n        };\n        var potentialMatchingFeatures = rtree.search(searchObj);\n\n        var featureChanged = false;\n\n        for (var searchIndex = 0; searchIndex < potentialMatchingFeatures.length; searchIndex++) {\n            polygon = featureCollection.features[i];\n\n            var matchFeaturePosition = potentialMatchingFeatures[searchIndex].origIndexPosition;\n\n            if (originalIndexOfItemsRemoved.length > 0 && matchFeaturePosition !== 0) {\n                if (matchFeaturePosition > originalIndexOfItemsRemoved[originalIndexOfItemsRemoved.length - 1]) {\n                    matchFeaturePosition = matchFeaturePosition - (originalIndexOfItemsRemoved.length);\n                } else {\n                    var closestNumber = getClosest.greaterNumber(matchFeaturePosition, originalIndexOfItemsRemoved);\n                    if (closestNumber !== 0) {\n                        matchFeaturePosition = matchFeaturePosition - closestNumber;\n                    }\n                }\n            }\n\n            if (matchFeaturePosition === i) {\n                continue;\n            }\n            var matchFeature = featureCollection.features[matchFeaturePosition];\n\n            if (typeof propertyName !== undefined) {\n                if (matchFeature.properties[propertyName] !== polygon.properties[propertyName]) {\n                    continue;\n                }\n            }\n\n            var overlapCheck = turfOverlaps(polygon, matchFeature);\n\n            if (!overlapCheck) {\n                var polyClone = JSON.stringify(polygon);\n                var polyBeingCheckedClone = JSON.stringify(matchFeature);\n                var linestring1 = toLinestring(JSON.parse(polyClone));\n                var linestring2 = toLinestring(JSON.parse(polyBeingCheckedClone));\n                overlapCheck = gju.lineStringsIntersect(linestring1.geometry, linestring2.geometry);\n            }\n            if (!overlapCheck) {\n                continue;\n            }\n\n            featureCollection.features[i] = turfUnion(polygon, matchFeature);\n            originalIndexOfItemsRemoved.push(potentialMatchingFeatures[searchIndex].origIndexPosition);\n            originalIndexOfItemsRemoved.sort(function (a, b) {\n                return a - b;\n            });\n\n            rtree.remove(potentialMatchingFeatures[searchIndex]);\n            featureCollection.features.splice(matchFeaturePosition, 1);\n            searchObj.origIndexPosition = i;\n            rtree.remove(searchObj, function (a, b) {\n                return a.origIndexPosition === b.origIndexPosition;\n            });\n            featureChanged = true;\n        }\n        if (featureChanged) {\n            var newBoundingBox = turfbbox(polygon);\n            rtree.insert({\n                minX: newBoundingBox[0],\n                minY: newBoundingBox[1],\n                maxX: newBoundingBox[2],\n                maxY: newBoundingBox[3],\n                origIndexPosition: i\n            });\n            i--;\n        }\n    }\n    return featureCollection;\n};\n\nfunction toLinestring(polygon) {\n    if (polygon === null || polygon === undefined) throw new Error('No polygon was passed');\n    polygon.geometry.type = 'LineString';\n    var flat_arr = [].concat.apply([], polygon.geometry.coordinates);\n    polygon.geometry.coordinates = flat_arr;\n    return polygon;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/dissolve/index.js\n// module id = 41\n// module chunks = 0","var clockwise = require('turf-is-clockwise');\n\nfunction doLinesIntersect(line1, line2) {\n  var p1 = line1[0],\n    p2 = line1[1],\n    p3 = line2[0],\n    p4 = line2[1];\n\n  return (clockwise([p1, p3, p4, p1]) != clockwise([p2, p3, p4, p2]))\n    && (clockwise([p1, p2, p3, p1]) != clockwise([p1, p2, p4, p1]));\n}\n\nfunction testLines(ring1, ring2) {\n  for (var p1_ind = 0; p1_ind < (ring1.length - 1); p1_ind++) {\n    var p1_line = [ring1[p1_ind], ring1[p1_ind + 1]];\n    for (var p2_ind = 0; p2_ind < (ring2.length - 1); p2_ind++) {\n      var p2_line = [ring2[p2_ind], ring2[p2_ind + 1]];\n\n      if (doLinesIntersect(p1_line, p2_line)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction getCoordinates(polygon) {\n  var coords = [[[]]];\n\n  switch (polygon.geometry.type) {\n    case 'LineString':\n      coords = [[polygon.geometry.coordinates]];\n      break;\n    case 'Polygon':\n      coords = [polygon.geometry.coordinates];\n      break;\n    case 'MultiPolygon':\n      coords = polygon.geometry.coordinates;\n      break;\n  }\n  return coords;\n}\n\n/**\n * Since we don't care about the overlap amount,\n * or it's geometry, but rather just whether overlap\n * occurs, polygon overlap can most simply be expressed\n * by testing whether any pair of edges on the two polygons\n * intersect. If there are any edge intersections, the\n * polygons overlap.\n *\n * @param  {[type]} poly1 [description]\n * @param  {[type]} poly2 [description]\n * @return {[type]}       [description]\n */\nmodule.exports = function (poly1, poly2) {\n  var coords1 = getCoordinates(poly1),\n    coords2 = getCoordinates(poly2);\n\n  // This looks completely stupid ridiculous to\n  // have so many nested loops, but it supports\n  // multipolygons nicely. In the case of polygons\n  // or linestrings, the outer loops are only one\n  // iteration.\n  return coords1.some(function (rings1) {\n    return coords2.some(function (rings2) {\n      return rings1.some(function(ring1) {\n        return rings2.some(function(ring2) {\n          return testLines(ring1, ring2);\n        });\n      });\n    });\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/turf-overlaps/index.js\n// module id = 42\n// module chunks = 0","module.exports = function(ring){\n  var sum = 0;\n  var i = 1;\n  var len = ring.length;\n  var prev,cur;\n  while(i<len){\n    prev = cur||ring[0];\n    cur = ring[i];\n    sum += ((cur[0]-prev[0])*(cur[1]+prev[1]));\n    i++;\n  }\n  return sum > 0;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/turf-is-clockwise/index.js\n// module id = 43\n// module chunks = 0","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rbush/index.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nmodule.exports = quickselect;\nmodule.exports.default = quickselect;\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n};\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/quickselect/index.js\n// module id = 45\n// module chunks = 0","(function () {\n  var gju = this.gju = {};\n\n  // Export the geojson object for **CommonJS**\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = gju;\n  }\n\n  // adapted from http://www.kevlindev.com/gui/math/intersection/Intersection.js\n  gju.lineStringsIntersect = function (l1, l2) {\n    var intersects = [];\n    for (var i = 0; i <= l1.coordinates.length - 2; ++i) {\n      for (var j = 0; j <= l2.coordinates.length - 2; ++j) {\n        var a1 = {\n          x: l1.coordinates[i][1],\n          y: l1.coordinates[i][0]\n        },\n          a2 = {\n            x: l1.coordinates[i + 1][1],\n            y: l1.coordinates[i + 1][0]\n          },\n          b1 = {\n            x: l2.coordinates[j][1],\n            y: l2.coordinates[j][0]\n          },\n          b2 = {\n            x: l2.coordinates[j + 1][1],\n            y: l2.coordinates[j + 1][0]\n          },\n          ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n          ub_t = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n          u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n        if (u_b != 0) {\n          var ua = ua_t / u_b,\n            ub = ub_t / u_b;\n          if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n            intersects.push({\n              'type': 'Point',\n              'coordinates': [a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)]\n            });\n          }\n        }\n      }\n    }\n    if (intersects.length == 0) intersects = false;\n    return intersects;\n  }\n\n  // Bounding Box\n\n  function boundingBoxAroundPolyCoords (coords) {\n    var xAll = [], yAll = []\n\n    for (var i = 0; i < coords[0].length; i++) {\n      xAll.push(coords[0][i][1])\n      yAll.push(coords[0][i][0])\n    }\n\n    xAll = xAll.sort(function (a,b) { return a - b })\n    yAll = yAll.sort(function (a,b) { return a - b })\n\n    return [ [xAll[0], yAll[0]], [xAll[xAll.length - 1], yAll[yAll.length - 1]] ]\n  }\n\n  gju.pointInBoundingBox = function (point, bounds) {\n    return !(point.coordinates[1] < bounds[0][0] || point.coordinates[1] > bounds[1][0] || point.coordinates[0] < bounds[0][1] || point.coordinates[0] > bounds[1][1]) \n  }\n\n  // Point in Polygon\n  // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html#Listing the Vertices\n\n  function pnpoly (x,y,coords) {\n    var vert = [ [0,0] ]\n\n    for (var i = 0; i < coords.length; i++) {\n      for (var j = 0; j < coords[i].length; j++) {\n        vert.push(coords[i][j])\n      }\n\t  vert.push(coords[i][0])\n      vert.push([0,0])\n    }\n\n    var inside = false\n    for (var i = 0, j = vert.length - 1; i < vert.length; j = i++) {\n      if (((vert[i][0] > y) != (vert[j][0] > y)) && (x < (vert[j][1] - vert[i][1]) * (y - vert[i][0]) / (vert[j][0] - vert[i][0]) + vert[i][1])) inside = !inside\n    }\n\n    return inside\n  }\n\n  gju.pointInPolygon = function (p, poly) {\n    var coords = (poly.type == \"Polygon\") ? [ poly.coordinates ] : poly.coordinates\n\n    var insideBox = false\n    for (var i = 0; i < coords.length; i++) {\n      if (gju.pointInBoundingBox(p, boundingBoxAroundPolyCoords(coords[i]))) insideBox = true\n    }\n    if (!insideBox) return false\n\n    var insidePoly = false\n    for (var i = 0; i < coords.length; i++) {\n      if (pnpoly(p.coordinates[1], p.coordinates[0], coords[i])) insidePoly = true\n    }\n\n    return insidePoly\n  }\n\n  // support multi (but not donut) polygons\n  gju.pointInMultiPolygon = function (p, poly) {\n    var coords_array = (poly.type == \"MultiPolygon\") ? [ poly.coordinates ] : poly.coordinates\n\n    var insideBox = false\n    var insidePoly = false\n    for (var i = 0; i < coords_array.length; i++){\n      var coords = coords_array[i];\n      for (var j = 0; j < coords.length; j++) {\n        if (!insideBox){\n          if (gju.pointInBoundingBox(p, boundingBoxAroundPolyCoords(coords[j]))) {\n            insideBox = true\n          }\n        }\n      }\n      if (!insideBox) return false\n      for (var j = 0; j < coords.length; j++) {\n        if (!insidePoly){\n          if (pnpoly(p.coordinates[1], p.coordinates[0], coords[j])) {\n            insidePoly = true\n          }\n        }\n      }\n    }\n\n    return insidePoly\n  }\n\n  gju.numberToRadius = function (number) {\n    return number * Math.PI / 180;\n  }\n\n  gju.numberToDegree = function (number) {\n    return number * 180 / Math.PI;\n  }\n\n  // written with help from @tautologe\n  gju.drawCircle = function (radiusInMeters, centerPoint, steps) {\n    var center = [centerPoint.coordinates[1], centerPoint.coordinates[0]],\n      dist = (radiusInMeters / 1000) / 6371,\n      // convert meters to radiant\n      radCenter = [gju.numberToRadius(center[0]), gju.numberToRadius(center[1])],\n      steps = steps || 15,\n      // 15 sided circle\n      poly = [[center[0], center[1]]];\n    for (var i = 0; i < steps; i++) {\n      var brng = 2 * Math.PI * i / steps;\n      var lat = Math.asin(Math.sin(radCenter[0]) * Math.cos(dist)\n              + Math.cos(radCenter[0]) * Math.sin(dist) * Math.cos(brng));\n      var lng = radCenter[1] + Math.atan2(Math.sin(brng) * Math.sin(dist) * Math.cos(radCenter[0]),\n                                          Math.cos(dist) - Math.sin(radCenter[0]) * Math.sin(lat));\n      poly[i] = [];\n      poly[i][1] = gju.numberToDegree(lat);\n      poly[i][0] = gju.numberToDegree(lng);\n    }\n    return {\n      \"type\": \"Polygon\",\n      \"coordinates\": [poly]\n    };\n  }\n\n  // assumes rectangle starts at lower left point\n  gju.rectangleCentroid = function (rectangle) {\n    var bbox = rectangle.coordinates[0];\n    var xmin = bbox[0][0],\n      ymin = bbox[0][1],\n      xmax = bbox[2][0],\n      ymax = bbox[2][1];\n    var xwidth = xmax - xmin;\n    var ywidth = ymax - ymin;\n    return {\n      'type': 'Point',\n      'coordinates': [xmin + xwidth / 2, ymin + ywidth / 2]\n    };\n  }\n\n  // from http://www.movable-type.co.uk/scripts/latlong.html\n  gju.pointDistance = function (pt1, pt2) {\n    var lon1 = pt1.coordinates[0],\n      lat1 = pt1.coordinates[1],\n      lon2 = pt2.coordinates[0],\n      lat2 = pt2.coordinates[1],\n      dLat = gju.numberToRadius(lat2 - lat1),\n      dLon = gju.numberToRadius(lon2 - lon1),\n      a = Math.pow(Math.sin(dLat / 2), 2) + Math.cos(gju.numberToRadius(lat1))\n        * Math.cos(gju.numberToRadius(lat2)) * Math.pow(Math.sin(dLon / 2), 2),\n      c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return (6371 * c) * 1000; // returns meters\n  },\n\n  // checks if geometry lies entirely within a circle\n  // works with Point, LineString, Polygon\n  gju.geometryWithinRadius = function (geometry, center, radius) {\n    if (geometry.type == 'Point') {\n      return gju.pointDistance(geometry, center) <= radius;\n    } else if (geometry.type == 'LineString' || geometry.type == 'Polygon') {\n      var point = {};\n      var coordinates;\n      if (geometry.type == 'Polygon') {\n        // it's enough to check the exterior ring of the Polygon\n        coordinates = geometry.coordinates[0];\n      } else {\n        coordinates = geometry.coordinates;\n      }\n      for (var i in coordinates) {\n        point.coordinates = coordinates[i];\n        if (gju.pointDistance(point, center) > radius) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt\n  gju.area = function (polygon) {\n    var area = 0;\n    // TODO: polygon holes at coordinates[1]\n    var points = polygon.coordinates[0];\n    var j = points.length - 1;\n    var p1, p2;\n\n    for (var i = 0; i < points.length; j = i++) {\n      var p1 = {\n        x: points[i][1],\n        y: points[i][0]\n      };\n      var p2 = {\n        x: points[j][1],\n        y: points[j][0]\n      };\n      area += p1.x * p2.y;\n      area -= p1.y * p2.x;\n    }\n\n    area /= 2;\n    return area;\n  },\n\n  // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt\n  gju.centroid = function (polygon) {\n    var f, x = 0,\n      y = 0;\n    // TODO: polygon holes at coordinates[1]\n    var points = polygon.coordinates[0];\n    var j = points.length - 1;\n    var p1, p2;\n\n    for (var i = 0; i < points.length; j = i++) {\n      var p1 = {\n        x: points[i][1],\n        y: points[i][0]\n      };\n      var p2 = {\n        x: points[j][1],\n        y: points[j][0]\n      };\n      f = p1.x * p2.y - p2.x * p1.y;\n      x += (p1.x + p2.x) * f;\n      y += (p1.y + p2.y) * f;\n    }\n\n    f = gju.area(polygon) * 6;\n    return {\n      'type': 'Point',\n      'coordinates': [y / f, x / f]\n    };\n  },\n\n  gju.simplify = function (source, kink) { /* source[] array of geojson points */\n    /* kink\tin metres, kinks above this depth kept  */\n    /* kink depth is the height of the triangle abc where a-b and b-c are two consecutive line segments */\n    kink = kink || 20;\n    source = source.map(function (o) {\n      return {\n        lng: o.coordinates[0],\n        lat: o.coordinates[1]\n      }\n    });\n\n    var n_source, n_stack, n_dest, start, end, i, sig;\n    var dev_sqr, max_dev_sqr, band_sqr;\n    var x12, y12, d12, x13, y13, d13, x23, y23, d23;\n    var F = (Math.PI / 180.0) * 0.5;\n    var index = new Array(); /* aray of indexes of source points to include in the reduced line */\n    var sig_start = new Array(); /* indices of start & end of working section */\n    var sig_end = new Array();\n\n    /* check for simple cases */\n\n    if (source.length < 3) return (source); /* one or two points */\n\n    /* more complex case. initialize stack */\n\n    n_source = source.length;\n    band_sqr = kink * 360.0 / (2.0 * Math.PI * 6378137.0); /* Now in degrees */\n    band_sqr *= band_sqr;\n    n_dest = 0;\n    sig_start[0] = 0;\n    sig_end[0] = n_source - 1;\n    n_stack = 1;\n\n    /* while the stack is not empty  ... */\n    while (n_stack > 0) {\n\n      /* ... pop the top-most entries off the stacks */\n\n      start = sig_start[n_stack - 1];\n      end = sig_end[n_stack - 1];\n      n_stack--;\n\n      if ((end - start) > 1) { /* any intermediate points ? */\n\n        /* ... yes, so find most deviant intermediate point to\n        either side of line joining start & end points */\n\n        x12 = (source[end].lng() - source[start].lng());\n        y12 = (source[end].lat() - source[start].lat());\n        if (Math.abs(x12) > 180.0) x12 = 360.0 - Math.abs(x12);\n        x12 *= Math.cos(F * (source[end].lat() + source[start].lat())); /* use avg lat to reduce lng */\n        d12 = (x12 * x12) + (y12 * y12);\n\n        for (i = start + 1, sig = start, max_dev_sqr = -1.0; i < end; i++) {\n\n          x13 = source[i].lng() - source[start].lng();\n          y13 = source[i].lat() - source[start].lat();\n          if (Math.abs(x13) > 180.0) x13 = 360.0 - Math.abs(x13);\n          x13 *= Math.cos(F * (source[i].lat() + source[start].lat()));\n          d13 = (x13 * x13) + (y13 * y13);\n\n          x23 = source[i].lng() - source[end].lng();\n          y23 = source[i].lat() - source[end].lat();\n          if (Math.abs(x23) > 180.0) x23 = 360.0 - Math.abs(x23);\n          x23 *= Math.cos(F * (source[i].lat() + source[end].lat()));\n          d23 = (x23 * x23) + (y23 * y23);\n\n          if (d13 >= (d12 + d23)) dev_sqr = d23;\n          else if (d23 >= (d12 + d13)) dev_sqr = d13;\n          else dev_sqr = (x13 * y12 - y13 * x12) * (x13 * y12 - y13 * x12) / d12; // solve triangle\n          if (dev_sqr > max_dev_sqr) {\n            sig = i;\n            max_dev_sqr = dev_sqr;\n          }\n        }\n\n        if (max_dev_sqr < band_sqr) { /* is there a sig. intermediate point ? */\n          /* ... no, so transfer current start point */\n          index[n_dest] = start;\n          n_dest++;\n        } else { /* ... yes, so push two sub-sections on stack for further processing */\n          n_stack++;\n          sig_start[n_stack - 1] = sig;\n          sig_end[n_stack - 1] = end;\n          n_stack++;\n          sig_start[n_stack - 1] = start;\n          sig_end[n_stack - 1] = sig;\n        }\n      } else { /* ... no intermediate points, so transfer current start point */\n        index[n_dest] = start;\n        n_dest++;\n      }\n    }\n\n    /* transfer last point */\n    index[n_dest] = n_source - 1;\n    n_dest++;\n\n    /* make return array */\n    var r = new Array();\n    for (var i = 0; i < n_dest; i++)\n      r.push(source[index[i]]);\n\n    return r.map(function (o) {\n      return {\n        type: \"Point\",\n        coordinates: [o.lng, o.lat]\n      }\n    });\n  }\n\n  // http://www.movable-type.co.uk/scripts/latlong.html#destPoint\n  gju.destinationPoint = function (pt, brng, dist) {\n    dist = dist/6371;  // convert dist to angular distance in radians\n    brng = gju.numberToRadius(brng);\n\n    var lon1 = gju.numberToRadius(pt.coordinates[0]);\n    var lat1 = gju.numberToRadius(pt.coordinates[1]);\n\n    var lat2 = Math.asin( Math.sin(lat1)*Math.cos(dist) +\n                          Math.cos(lat1)*Math.sin(dist)*Math.cos(brng) );\n    var lon2 = lon1 + Math.atan2(Math.sin(brng)*Math.sin(dist)*Math.cos(lat1),\n                                 Math.cos(dist)-Math.sin(lat1)*Math.sin(lat2));\n    lon2 = (lon2+3*Math.PI) % (2*Math.PI) - Math.PI;  // normalise to -180..+180º\n\n    return {\n      'type': 'Point',\n      'coordinates': [gju.numberToDegree(lon2), gju.numberToDegree(lat2)]\n    };\n  };\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/geojson-utils/geojson-utils.js\n// module id = 46\n// module chunks = 0","/**\n* @license get-closest https://github.com/cosmosio/get-closest\n*\n* The MIT License (MIT)\n*\n* Copyright (c) 2014 Olivier Scherrer <pode.fr@gmail.com>\n*/\n\"use strict\";\n\nvar assert = require(\"assert\");\n\n/**\n * Get the closest number in an array\n * @param {Number} item the base number\n * @param {Array} array the array to search into\n * @param {Function} getDiff returns the difference between the base number and\n *   and the currently read item in the array. The item which returned the smallest difference wins.\n * @private\n */\nfunction _getClosest(item, array, getDiff) {\n    var closest,\n        diff;\n\n    assert(Array.isArray(array), \"Get closest expects an array as second argument\");\n\n    array.forEach(function (comparedItem, comparedItemIndex) {\n        var thisDiff = getDiff(comparedItem, item);\n\n        if (thisDiff >= 0 && (typeof diff == \"undefined\" || thisDiff < diff)) {\n            diff = thisDiff;\n            closest = comparedItemIndex;\n        }\n    });\n\n    return closest;\n}\n\nmodule.exports = {\n\n  /**\n   * Get the closest number in an array given a base number\n   * Example: closest(30, [20, 0, 50, 29]) will return 3 as 29 is the closest item\n   * @param {Number} item the base number\n   * @param {Array} array the array of numbers to search into\n   * @returns {Number} the index of the closest item in the array\n   */\n  number: function closestNumber(item, array) {\n      return _getClosest(item, array, function (comparedItem, item) {\n          return Math.abs(comparedItem - item);\n      });\n  },\n\n  /**\n   * Get the closest greater number in an array given a base number\n   * Example: closest(30, [20, 0, 50, 29]) will return 2 as 50 is the closest greater item\n   * @param {Number} item the base number\n   * @param {Array} array the array of numbers to search into\n   * @returns {Number} the index of the closest item in the array\n   */\n  greaterNumber: function closestGreaterNumber(item, array) {\n      return _getClosest(item, array, function (comparedItem, item) {\n          return comparedItem - item;\n      });\n  },\n\n  /**\n   * Get the closest lower number in an array given a base number\n   * Example: closest(30, [20, 0, 50, 29]) will return 0 as 20 is the closest lower item\n   * @param {Number} item the base number\n   * @param {Array} array the array of numbers to search into\n   * @returns {Number} the index of the closest item in the array\n   */\n  lowerNumber: function closestLowerNumber(item, array) {\n    return _getClosest(item, array, function (comparedItem, item) {\n        return item - comparedItem;\n    });\n  },\n\n  /**\n   * Get the closest item in an array given a base item and a comparator function\n   * Example (closest(\"lundi\", [\"mundi\", \"mardi\"], getLevenshteinDistance)) will return 0 for \"lundi\"\n   * @param {*} item the base item\n   * @param {Array} array an array of items\n   * @param {Function} comparator a comparatof function to compare the items\n   *\n   * The function looks like:\n   *\n   * // comparedItem comes from the array\n   * // baseItem is the item to compare the others to\n   * // It returns a number\n   * function comparator(comparedItem, baseItem) {\n   *     return comparedItem - baseItem;\n   * }\n   */\n  custom: function closestCustom(item, array, comparator) {\n    return _getClosest(item, array, comparator);\n  }\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/get-closest/index.js\n// module id = 47\n// module chunks = 0","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/assert/assert.js\n// module id = 48\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 49\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 50\n// module chunks = 0","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 51\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/~/inherits/inherits_browser.js\n// module id = 52\n// module chunks = 0","var turfbbox = require('@turf/bbox');\nvar inside = require('@turf/inside');\nvar rbush = require('rbush');\n\n/**\n * Merges a specified property from a FeatureCollection of points into a\n * FeatureCollection of polygons. Given an `inProperty` on points and an `outProperty`\n * for polygons, this finds every point that lies within each polygon, collects the\n * `inProperty` values from those points, and adds them as an array to `outProperty`\n * on the polygon.\n *\n * @name collect\n * @param {FeatureCollection<Polygon>} polygons polygons with values on which to aggregate\n * @param {FeatureCollection<Point>} points points to be aggregated\n * @param {string} inProperty property to be nested from\n * @param {string} outProperty property to be nested into\n * @returns {FeatureCollection<Polygon>} polygons with properties listed based on `outField`\n * @addToMap collected, pointFC\n * @example\n * var poly1 = turf.polygon([[[0,0],[10,0],[10,10],[0,10],[0,0]]]);\n * var poly2 = turf.polygon([[[10,0],[20,10],[20,20],[20,0],[10,0]]]);\n * var polyFC = turf.featureCollection([poly1, poly2]);\n * var pt1 = turf.point([5,5], {population: 200});\n * var pt2 = turf.point([1,3], {population: 600});\n * var pt3 = turf.point([14,2], {population: 100});\n * var pt4 = turf.point([13,1], {population: 200});\n * var pt5 = turf.point([19,7], {population: 300});\n * var pointFC = turf.featureCollection([pt1, pt2, pt3, pt4, pt5]);\n * var collected = turf.collect(polyFC, pointFC, 'population', 'values');\n * var values = collected.features[0].properties.values\n * //=values => [200, 600]\n * //=pointFC\n * //=collected\n */\nmodule.exports = function (polygons, points, inProperty, outProperty) {\n    var rtree = rbush(6);\n\n    var treeItems = points.features.map(function (item) {\n        return {\n            minX: item.geometry.coordinates[0],\n            minY: item.geometry.coordinates[1],\n            maxX: item.geometry.coordinates[0],\n            maxY: item.geometry.coordinates[1],\n            property: item.properties[inProperty]\n        };\n    });\n\n    rtree.load(treeItems);\n    polygons.features.forEach(function (poly) {\n\n        if (!poly.properties) {\n            poly.properties = {};\n        }\n        var bbox = turfbbox(poly);\n        var potentialPoints = rtree.search({minX: bbox[0], minY: bbox[1], maxX: bbox[2], maxY: bbox[3]});\n        var values = [];\n        potentialPoints.forEach(function (pt) {\n            if (inside({'type': 'Point', 'coordinates': [pt.minX, pt.minY]}, poly)) {\n                values.push(pt.property);\n            }\n        });\n\n        poly.properties[outProperty] = values;\n    });\n\n    return polygons;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/collect/index.js\n// module id = 53\n// module chunks = 0","var coordEach = require('@turf/meta').coordEach;\n\n/**\n * Takes input features and flips all of their coordinates\n * from `[x, y]` to `[y, x]`.\n *\n * @name flip\n * @param {(Feature|FeatureCollection)} input input features\n * @returns {(Feature|FeatureCollection)} a feature or set of features of the same type as `input` with flipped coordinates\n * @example\n * var serbia = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [20.566406, 43.421008]\n *   }\n * };\n *\n * //=serbia\n *\n * var saudiArabia = turf.flip(serbia);\n *\n * //=saudiArabia\n */\nmodule.exports = function flip(input) {\n    // ensure that we don't modify features in-place and changes to the\n    // output do not change the previous feature, including changes to nested\n    // properties.\n    input = JSON.parse(JSON.stringify(input));\n\n    coordEach(input, function (coord) {\n        coord.reverse();\n    });\n    return input;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/flip/index.js\n// module id = 54\n// module chunks = 0","var simplify = require('simplify-js');\n\n// supported GeoJSON geometries, used to check whether to wrap in simpleFeature()\nvar supportedTypes = ['LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Takes a {@link LineString} or {@link Polygon} and returns a simplified version. Internally uses [simplify-js](http://mourner.github.io/simplify-js/) to perform simplification.\n *\n * @name simplify\n * @param {Feature<(LineString|Polygon|MultiLineString|MultiPolygon)>|FeatureCollection|GeometryCollection} feature feature to be simplified\n * @param {number} [tolerance=1] simplification tolerance\n * @param {boolean} [highQuality=false] whether or not to spend more time to create\n * a higher-quality simplification with a different algorithm\n * @returns {Feature<(LineString|Polygon|MultiLineString|MultiPolygon)>|FeatureCollection|GeometryCollection} a simplified feature\n * @example\n  * var feature = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-70.603637, -33.399918],\n *       [-70.614624, -33.395332],\n *       [-70.639343, -33.392466],\n *       [-70.659942, -33.394759],\n *       [-70.683975, -33.404504],\n *       [-70.697021, -33.419406],\n *       [-70.701141, -33.434306],\n *       [-70.700454, -33.446339],\n *       [-70.694274, -33.458369],\n *       [-70.682601, -33.465816],\n *       [-70.668869, -33.472117],\n *       [-70.646209, -33.473835],\n *       [-70.624923, -33.472117],\n *       [-70.609817, -33.468107],\n *       [-70.595397, -33.458369],\n *       [-70.587158, -33.442901],\n *       [-70.587158, -33.426283],\n *       [-70.590591, -33.414248],\n *       [-70.594711, -33.406224],\n *       [-70.603637, -33.399918]\n *     ]]\n *   }\n * };\n\n * var tolerance = 0.01;\n *\n * var simplified = turf.simplify(\n *  feature, tolerance, false);\n *\n * //=feature\n *\n * //=simplified\n */\nmodule.exports = function (feature, tolerance, highQuality) {\n    if (feature.type === 'Feature') {\n        return simpleFeature(\n            simplifyHelper(feature, tolerance, highQuality),\n            feature.properties);\n    } else if (feature.type === 'FeatureCollection') {\n        return {\n            type: 'FeatureCollection',\n            features: feature.features.map(function (f) {\n                var simplified = simplifyHelper(f, tolerance, highQuality);\n\n                // we create simpleFeature here because it doesn't apply to GeometryCollection\n                // so we can't create it at simplifyHelper()\n                if (supportedTypes.indexOf(simplified.type) > -1) {\n                    return simpleFeature(simplified, f.properties);\n                } else {\n                    return simplified;\n                }\n            })\n        };\n    } else if (feature.type === 'GeometryCollection') {\n        return {\n            type: 'GeometryCollection',\n            geometries: feature.geometries.map(function (g) {\n                if (supportedTypes.indexOf(g.type) > -1) {\n                    return simplifyHelper({\n                        type: 'Feature',\n                        geometry: g\n                    }, tolerance, highQuality);\n                }\n                return g;\n            })\n        };\n    } else {\n        return feature;\n    }\n};\n\n\nfunction simplifyHelper(feature, tolerance, highQuality) {\n    if (feature.geometry.type === 'LineString') {\n        return {\n            type: 'LineString',\n            coordinates: simplifyLine(feature.geometry.coordinates, tolerance, highQuality)\n        };\n    } else if (feature.geometry.type === 'MultiLineString') {\n        return {\n            type: 'MultiLineString',\n            coordinates: feature.geometry.coordinates.map(function (lines) {\n                return simplifyLine(lines, tolerance, highQuality);\n            })\n        };\n    } else if (feature.geometry.type === 'Polygon') {\n        return {\n            type: 'Polygon',\n            coordinates: simplifyPolygon(feature.geometry.coordinates, tolerance, highQuality)\n        };\n    } else if (feature.geometry.type === 'MultiPolygon') {\n        return {\n            type: 'MultiPolygon',\n            coordinates: feature.geometry.coordinates.map(function (rings) {\n                return simplifyPolygon(rings, tolerance, highQuality);\n            })\n        };\n    } else {\n        // unsupported geometry type supplied\n        return feature;\n    }\n}\n\n/*\n* returns true if ring's first coordinate is the same as its last\n*/\nfunction checkValidity(ring) {\n    if (ring.length < 3) {\n        return false;\n    //if the last point is the same as the first, it's not a triangle\n    } else if (ring.length === 3 &&\n      ((ring[2][0] === ring[0][0]) && (ring[2][1] === ring[0][1]))) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\nfunction simpleFeature(geom, properties) {\n    return {\n        type: 'Feature',\n        geometry: geom,\n        properties: properties\n    };\n}\n\nfunction simplifyLine(coordinates, tolerance, highQuality) {\n    return simplify(coordinates.map(function (coord) {\n        return {x: coord[0], y: coord[1], z: coord[2]};\n    }), tolerance, highQuality).map(function (coords) {\n        return (coords.z) ? [coords.x, coords.y, coords.z] : [coords.x, coords.y];\n    });\n}\n\nfunction simplifyPolygon(coordinates, tolerance, highQuality) {\n    return coordinates.map(function (ring) {\n        var pts = ring.map(function (coord) {\n            return {x: coord[0], y: coord[1]};\n        });\n        if (pts.length < 4) {\n            throw new Error('Invalid polygon');\n        }\n        var simpleRing = simplify(pts, tolerance, highQuality).map(function (coords) {\n            return [coords.x, coords.y];\n        });\n        //remove 1 percent of tolerance until enough points to make a triangle\n        while (!checkValidity(simpleRing)) {\n            tolerance -= tolerance * 0.01;\n            simpleRing = simplify(pts, tolerance, highQuality).map(function (coords) {\n                return [coords.x, coords.y];\n            });\n        }\n        if (\n            (simpleRing[simpleRing.length - 1][0] !== simpleRing[0][0]) ||\n                (simpleRing[simpleRing.length - 1][1] !== simpleRing[0][1])) {\n            simpleRing.push(simpleRing[0]);\n        }\n        return simpleRing;\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/simplify/index.js\n// module id = 55\n// module chunks = 0","/*\n (c) 2017, Vladimir Agafonkin\n Simplify.js, a high-performance JS polyline simplification library\n mourner.github.io/simplify-js\n*/\n\n(function () { 'use strict';\n\n// to suit your point format, run search/replace for '.x' and '.y';\n// for 3D version, see 3d branch (configurability would draw significant performance overhead)\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y;\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(p, p1, p2) {\n\n    var x = p1.x,\n        y = p1.y,\n        dx = p2.x - x,\n        dy = p2.y - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2.x;\n            y = p2.y;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p.x - x;\n    dy = p.y - y;\n\n    return dx * dx + dy * dy;\n}\n// rest of the code doesn't care about point format\n\n// basic distance-based simplification\nfunction simplifyRadialDist(points, sqTolerance) {\n\n    var prevPoint = points[0],\n        newPoints = [prevPoint],\n        point;\n\n    for (var i = 1, len = points.length; i < len; i++) {\n        point = points[i];\n\n        if (getSqDist(point, prevPoint) > sqTolerance) {\n            newPoints.push(point);\n            prevPoint = point;\n        }\n    }\n\n    if (prevPoint !== point) newPoints.push(point);\n\n    return newPoints;\n}\n\nfunction simplifyDPStep(points, first, last, sqTolerance, simplified) {\n    var maxSqDist = sqTolerance,\n        index;\n\n    for (var i = first + 1; i < last; i++) {\n        var sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n        if (sqDist > maxSqDist) {\n            index = i;\n            maxSqDist = sqDist;\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 1) simplifyDPStep(points, first, index, sqTolerance, simplified);\n        simplified.push(points[index]);\n        if (last - index > 1) simplifyDPStep(points, index, last, sqTolerance, simplified);\n    }\n}\n\n// simplification using Ramer-Douglas-Peucker algorithm\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n    var last = points.length - 1;\n\n    var simplified = [points[0]];\n    simplifyDPStep(points, 0, last, sqTolerance, simplified);\n    simplified.push(points[last]);\n\n    return simplified;\n}\n\n// both algorithms combined for awesome performance\nfunction simplify(points, tolerance, highestQuality) {\n\n    if (points.length <= 2) return points;\n\n    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n    points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n    points = simplifyDouglasPeucker(points, sqTolerance);\n\n    return points;\n}\n\n// export as AMD module / Node module / browser or worker variable\nif (typeof define === 'function' && define.amd) define(function() { return simplify; });\nelse if (typeof module !== 'undefined') {\n    module.exports = simplify;\n    module.exports.default = simplify;\n} else if (typeof self !== 'undefined') self.simplify = simplify;\nelse window.simplify = simplify;\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/simplify-js/simplify.js\n// module id = 56\n// module chunks = 0","var linestring = require('@turf/helpers').lineString;\nvar Spline = require('./spline.js');\n\n/**\n * Takes a {@link LineString|line} and returns a curved version\n * by applying a [Bezier spline](http://en.wikipedia.org/wiki/B%C3%A9zier_spline)\n * algorithm.\n *\n * The bezier spline implementation is by [Leszek Rybicki](http://leszek.rybicki.cc/).\n *\n * @name bezier\n * @param {Feature<LineString>} line input LineString\n * @param {number} [resolution=10000] time in milliseconds between points\n * @param {number} [sharpness=0.85] a measure of how curvy the path should be between splines\n * @returns {Feature<LineString>} curved line\n * @addToMap line, curved\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"stroke\": \"#f00\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-76.091308, 18.427501],\n *       [-76.695556, 18.729501],\n *       [-76.552734, 19.40443],\n *       [-74.61914, 19.134789],\n *       [-73.652343, 20.07657],\n *       [-73.157958, 20.210656]\n *     ]\n *   }\n * };\n *\n * var curved = turf.bezier(line);\n * curved.properties = { stroke: '#0f0' };\n *\n * //=curved\n */\nmodule.exports = function (line, resolution, sharpness) {\n    var lineOut = linestring([]);\n\n    lineOut.properties = line.properties;\n\n    var spline = new Spline({\n        points: line.geometry.coordinates.map(function (pt) {\n            return {x: pt[0], y: pt[1]};\n        }),\n        duration: resolution,\n        sharpness: sharpness\n    });\n\n    for (var i = 0; i < spline.duration; i += 10) {\n        var pos = spline.pos(i);\n        if (Math.floor(i / 100) % 2 === 0) {\n            lineOut.geometry.coordinates.push([pos.x, pos.y]);\n        }\n    }\n\n    return lineOut;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/bezier/index.js\n// module id = 57\n// module chunks = 0","/* eslint-disable */\n\n /**\n   * BezierSpline\n   * https://github.com/leszekr/bezier-spline-js\n   *\n   * @private\n   * @copyright\n   * Copyright (c) 2013 Leszek Rybicki\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in all\n   * copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\nvar Spline = function (options) {\n    this.points = options.points || [];\n    this.duration = options.duration || 10000;\n    this.sharpness = options.sharpness || 0.85;\n    this.centers = [];\n    this.controls = [];\n    this.stepLength = options.stepLength || 60;\n    this.length = this.points.length;\n    this.delay = 0;\n    // this is to ensure compatibility with the 2d version\n    for (var i = 0; i < this.length; i++) this.points[i].z = this.points[i].z || 0;\n    for (var i = 0; i < this.length - 1; i++) {\n        var p1 = this.points[i];\n        var p2 = this.points[i + 1];\n        this.centers.push({\n            x: (p1.x + p2.x) / 2,\n            y: (p1.y + p2.y) / 2,\n            z: (p1.z + p2.z) / 2\n        });\n    }\n    this.controls.push([this.points[0], this.points[0]]);\n    for (var i = 0; i < this.centers.length - 1; i++) {\n        var p1 = this.centers[i];\n        var p2 = this.centers[i + 1];\n        var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n        var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n        var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n        this.controls.push([{\n            x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i].x + dx),\n            y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i].y + dy),\n            z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i].z + dz)},\n            {\n                x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i + 1].x + dx),\n                y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i + 1].y + dy),\n                z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i + 1].z + dz)}]);\n    }\n    this.controls.push([this.points[this.length - 1], this.points[this.length - 1]]);\n    this.steps = this.cacheSteps(this.stepLength);\n    return this;\n};\n\n  /*\n    Caches an array of equidistant (more or less) points on the curve.\n  */\nSpline.prototype.cacheSteps = function (mindist) {\n    var steps = [];\n    var laststep = this.pos(0);\n    steps.push(0);\n    for (var t = 0; t < this.duration; t += 10) {\n        var step = this.pos(t);\n        var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) + (step.y - laststep.y) * (step.y - laststep.y) + (step.z - laststep.z) * (step.z - laststep.z));\n        if (dist > mindist) {\n            steps.push(t);\n            laststep = step;\n        }\n    }\n    return steps;\n};\n\n  /*\n    returns angle and speed in the given point in the curve\n  */\nSpline.prototype.vector = function (t) {\n    var p1 = this.pos(t + 10);\n    var p2 = this.pos(t - 10);\n    return {\n        angle:180 * Math.atan2(p1.y - p2.y, p1.x - p2.x) / 3.14,\n        speed:Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y) + (p2.z - p1.z) * (p2.z - p1.z))\n    };\n};\n\n  /*\n    Gets the position of the point, given time.\n\n    WARNING: The speed is not constant. The time it takes between control points is constant.\n\n    For constant speed, use Spline.steps[i];\n  */\nSpline.prototype.pos = function (time) {\n\n    function bezier(t, p1, c1, c2, p2) {\n        var B = function (t) {\n            var t2 = t * t, t3 = t2 * t;\n            return [(t3), (3 * t2 * (1 - t)), (3 * t * (1 - t) * (1 - t)), ((1 - t) * (1 - t) * (1 - t))];\n        };\n        var b = B(t);\n        var pos = {\n            x : p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n            y : p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n            z : p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3]\n        };\n        return pos;\n    }\n    var t = time - this.delay;\n    if (t < 0) t = 0;\n    if (t > this.duration) t = this.duration - 1;\n    //t = t-this.delay;\n    var t2 = (t) / this.duration;\n    if (t2 >= 1) return this.points[this.length - 1];\n\n    var n = Math.floor((this.points.length - 1) * t2);\n    var t1 = (this.length - 1) * t2 - n;\n    return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n};\n\nmodule.exports = Spline;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/bezier/spline.js\n// module id = 58\n// module chunks = 0","var inside = require('@turf/inside');\n\n/**\n * Takes a set of {@link Point|points} and a set of {@link Polygon|polygons} and performs a spatial join.\n *\n * @name tag\n * @param {FeatureCollection<Point>} points input points\n * @param {FeatureCollection<Polygon>} polygons input polygons\n * @param {string} field property in `polygons` to add to joined {<Point>} features\n * @param {string} outField property in `points` in which to store joined property from `polygons`\n * @returns {FeatureCollection<Point>} points with `containingPolyId` property containing values from `polyId`\n * @example\n * var pt1 = turf.point([-77, 44]);\n * var pt2 = turf.point([-77, 38]);\n * var poly1 = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]], {pop: 3000});\n * var poly2 = turf.polygon([[\n *   [-81, 35],\n *   [-81, 41],\n *   [-72, 41],\n *   [-72, 35],\n *   [-81, 35]\n * ]], {pop: 1000});\n *\n * var points = turf.featureCollection([pt1, pt2]);\n * var polygons = turf.featureCollection([poly1, poly2]);\n *\n * var tagged = turf.tag(points, polygons,\n *                       'pop', 'population');\n *\n * //=tagged\n */\nmodule.exports = function (points, polygons, field, outField) {\n    // prevent mutations\n    points = JSON.parse(JSON.stringify(points));\n    polygons = JSON.parse(JSON.stringify(polygons));\n    points.features.forEach(function (pt) {\n        if (!pt.properties) {\n            pt.properties = {};\n        }\n        polygons.features.forEach(function (poly) {\n            if (pt.properties[outField] === undefined) {\n                var isInside = inside(pt, poly);\n                if (isInside) {\n                    pt.properties[outField] = poly.properties[field];\n                }\n            }\n        });\n    });\n    return points;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/tag/index.js\n// module id = 59\n// module chunks = 0","// http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\nvar featureCollection = require('@turf/helpers').featureCollection;\n\n/**\n * Takes a {@link FeatureCollection} and returns a FeatureCollection with given number of {@link Feature|features} at random.\n *\n * @name sample\n * @param {FeatureCollection} featurecollection set of input features\n * @param {number} num number of features to select\n * @returns {FeatureCollection} a FeatureCollection with `n` features\n * @example\n * var points = turf.random('points', 1000);\n *\n * //=points\n *\n * var sample = turf.sample(points, 10);\n *\n * //=sample\n */\nmodule.exports = function (featurecollection, num) {\n    var outFC = featureCollection(getRandomSubarray(featurecollection.features, num));\n    return outFC;\n};\n\nfunction getRandomSubarray(arr, size) {\n    var shuffled = arr.slice(0), i = arr.length, min = i - size, temp, index;\n    while (i-- > min) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(min);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/sample/index.js\n// module id = 60\n// module chunks = 0","var bbox = require('@turf/bbox');\nvar bboxPolygon = require('@turf/bbox-polygon');\n\n/**\n * Takes any number of features and returns a rectangular {@link Polygon} that encompasses all vertices.\n *\n * @name envelope\n * @param {(Feature|FeatureCollection)} features input features\n * @return {Feature<Polygon>} a rectangular Polygon feature that encompasses all vertices\n * @example\n * var fc = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {\n *         \"name\": \"Location A\"\n *       },\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-75.343, 39.984]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {\n *         \"name\": \"Location B\"\n *       },\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-75.833, 39.284]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {\n *         \"name\": \"Location C\"\n *       },\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-75.534, 39.123]\n *       }\n *     }\n *   ]\n * };\n *\n * var enveloped = turf.envelope(fc);\n *\n * var resultFeatures = fc.features.concat(enveloped);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\n\nmodule.exports = function (features) {\n    return bboxPolygon(bbox(features));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/envelope/index.js\n// module id = 61\n// module chunks = 0","var polygon = require('@turf/helpers').polygon;\n\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @return {Feature<Polygon>} a Polygon representation of the bounding box\n * @addToMap poly\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //=poly\n */\n\nmodule.exports = function (bbox) {\n    var lowLeft = [bbox[0], bbox[1]];\n    var topLeft = [bbox[0], bbox[3]];\n    var topRight = [bbox[2], bbox[3]];\n    var lowRight = [bbox[2], bbox[1]];\n\n    return polygon([[\n        lowLeft,\n        lowRight,\n        topRight,\n        topLeft,\n        lowLeft\n    ]]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/bbox-polygon/index.js\n// module id = 62\n// module chunks = 0","var destination = require('@turf/destination');\nvar helpers = require('@turf/helpers');\nvar polygon = helpers.polygon;\n\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>} center center point\n * @param {number} radius radius of the circle\n * @param {number} [steps=64] number of steps\n * @param {string} [units=kilometers] miles, kilometers, degrees, or radians\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = turf.point([-75.343, 39.984]);\n * var radius = 5;\n * var steps = 10;\n * var units = 'kilometers';\n *\n * var circle = turf.circle(center, radius, steps, units);\n *\n * //=circle\n */\nmodule.exports = function (center, radius, steps, units) {\n    steps = steps || 64;\n    var coordinates = [];\n\n    for (var i = 0; i < steps; i++) {\n        coordinates.push(destination(center, radius, i * 360 / steps, units).geometry.coordinates);\n    }\n\n    coordinates.push(coordinates[0]);\n\n    return polygon([coordinates]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/circle/index.js\n// module id = 63\n// module chunks = 0","//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\nvar getCoord = require('@turf/invariant').getCoord;\nvar helpers = require('@turf/helpers');\nvar point = helpers.point;\nvar distanceToRadians = helpers.distanceToRadians;\n\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in degrees, radians, miles, or kilometers; and bearing in degrees. This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Feature<Point>} from starting point\n * @param {number} distance distance from the starting point\n * @param {number} bearing ranging from -180 to 180\n * @param {string} [units=kilometers] miles, kilometers, degrees, or radians\n * @returns {Feature<Point>} destination point\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.343, 39.984]\n *   }\n * };\n * var distance = 50;\n * var bearing = 90;\n * var units = 'miles';\n *\n * var destination = turf.destination(point, distance, bearing, units);\n * destination.properties['marker-color'] = '#f00';\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [point, destination]\n * };\n *\n * //=result\n */\nmodule.exports = function (from, distance, bearing, units) {\n    var degrees2radians = Math.PI / 180;\n    var radians2degrees = 180 / Math.PI;\n    var coordinates1 = getCoord(from);\n    var longitude1 = degrees2radians * coordinates1[0];\n    var latitude1 = degrees2radians * coordinates1[1];\n    var bearing_rad = degrees2radians * bearing;\n\n    var radians = distanceToRadians(distance, units);\n\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearing_rad));\n    var longitude2 = longitude1 + Math.atan2(Math.sin(bearing_rad) *\n        Math.sin(radians) * Math.cos(latitude1),\n        Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n\n    return point([radians2degrees * longitude2, radians2degrees * latitude2]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/destination/index.js\n// module id = 64\n// module chunks = 0","var bearing = require('@turf/bearing');\nvar destination = require('@turf/destination');\nvar distance = require('@turf/distance');\n\n/**\n * Takes two {@link Point|points} and returns a point midway between them.\n * The midpoint is calculated geodesically, meaning the curvature of the earth is taken into account.\n *\n * @name midpoint\n * @param {Feature<Point>} from first point\n * @param {Feature<Point>} to second point\n * @returns {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * var pt1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [144.834823, -37.771257]\n *   }\n * };\n * var pt2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [145.14244, -37.830937]\n *   }\n * };\n *\n * var midpointed = turf.midpoint(pt1, pt2);\n * midpointed.properties['marker-color'] = '#f00';\n *\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [pt1, pt2, midpointed]\n * };\n *\n * //=result\n */\nmodule.exports = function (from, to) {\n    var dist = distance(from, to, 'miles');\n    var heading = bearing(from, to);\n    var midpoint = destination(from, dist / 2, heading, 'miles');\n\n    return midpoint;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/midpoint/index.js\n// module id = 65\n// module chunks = 0","var getCoord = require('@turf/invariant').getCoord;\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them.\n *\n * @name bearing\n * @param {Feature<Point>} start starting Point\n * @param {Feature<Point>} end ending Point\n * @param {boolean} [final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees\n * @addToMap point1, point2\n * @example\n * var point1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": '#f00'\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.343, 39.984]\n *   }\n * };\n * var point2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": '#0f0'\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.534, 39.123]\n *   }\n * };\n *\n * var bearing = turf.bearing(point1, point2);\n * point1.properties.bearing = bearing\n * //=bearing\n */\nfunction bearing(start, end, final) {\n    if (final === true) return calculateFinalBearing(start, end);\n\n    var degrees2radians = Math.PI / 180;\n    var radians2degrees = 180 / Math.PI;\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n\n    var lon1 = degrees2radians * coordinates1[0];\n    var lon2 = degrees2radians * coordinates2[0];\n    var lat1 = degrees2radians * coordinates1[1];\n    var lat2 = degrees2radians * coordinates2[1];\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n\n    var bear = radians2degrees * Math.atan2(a, b);\n\n    return bear;\n}\n\n/**\n * Calculates Final Bearing\n * @private\n * @param {Feature<Point>} start starting Point\n * @param {Feature<Point>} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n\nmodule.exports = bearing;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/bearing/index.js\n// module id = 66\n// module chunks = 0","// http://stackoverflow.com/questions/839899/how-do-i-calculate-a-point-on-a-circles-circumference\n// radians = degrees * (pi/180)\n// https://github.com/bjornharrtell/jsts/blob/master/examples/buffer.html\n\nvar helpers = require('@turf/helpers');\nvar featureCollection = helpers.featureCollection;\nvar jsts = require('jsts');\nvar normalize = require('@mapbox/geojson-normalize');\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * @name buffer\n * @param {(Feature|FeatureCollection)} feature input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} units any of the options supported by turf units\n * @return {FeatureCollection<Polygon>|FeatureCollection<MultiPolygon>|Polygon|MultiPolygon} buffered features\n * @addToMap pt, buffered\n * @example\n * var pt = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-90.548630, 14.616599]\n *   }\n * };\n * var unit = 'miles';\n *\n * var buffered = turf.buffer(pt, 500, unit);\n *\n * //=buffered\n */\n\nmodule.exports = function (feature, radius, units) {\n\n    var degrees = helpers.distanceToDegrees(radius, units);\n    var fc = normalize(feature);\n    var buffered = normalize(featureCollection(fc.features.map(function (f) {\n        return bufferOp(f, degrees);\n    })));\n\n    if (buffered.features.length > 1) return buffered;\n    else if (buffered.features.length === 1) return buffered.features[0];\n};\n\nfunction bufferOp(feature, radius) {\n    var reader = new jsts.io.GeoJSONReader();\n    var geom = reader.read(feature.geometry);\n    var buffered = geom.buffer(radius);\n    var writer = new jsts.io.GeoJSONWriter();\n    buffered = writer.write(buffered);\n\n    return {\n        type: 'Feature',\n        geometry: buffered,\n        properties: {}\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/buffer/index.js\n// module id = 67\n// module chunks = 0","module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@mapbox/geojson-normalize/index.js\n// module id = 68\n// module chunks = 0","var bbox = require('@turf/bbox'),\n    point = require('@turf/helpers').point;\n\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {(Feature|FeatureCollection)} layer input features\n * @return {Feature<Point>} a Point feature at the absolute center point of all input features\n * @addToMap features, centerPt\n * @example\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.522259, 35.4691]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.502754, 35.463455]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.508269, 35.463245]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.516809, 35.465779]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.515372, 35.467072]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.509363, 35.463053]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.511123, 35.466601]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.518547, 35.469327]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.519706, 35.469659]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.517839, 35.466998]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.508678, 35.464942]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [-97.514914, 35.463453]\n *       }\n *     }\n *   ]\n * };\n *\n * var centerPt = turf.center(features);\n * centerPt.properties['marker-size'] = 'large';\n * centerPt.properties['marker-color'] = '#000';\n *\n * var resultFeatures = features.features.concat(centerPt);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\n\nmodule.exports = function (layer) {\n    var ext = bbox(layer);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return point([x, y]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/center/index.js\n// module id = 69\n// module chunks = 0","var each = require('@turf/meta').coordEach,\n    centroid = require('@turf/centroid'),\n    convex = require('@turf/convex'),\n    explode = require('@turf/explode'),\n    point = require('@turf/helpers').point;\n\n/**\n * Takes a [feature](http://geojson.org/geojson-spec.html#feature-objects)\n * or a [featureCollection](http://geojson.org/geojson-spec.html#feature-collection-objects)\n * and returns its [center of mass](https://en.wikipedia.org/wiki/Center_of_mass)\n * using this formula: [Centroid of Polygon](https://en.wikipedia.org/wiki/Centroid#Centroid_of_polygon).\n *\n * @param {FeatureCollection|Feature} fc - the feature collection or feature\n * @returns {Feature<Point>} the center of mass\n * @example\n * var feature = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [\n *       [\n *         [\n *           4.854240417480469,\n *           45.77258200374433\n *         ],\n *         [\n *           4.8445844650268555,\n *           45.777431068484894\n *         ],\n *         [\n *           4.845442771911621,\n *           45.778658234059755\n *         ],\n *         [\n *           4.845914840698242,\n *           45.779376562352425\n *         ],\n *         [\n *           4.846644401550292,\n *           45.78021460033108\n *         ],\n *         [\n *           4.847245216369629,\n *           45.78078326178593\n *         ],\n *         [\n *           4.848060607910156,\n *           45.78138184652523\n *         ],\n *         [\n *           4.8487043380737305,\n *           45.78186070968964\n *         ],\n *         [\n *           4.849562644958495,\n *           45.78248921135124\n *         ],\n *         [\n *           4.850893020629883,\n *           45.78302792142197\n *         ],\n *         [\n *           4.852008819580077,\n *           45.78374619341895\n *         ],\n *         [\n *           4.852995872497559,\n *           45.784075398324866\n *         ],\n *         [\n *           4.853854179382324,\n *           45.78443452873236\n *         ],\n *         [\n *           4.8549699783325195,\n *           45.78470387501975\n *         ],\n *         [\n *           4.85569953918457,\n *           45.784793656826345\n *         ],\n *         [\n *           4.857330322265624,\n *           45.784853511283764\n *         ],\n *         [\n *           4.858231544494629,\n *           45.78494329284938\n *         ],\n *         [\n *           4.859304428100585,\n *           45.784883438488365\n *         ],\n *         [\n *           4.858360290527344,\n *           45.77294120818474\n *         ],\n *         [\n *           4.854240417480469,\n *           45.77258200374433\n *         ]\n *       ]\n *     ]\n *   }\n * };\n *\n * var centerOfMass = turf.centerOfMass(feature);\n *\n * //=centerOfMass\n */\nfunction centerOfMass(fc) {\n    if (fc.type === 'Feature' && fc.geometry.type === 'Polygon') {\n        var coords = [];\n        each(fc, function (coord) {\n            coords.push(coord);\n        });\n\n        // First, we neutralize the feature (set it around coordinates [0,0]) to prevent rounding errors\n        // We take any point to translate all the points around 0\n        var centre = centroid(fc);\n        var translation = centre.geometry.coordinates;\n        var sx = 0;\n        var sy = 0;\n        var sArea = 0;\n        var i, pi, pj, xi, xj, yi, yj, a;\n\n        var neutralizedPoints = coords.map(function (point) {\n            return [\n                point[0] - translation[0],\n                point[1] - translation[1]\n            ];\n        });\n\n        for (i = 0; i < coords.length - 1; i++) {\n            // pi is the current point\n            pi = neutralizedPoints[i];\n            xi = pi[0];\n            yi = pi[1];\n\n            // pj is the next point (pi+1)\n            pj = neutralizedPoints[i + 1];\n            xj = pj[0];\n            yj = pj[1];\n\n            // a is the common factor to compute the signed area and the final coordinates\n            a = xi * yj - xj * yi;\n\n            // sArea is the sum used to compute the signed area\n            sArea += a;\n\n            // sx and sy are the sums used to compute the final coordinates\n            sx += (xi + xj) * a;\n            sy += (yi + yj) * a;\n        }\n\n        // Shape has no area: fallback on turf.centroid\n        if (sArea === 0) {\n            return centre;\n        } else {\n            // Compute the signed area, and factorize 1/6A\n            var area = sArea * 0.5;\n            var areaFactor = 1 / (6 * area);\n\n            // Compute the final coordinates, adding back the values that have been neutralized\n            return point([\n                translation[0] + areaFactor * sx,\n                translation[1] + areaFactor * sy\n            ]);\n        }\n    } else {\n        // Not a polygon: Compute the convex hull and work with that\n        var hull = convex(explode(fc));\n\n        if (hull) {\n            return module.exports(hull);\n        } else {\n            // Hull is empty: fallback on the centroid\n            return centroid(fc);\n        }\n    }\n}\n\nmodule.exports = centerOfMass;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/center-of-mass/index.js\n// module id = 70\n// module chunks = 0","var each = require('@turf/meta').coordEach;\nvar point = require('@turf/helpers').point;\n\n/**\n * Takes one or more features and calculates the centroid using\n * the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating\n * the centroid of a set of polygons.\n *\n * @name centroid\n * @param {(Feature|FeatureCollection)} features input features\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [105.818939,21.004714],\n *       [105.818939,21.061754],\n *       [105.890007,21.061754],\n *       [105.890007,21.004714],\n *       [105.818939,21.004714]\n *     ]]\n *   }\n * };\n *\n * var centroidPt = turf.centroid(poly);\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly, centroidPt]\n * };\n *\n * //=result\n */\nmodule.exports = function (features) {\n    var xSum = 0, ySum = 0, len = 0;\n    each(features, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    }, true);\n    return point([xSum / len, ySum / len]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/centroid/index.js\n// module id = 71\n// module chunks = 0","var featureCollection = require('@turf/helpers').featureCollection;\nvar featureEach = require('@turf/meta').featureEach;\nvar coordEach = require('@turf/meta').coordEach;\nvar point = require('@turf/helpers').point;\n\n/**\n * Takes a feature or set of features and returns all positions as\n * {@link Point|points}.\n *\n * @name explode\n * @param {(Feature|FeatureCollection)} geojson input features\n * @returns {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [177.434692, -17.77517],\n *       [177.402076, -17.779093],\n *       [177.38079, -17.803937],\n *       [177.40242, -17.826164],\n *       [177.438468, -17.824857],\n *       [177.454948, -17.796746],\n *       [177.434692, -17.77517]\n *     ]]\n *   }\n * };\n *\n * var points = turf.explode(poly);\n *\n * //=poly\n *\n * //=points\n */\nmodule.exports = function (geojson) {\n    var points = [];\n    if (geojson.type === 'FeatureCollection') {\n        featureEach(geojson, function (feature) {\n            coordEach(feature, function (coord) {\n                points.push(point(coord, feature.properties));\n            });\n        });\n    } else {\n        coordEach(geojson, function (coord) {\n            points.push(point(coord, geojson.properties));\n        });\n    }\n    return featureCollection(points);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/explode/index.js\n// module id = 72\n// module chunks = 0","var meta = require('@turf/meta');\n\n/**\n * Combines a {@link FeatureCollection} of {@link Point},\n * {@link LineString}, or {@link Polygon} features\n * into {@link MultiPoint}, {@link MultiLineString}, or\n * {@link MultiPolygon} features.\n *\n * @name combine\n * @param {FeatureCollection<(Point|LineString|Polygon)>} fc a FeatureCollection of any type\n * @return {FeatureCollection<(MultiPoint|MultiLineString|MultiPolygon)>} a FeatureCollection of corresponding type to input\n * @example\n * var fc = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.026432, 47.49134]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.074497, 47.509548]\n *       }\n *     }\n *   ]\n * };\n *\n * var combined = turf.combine(fc);\n *\n * //=combined\n */\n\nmodule.exports = function (fc) {\n    var groups = {\n        MultiPoint: {coordinates: [], properties: []},\n        MultiLineString: {coordinates: [], properties: []},\n        MultiPolygon: {coordinates: [], properties: []}\n    };\n\n    var multiMapping = Object.keys(groups).reduce(function (memo, item) {\n        memo[item.replace('Multi', '')] = item;\n        return memo;\n    }, {});\n\n    function addToGroup(feature, key, multi) {\n        if (!multi) {\n            groups[key].coordinates.push(feature.geometry.coordinates);\n        } else {\n            groups[key].coordinates = groups[key].coordinates.concat(feature.geometry.coordinates);\n        }\n        groups[key].properties.push(feature.properties);\n    }\n\n    meta.featureEach(fc, function (feature) {\n        if (!feature.geometry) return;\n        if (groups[feature.geometry.type]) {\n            addToGroup(feature, feature.geometry.type, true);\n        } else if (multiMapping[feature.geometry.type]) {\n            addToGroup(feature, multiMapping[feature.geometry.type], false);\n        }\n    });\n\n    return {\n        type: 'FeatureCollection',\n        features: Object.keys(groups)\n            .filter(function (key) {\n                return groups[key].coordinates.length;\n            })\n            .sort()\n            .map(function (key) {\n                return {\n                    type: 'Feature',\n                    properties: {\n                        collectedProperties: groups[key].properties\n                    },\n                    geometry: {\n                        type: key,\n                        coordinates: groups[key].coordinates\n                    }\n                };\n            })\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/combine/index.js\n// module id = 73\n// module chunks = 0","var polygon = require('@turf/helpers').polygon;\nvar earcut = require('earcut');\n\n\n/**\n * Tesselates a {@link Feature<Polygon>} into a {@link FeatureCollection<Polygon>} of triangles\n * using [earcut](https://github.com/mapbox/earcut).\n *\n * @name tesselate\n * @param {Feature<Polygon>} poly the polygon to tesselate\n * @returns {FeatureCollection<Polygon>} a geometrycollection feature\n * @example\n * var poly = turf.random('polygon').features[0];\n *\n * var triangles = turf.tesselate(poly);\n *\n * //=triangles\n */\nmodule.exports = function (poly) {\n    if (!poly.geometry || (poly.geometry.type !== 'Polygon' && poly.geometry.type !== 'MultiPolygon')) {\n        throw new Error('input must be a Polygon or MultiPolygon');\n    }\n\n    var fc = {type: 'FeatureCollection', features: []};\n\n    if (poly.geometry.type === 'Polygon') {\n        fc.features = processPolygon(poly.geometry.coordinates);\n    } else {\n        poly.geometry.coordinates.forEach(function (coordinates) {\n            fc.features = fc.features.concat(processPolygon(coordinates));\n        });\n    }\n\n    return fc;\n};\n\nfunction processPolygon(coordinates) {\n    var data = flattenCoords(coordinates);\n    var dim = 2;\n    var result = earcut(data.vertices, data.holes, dim);\n\n    var features = [];\n    var vertices = [];\n\n    result.forEach(function (vert, i) {\n        var index = result[i];\n        vertices.push([data.vertices[index * dim], data.vertices[index * dim + 1]]);\n    });\n\n    for (var i = 0; i < vertices.length; i += 3) {\n        var coords = vertices.slice(i, i + 3);\n        coords.push(vertices[i]);\n        features.push(polygon([coords]));\n    }\n\n    return features;\n}\n\nfunction flattenCoords(data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n\n    return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/tesselate/index.js\n// module id = 74\n// module chunks = 0","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/earcut/src/earcut.js\n// module id = 75\n// module chunks = 0","// depend on jsts for now http://bjornharrtell.github.io/jsts/\nvar jsts = require('jsts');\n\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {(Feature|undefined)} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `undefined`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //=intersection\n */\nmodule.exports = function (poly1, poly2) {\n    var geom1, geom2;\n    if (poly1.type === 'Feature') geom1 = poly1.geometry;\n    else geom1 = poly1;\n    if (poly2.type === 'Feature') geom2 = poly2.geometry;\n    else geom2 = poly2;\n    var reader = new jsts.io.GeoJSONReader();\n    var a = reader.read(JSON.stringify(geom1));\n    var b = reader.read(JSON.stringify(geom2));\n    var intersection = a.intersection(b);\n\n    if (intersection.isEmpty()) {\n        return undefined;\n    }\n\n    var writer = new jsts.io.GeoJSONWriter();\n\n    var geojsonGeometry = writer.write(intersection);\n    return {\n        type: 'Feature',\n        properties: {},\n        geometry: geojsonGeometry\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/intersect/index.js\n// module id = 76\n// module chunks = 0","var distance = require('@turf/distance');\n\n/**\n * Takes a reference {@link Point|point} and a FeatureCollection of Features\n * with Point geometries and returns the\n * point from the FeatureCollection closest to the reference. This calculation\n * is geodesic.\n *\n * @name nearest\n * @param {Feature<Point>} targetPoint the reference point\n * @param {FeatureCollection<Point>} points against input point set\n * @returns {Feature<Point>} the closest point in the set to the reference point\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [28.965797, 41.010086]\n *   }\n * };\n * var against = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [28.973865, 41.011122]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [28.948459, 41.024204]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [28.938674, 41.013324]\n *       }\n *     }\n *   ]\n * };\n *\n * var nearest = turf.nearest(point, against);\n * nearest.properties['marker-color'] = '#f00';\n *\n * var resultFeatures = against.features.concat(point);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\nmodule.exports = function (targetPoint, points) {\n    var nearestPoint, minDist = Infinity;\n    for (var i = 0; i < points.features.length; i++) {\n        var distanceToPoint = distance(targetPoint, points.features[i], 'miles');\n        if (distanceToPoint < minDist) {\n            nearestPoint = points.features[i];\n            minDist = distanceToPoint;\n        }\n    }\n    return nearestPoint;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/nearest/index.js\n// module id = 77\n// module chunks = 0","var random = require('geojson-random');\n\n/**\n * Generates random {@link GeoJSON} data, including {@link Point|Points} and {@link Polygon|Polygons}, for testing\n * and experimentation.\n *\n * @name random\n * @param {string} [type='point'] type of features desired: 'points' or 'polygons'\n * @param {number} [count=1] how many geometries should be generated.\n * @param {Object} options options relevant to the feature desired. Can include:\n * @param {Array<number>} options.bbox a bounding box inside of which geometries\n * are placed. In the case of {@link Point} features, they are guaranteed to be within this bounds,\n * while {@link Polygon} features have their centroid within the bounds.\n * @param {number} [options.num_vertices=10] options.vertices the number of vertices added\n * to polygon features.\n * @param {Number} [options.max_radial_length=10] the total number of decimal\n * degrees longitude or latitude that a polygon can extent outwards to\n * from its center.\n * @returns {FeatureCollection} generated random features\n * @example\n * var points = turf.random('points', 100, {\n *   bbox: [-70, 40, -60, 60]\n * });\n *\n * //=points\n *\n * var polygons = turf.random('polygons', 4, {\n *   bbox: [-70, 40, -60, 60]\n * });\n *\n * //=polygons\n */\nmodule.exports = function (type, count, options) {\n    options = options || {};\n    count = count || 1;\n    switch (type) {\n    case 'point':\n    case 'points':\n    case undefined:\n        return random.point(count, options.bbox);\n    case 'polygon':\n    case 'polygons':\n        return random.polygon(\n                count,\n                options.num_vertices,\n                options.max_radial_length,\n                options.bbox);\n    default:\n        throw new Error('Unknown type given: valid options are points and polygons');\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/random/index.js\n// module id = 78\n// module chunks = 0","module.exports = function() {\n    throw new Error('call .point() or .polygon() instead');\n};\n\nfunction position(bbox) {\n    if (bbox) return coordInBBBOX(bbox);\n    else return [lon(), lat()];\n}\n\nmodule.exports.position = position;\n\nmodule.exports.point = function(count, bbox) {\n    var features = [];\n    for (i = 0; i < count; i++) {\n        features.push(feature(bbox ? point(position(bbox)) : point()));\n    }\n    return collection(features);\n};\n\nmodule.exports.polygon = function(count, num_vertices, max_radial_length, bbox) {\n    if (typeof num_vertices !== 'number') num_vertices = 10;\n    if (typeof max_radial_length !== 'number') max_radial_length = 10;\n    var features = [];\n    for (i = 0; i < count; i++) {\n        var vertices = [],\n            circle_offsets = Array.apply(null,\n                new Array(num_vertices + 1)).map(Math.random);\n\n        circle_offsets.forEach(sumOffsets);\n        circle_offsets.forEach(scaleOffsets);\n        vertices[vertices.length - 1] = vertices[0]; // close the ring\n\n        // center the polygon around something\n        vertices = vertices.map(vertexToCoordinate(position(bbox)));\n        features.push(feature(polygon([vertices])));\n    }\n\n    function sumOffsets(cur, index, arr) {\n        arr[index] = (index > 0) ? cur + arr[index - 1] : cur;\n    }\n\n    function scaleOffsets(cur, index) {\n        cur = cur * 2 * Math.PI / circle_offsets[circle_offsets.length - 1];\n        var radial_scaler = Math.random();\n        vertices.push([\n            radial_scaler * max_radial_length * Math.sin(cur),\n            radial_scaler * max_radial_length * Math.cos(cur)\n        ]);\n    }\n\n    return collection(features);\n};\n\n\nfunction vertexToCoordinate(hub) {\n    return function(cur, index) { return [cur[0] + hub[0], cur[1] + hub[1]]; };\n}\n\nfunction rnd() { return Math.random() - 0.5; }\nfunction lon() { return rnd() * 360; }\nfunction lat() { return rnd() * 180; }\n\nfunction point(coordinates) {\n    return {\n        type: 'Point',\n        coordinates: coordinates || [lon(), lat()]\n    };\n}\n\nfunction coordInBBBOX(bbox) {\n    return [\n        (Math.random() * (bbox[2] - bbox[0])) + bbox[0],\n        (Math.random() * (bbox[3] - bbox[1])) + bbox[1]];\n}\n\nfunction pointInBBBOX() {\n    return {\n        type: 'Point',\n        coordinates: [lon(), lat()]\n    };\n}\n\nfunction polygon(coordinates) {\n    return {\n        type: 'Polygon',\n        coordinates: coordinates\n    };\n}\n\nfunction feature(geom) {\n    return {\n        type: 'Feature',\n        geometry: geom,\n        properties: {}\n    };\n}\n\nfunction collection(f) {\n    return {\n        type: 'FeatureCollection',\n        features: f\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/geojson-random/index.js\n// module id = 79\n// module chunks = 0","var point = require('@turf/helpers').point;\n\n/**\n * Takes a {@link LineString|linestring}, {@link MultiLineString|multi-linestring}, {@link MultiPolygon|multi-polygon}, or {@link Polygon|polygon} and returns {@link Point|points} at all self-intersections.\n *\n * @name kinks\n * @param {Feature<LineString|MultiLineString|MultiPolygon|Polygon>} featureIn input feature\n * @returns {FeatureCollection<Point>} self-intersections\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-12.034835, 8.901183],\n *       [-12.060413, 8.899826],\n *       [-12.03638, 8.873199],\n *       [-12.059383, 8.871418],\n *       [-12.034835, 8.901183]\n *     ]]\n *   }\n * };\n *\n * var kinks = turf.kinks(poly);\n *\n * var resultFeatures = kinks.features.concat(poly);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\nmodule.exports = function (featureIn) {\n    var coordinates;\n    var feature;\n    var results = {\n        type: 'FeatureCollection',\n        features: []\n    };\n    if (featureIn.type === 'Feature') {\n        feature = featureIn.geometry;\n    } else {\n        feature = featureIn;\n    }\n    if (feature.type === 'LineString') {\n        coordinates = [feature.coordinates];\n    } else if (feature.type === 'MultiLineString') {\n        coordinates = feature.coordinates;\n    } else if (feature.type === 'MultiPolygon') {\n        coordinates = [].concat.apply([], feature.coordinates);\n    } else if (feature.type === 'Polygon') {\n        coordinates = feature.coordinates;\n    } else {\n        throw new Error('Input must be a LineString, MultiLineString, ' +\n            'Polygon, or MultiPolygon Feature or Geometry');\n    }\n    coordinates.forEach(function (segment1) {\n        coordinates.forEach(function (segment2) {\n            for (var i = 0; i < segment1.length - 1; i++) {\n                for (var k = 0; k < segment2.length - 1; k++) {\n                    // don't check adjacent sides of a given segment, since of course they intersect in a vertex.\n                    if (segment1 === segment2 && (Math.abs(i - k) === 1 || Math.abs(i - k) === segment1.length - 2)) {\n                        continue;\n                    }\n\n                    var intersection = lineIntersects(segment1[i][0], segment1[i][1], segment1[i + 1][0], segment1[i + 1][1],\n                        segment2[k][0], segment2[k][1], segment2[k + 1][0], segment2[k + 1][1]);\n                    if (intersection) {\n                        results.features.push(point([intersection[0], intersection[1]]));\n                    }\n                }\n            }\n        });\n    });\n    return results;\n};\n\n\n// modified from http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\nfunction lineIntersects(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n    // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n    var denominator, a, b, numerator1, numerator2,\n        result = {\n            x: null,\n            y: null,\n            onLine1: false,\n            onLine2: false\n        };\n    denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n    if (denominator === 0) {\n        if (result.x !== null && result.y !== null) {\n            return result;\n        } else {\n            return false;\n        }\n    }\n    a = line1StartY - line2StartY;\n    b = line1StartX - line2StartX;\n    numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n    numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n\n    // if we cast these lines infinitely in both directions, they intersect here:\n    result.x = line1StartX + (a * (line1EndX - line1StartX));\n    result.y = line1StartY + (a * (line1EndY - line1StartY));\n\n    // if line1 is a segment and line2 is infinite, they intersect if:\n    if (a >= 0 && a <= 1) {\n        result.onLine1 = true;\n    }\n    // if line2 is a segment and line1 is infinite, they intersect if:\n    if (b >= 0 && b <= 1) {\n        result.onLine2 = true;\n    }\n    // if line1 and line2 are segments, they intersect if both of the above are true\n    if (result.onLine1 && result.onLine2) {\n        return [result.x, result.y];\n    } else {\n        return false;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/kinks/index.js\n// module id = 80\n// module chunks = 0","var featureCollection = require('@turf/helpers').featureCollection;\nvar centroid = require('@turf/center');\nvar distance = require('@turf/distance');\nvar inside = require('@turf/inside');\nvar explode = require('@turf/explode');\n\n/**\n * Takes a feature and returns a {@link Point} guaranteed to be on the surface of the feature.\n *\n * * Given a {@link Polygon}, the point will be in the area of the polygon\n * * Given a {@link LineString}, the point will be along the string\n * * Given a {@link Point}, the point will the same as the input\n *\n * @param {(Feature|FeatureCollection)} fc any feature or set of features\n * @returns {Feature} a point on the surface of `input`\n * @example\n * // create a random polygon\n * var polygon = turf.random('polygon');\n *\n * //=polygon\n *\n * var pointOnPolygon = turf.pointOnSurface(polygon);\n *\n* var resultFeatures = polygon.features.concat(pointOnPolygon);\n* var result = {\n*   \"type\": \"FeatureCollection\",\n*   \"features\": resultFeatures\n* };\n *\n * //=result\n */\nfunction pointOnSurface(fc) {\n    // normalize\n    if (fc.type !== 'FeatureCollection') {\n        if (fc.type !== 'Feature') {\n            fc = {\n                type: 'Feature',\n                geometry: fc,\n                properties: {}\n            };\n        }\n        fc = featureCollection([fc]);\n    }\n\n    //get centroid\n    var cent = centroid(fc);\n\n    // check to see if centroid is on surface\n    var onSurface = false;\n    var i = 0;\n    while (!onSurface && i < fc.features.length) {\n        var geom = fc.features[i].geometry;\n        var x, y, x1, y1, x2, y2, k;\n        var onLine = false;\n        if (geom.type === 'Point') {\n            if (cent.geometry.coordinates[0] === geom.coordinates[0] &&\n        cent.geometry.coordinates[1] === geom.coordinates[1]) {\n                onSurface = true;\n            }\n        } else if (geom.type === 'MultiPoint') {\n            var onMultiPoint = false;\n            k = 0;\n            while (!onMultiPoint && k < geom.coordinates.length) {\n                if (cent.geometry.coordinates[0] === geom.coordinates[k][0] &&\n          cent.geometry.coordinates[1] === geom.coordinates[k][1]) {\n                    onSurface = true;\n                    onMultiPoint = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'LineString') {\n            k = 0;\n            while (!onLine && k < geom.coordinates.length - 1) {\n                x = cent.geometry.coordinates[0];\n                y = cent.geometry.coordinates[1];\n                x1 = geom.coordinates[k][0];\n                y1 = geom.coordinates[k][1];\n                x2 = geom.coordinates[k + 1][0];\n                y2 = geom.coordinates[k + 1][1];\n                if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                    onLine = true;\n                    onSurface = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'MultiLineString') {\n            var j = 0;\n            while (j < geom.coordinates.length) {\n                onLine = false;\n                k = 0;\n                var line = geom.coordinates[j];\n                while (!onLine && k < line.length - 1) {\n                    x = cent.geometry.coordinates[0];\n                    y = cent.geometry.coordinates[1];\n                    x1 = line[k][0];\n                    y1 = line[k][1];\n                    x2 = line[k + 1][0];\n                    y2 = line[k + 1][1];\n                    if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                        onLine = true;\n                        onSurface = true;\n                    }\n                    k++;\n                }\n                j++;\n            }\n        } else if (geom.type === 'Polygon' || geom.type === 'MultiPolygon') {\n            var f = {\n                type: 'Feature',\n                geometry: geom,\n                properties: {}\n            };\n            if (inside(cent, f)) {\n                onSurface = true;\n            }\n        }\n        i++;\n    }\n    if (onSurface) {\n        return cent;\n    } else {\n        var vertices = featureCollection([]);\n        for (i = 0; i < fc.features.length; i++) {\n            vertices.features = vertices.features.concat(explode(fc.features[i]).features);\n        }\n        var closestVertex;\n        var closestDistance = Infinity;\n        for (i = 0; i < vertices.features.length; i++) {\n            var dist = distance(cent, vertices.features[i], 'miles');\n            if (dist < closestDistance) {\n                closestDistance = dist;\n                closestVertex = vertices.features[i];\n            }\n        }\n        return closestVertex;\n    }\n}\n\nfunction pointOnSegment(x, y, x1, y1, x2, y2) {\n    var ab = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    var ap = Math.sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));\n    var pb = Math.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y));\n    if (ab === ap + pb) {\n        return true;\n    }\n}\n\nmodule.exports = pointOnSurface;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/point-on-surface/index.js\n// module id = 81\n// module chunks = 0","var area = require('@mapbox/geojson-area').geometry;\nvar geomReduce = require('@turf/meta').geomReduce;\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {FeatureCollection|Feature<any>} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @addToMap polygon\n * @example\n * var polygon = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [\n *       [\n *         [125, -15],\n *         [113, -22],\n *         [117, -37],\n *         [130, -33],\n *         [148, -39],\n *         [154, -27],\n *         [144, -15],\n *         [125, -15]\n *       ]\n *     ]\n *   }\n * }\n * var area = turf.area(polygon);\n * //=area => square meters\n * //=polygon\n */\nmodule.exports = function (geojson) {\n    return geomReduce(geojson, function (value, geometry) {\n        return value + area(geometry);\n    }, 0);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/area/index.js\n// module id = 82\n// module chunks = 0","var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@mapbox/geojson-area/index.js\n// module id = 83\n// module chunks = 0","module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/wgs84/index.js\n// module id = 84\n// module chunks = 0","var measureDistance = require('@turf/distance');\nvar point = require('@turf/helpers').point;\nvar bearing = require('@turf/bearing');\nvar destination = require('@turf/destination');\n\n/**\n * Takes a {@link LineString|line} and returns a {@link Point|point} at a specified distance along the line.\n *\n * @name along\n * @param {Feature<LineString>} line input line\n * @param {number} distance distance along the line\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} Point `distance` `units` along the line\n * @addToMap along, line\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-77.031669, 38.878605],\n *       [-77.029609, 38.881946],\n *       [-77.020339, 38.884084],\n *       [-77.025661, 38.885821],\n *       [-77.021884, 38.889563],\n *       [-77.019824, 38.892368]\n *     ]\n *   }\n * };\n *\n * var along = turf.along(line, 1, 'miles');\n * //=along\n */\nmodule.exports = function (line, distance, units) {\n    var coords;\n    if (line.type === 'Feature') coords = line.geometry.coordinates;\n    else if (line.type === 'LineString') coords = line.coordinates;\n    else throw new Error('input must be a LineString Feature or Geometry');\n\n    var travelled = 0;\n    for (var i = 0; i < coords.length; i++) {\n        if (distance >= travelled && i === coords.length - 1) break;\n        else if (travelled >= distance) {\n            var overshot = distance - travelled;\n            if (!overshot) return point(coords[i]);\n            else {\n                var direction = bearing(coords[i], coords[i - 1]) - 180;\n                var interpolated = destination(coords[i], overshot, direction, units);\n                return interpolated;\n            }\n        } else {\n            travelled += measureDistance(coords[i], coords[i + 1], units);\n        }\n    }\n    return point(coords[coords.length - 1]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/along/index.js\n// module id = 85\n// module chunks = 0","var distance = require('@turf/distance');\nvar featureEach = require('@turf/meta').featureEach;\nvar coordReduce = require('@turf/meta').coordReduce;\nvar geomEach = require('@turf/meta').geomEach;\nvar flatten = require('@turf/flatten');\nvar lineString = require('@turf/helpers').lineString;\nvar point = require('@turf/helpers').point;\n\n/**\n * Takes a {@link LineString} or {@link Polygon} and measures its length in the specified units.\n *\n * @name lineDistance\n * @param {Feature<(LineString|Polygon)>|FeatureCollection<(LineString|Polygon)>} geojson feature to measure\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * @returns {number} length feature\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-77.031669, 38.878605],\n *       [-77.029609, 38.881946],\n *       [-77.020339, 38.884084],\n *       [-77.025661, 38.885821],\n *       [-77.021884, 38.889563],\n *       [-77.019824, 38.892368]\n *     ]\n *   }\n * };\n *\n * var length = turf.lineDistance(line, 'miles');\n *\n * //=line\n *\n * //=length\n */\nmodule.exports = function lineDistance(geojson, units) {\n    // Input Validation\n    if (!geojson) throw new Error('geojson is required');\n    geomEach(geojson, function (geometry) {\n        if (geometry.type === 'Point') throw new Error('geojson cannot be a Point');\n        if (geometry.type === 'MultiPoint') throw new Error('geojson cannot be a MultiPoint');\n    });\n\n    // Calculate distance from 2-vertex line segements\n    return segmentReduce(geojson, function (previousValue, segment) {\n        var coords = segment.geometry.coordinates;\n        var start = point(coords[0]);\n        var end = point(coords[1]);\n        return previousValue + distance(start, end, units);\n    }, 0);\n};\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n *\n * @private\n * @param {FeatureCollection|Feature<any>} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, currentIndex)\n * @returns {void}\n * @example\n * var polygon = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]\n *   }\n * }\n * turf.segmentEach(polygon, function (segment) {\n *   //= segment\n * });\n */\nfunction segmentEach(geojson, callback) {\n    var count = 0;\n    featureEach(geojson, function (multiFeature) {\n        featureEach(flatten(multiFeature), function (feature) {\n            coordReduce(feature, function (previousCoords, currentCoords) {\n                var line = lineString([previousCoords, currentCoords], feature.properties);\n                callback(line, count);\n                count++;\n                return currentCoords;\n            });\n        });\n    });\n}\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n *\n * @private\n * @param {FeatureCollection|Feature<any>} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    segmentEach(geojson, function (currentSegment, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) {\n            previousValue = currentSegment;\n        } else {\n            previousValue = callback(previousValue, currentSegment, currentIndex);\n        }\n    });\n    return previousValue;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/line-distance/index.js\n// module id = 86\n// module chunks = 0","var featureEach = require('@turf/meta').featureEach;\nvar geomEach = require('@turf/meta').geomEach;\nvar getCoords = require('@turf/invariant').getCoords;\nvar helpers = require('@turf/helpers');\nvar point = helpers.point;\nvar lineString = helpers.lineString;\nvar polygon = helpers.polygon;\nvar featureCollection = helpers.featureCollection;\n\n/**\n * Flattens any {@link GeoJSON} to a {@link FeatureCollection} inspired by [geojson-flatten](https://github.com/tmcw/geojson-flatten).\n *\n * @name flatten\n * @param {Feature} geojson any valid {@link GeoJSON} with multi-geometry {@link Feature}s\n * @returns {FeatureCollection} a flattened {@link FeatureCollection}\n * @example\n * var geometry = {\n *   \"type\": \"MultiPolygon\",\n *   \"coordinates\": [\n *     [[[102.0, 2.0], [103.0, 2.0], [103.0, 3.0], [102.0, 3.0], [102.0, 2.0]]],\n *      [[[100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0]],\n *      [[100.2, 0.2], [100.8, 0.2], [100.8, 0.8], [100.2, 0.8], [100.2, 0.2]]]\n *    ]\n *  };\n *\n * var flattened = turf.flatten(geometry);\n *\n * //=flattened\n */\nfunction flatten(geojson) {\n    var type = (geojson.geometry) ? geojson.geometry.type : geojson.type;\n    switch (type) {\n    case 'MultiPoint':\n        return flattenMultiPoint(geojson);\n    case 'MultiPolygon':\n        return flattenMultiPolygon(geojson);\n    case 'MultiLineString':\n        return flattenMultiLineString(geojson);\n    case 'FeatureCollection':\n        return flattenFeatureCollection(geojson);\n    case 'GeometryCollection':\n        return flattenGeometryCollection(geojson);\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n        return featureCollection([geojson]);\n    }\n}\nmodule.exports = flatten;\n\n/**\n * Flatten MultiPoint\n *\n * @private\n * @param {Feature<MultiPoint>} geojson GeoJSON Feature\n * @returns {FeatureCollection<Point>} Feature Collection\n */\nfunction flattenMultiPoint(geojson) {\n    var points = [];\n    getCoords(geojson).forEach(function (coords) {\n        points.push(point(coords, geojson.properties));\n    });\n    return featureCollection(points);\n}\n\n/**\n * Flatten MultiLineString\n *\n * @private\n * @param {Feature<MultiLineString>} geojson GeoJSON Feature\n * @returns {FeatureCollection<LineString>} Feature Collection\n */\nfunction flattenMultiLineString(geojson) {\n    var lines = [];\n    getCoords(geojson).forEach(function (coords) {\n        lines.push(lineString(coords, geojson.properties));\n    });\n    return featureCollection(lines);\n}\n\n/**\n * Flatten MultiPolygon\n *\n * @private\n * @param {Feature<MultiPolygon>} geojson GeoJSON Feature\n * @returns {FeatureCollection<Polygon>} Feature Collection\n */\nfunction flattenMultiPolygon(geojson) {\n    var polygons = [];\n    getCoords(geojson).forEach(function (coords) {\n        polygons.push(polygon(coords, geojson.properties));\n    });\n    return featureCollection(polygons);\n}\n\n/**\n * Flatten FeatureCollection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature\n * @returns {FeatureCollection<any>} Feature Collection\n */\nfunction flattenFeatureCollection(geojson) {\n    var features = [];\n    featureEach(geojson, function (multiFeature) {\n        switch (multiFeature.geometry.type) {\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n            featureEach(flatten(multiFeature), function (feature) {\n                features.push(feature);\n            });\n            break;\n        default:\n            features.push(multiFeature);\n        }\n    });\n    return featureCollection(features);\n}\n\n/**\n * Flatten GeometryCollection\n *\n * @private\n * @param {GeometryCollection<any>} geojson GeoJSON Geometry Collection\n * @param {*} [properties] translate properties to Feature\n * @returns {FeatureCollection<any>} Feature Collection\n */\nfunction flattenGeometryCollection(geojson) {\n    var features = [];\n    geomEach(geojson, function (geometry) {\n        switch (geometry.type) {\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n            featureEach(flatten(geometry), function (feature) {\n                features.push(feature);\n            });\n            break;\n        default:\n            var feature = {\n                type: 'Feature',\n                properties: {},\n                geometry: geometry\n            };\n            features.push(feature);\n        }\n    });\n    return featureCollection(features);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/flatten/index.js\n// module id = 87\n// module chunks = 0","var linestring = require('@turf/helpers').lineString;\nvar pointOnLine = require('@turf/point-on-line');\n\n/**\n * Takes a {@link LineString|line}, a start {@link Point}, and a stop point\n * and returns a subsection of the line in-between those points.\n * The start & stop points don't need to fall exactly on the line.\n *\n * This can be useful for extracting only the part of a route between waypoints.\n *\n * @name lineSlice\n * @param {Feature<Point>} startPt starting point\n * @param {Feature<Point>} stopPt stopping point\n * @param {Feature<LineString>|LineString} line line to slice\n * @return {Feature<LineString>} sliced line\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-77.031669, 38.878605],\n *       [-77.029609, 38.881946],\n *       [-77.020339, 38.884084],\n *       [-77.025661, 38.885821],\n *       [-77.021884, 38.889563],\n *       [-77.019824, 38.892368]\n *     ]\n *   }\n * };\n * var start = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-77.029609, 38.881946]\n *   }\n * };\n * var stop = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-77.021884, 38.889563]\n *   }\n * };\n *\n * var sliced = turf.lineSlice(start, stop, line);\n *\n * //=line\n *\n * //=sliced\n */\n\nmodule.exports = function lineSlice(startPt, stopPt, line) {\n    var coords;\n    if (line.type === 'Feature') {\n        coords = line.geometry.coordinates;\n    } else if (line.type === 'LineString') {\n        coords = line.coordinates;\n    } else {\n        throw new Error('input must be a LineString Feature or Geometry');\n    }\n\n    var startVertex = pointOnLine(line, startPt);\n    var stopVertex = pointOnLine(line, stopPt);\n    var ends;\n    if (startVertex.properties.index <= stopVertex.properties.index) {\n        ends = [startVertex, stopVertex];\n    } else {\n        ends = [stopVertex, startVertex];\n    }\n    var clipLine = linestring([ends[0].geometry.coordinates], {});\n    for (var i = ends[0].properties.index + 1; i < ends[1].properties.index + 1; i++) {\n        clipLine.geometry.coordinates.push(coords[i]);\n    }\n    clipLine.geometry.coordinates.push(ends[1].geometry.coordinates);\n    return clipLine;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/line-slice/index.js\n// module id = 88\n// module chunks = 0","var distance = require('@turf/distance');\nvar point = require('@turf/helpers').point;\nvar bearing = require('@turf/bearing');\nvar destination = require('@turf/destination');\n\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the LineString.\n *\n * @name pointOnLine\n * @param {Feature<LineString>} line line to snap to\n * @param {Feature<Point>} pt point to snap from\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * @return {Feature<Point>} closest point on the `line` to `point`. The properties object will contain three values: `index`: closest point was found on nth line part, `dist`: distance between pt and the closest point, `location`: distance along the line between start and the closest point.\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [-77.031669, 38.878605],\n *       [-77.029609, 38.881946],\n *       [-77.020339, 38.884084],\n *       [-77.025661, 38.885821],\n *       [-77.021884, 38.889563],\n *       [-77.019824, 38.892368]\n *     ]\n *   }\n * };\n * var pt = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-77.037076, 38.884017]\n *   }\n * };\n *\n * var snapped = turf.pointOnLine(line, pt, 'miles');\n * snapped.properties['marker-color'] = '#00f'\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [line, pt, snapped]\n * };\n *\n * //=result\n */\n\nmodule.exports = function (line, pt, units) {\n    var coords;\n    if (line.type === 'Feature') {\n        coords = line.geometry.coordinates;\n    } else if (line.type === 'LineString') {\n        coords = line.coordinates;\n    } else {\n        throw new Error('input must be a LineString Feature or Geometry');\n    }\n\n    var closestPt = point([Infinity, Infinity], {\n        dist: Infinity\n    });\n    var length = 0.0;\n    for (var i = 0; i < coords.length - 1; i++) {\n        var start = point(coords[i]);\n        var stop = point(coords[i + 1]);\n        //start\n        start.properties.dist = distance(pt, start, units);\n        //stop\n        stop.properties.dist = distance(pt, stop, units);\n        // sectionLength\n        var sectionLength = distance(start, stop, units);\n        //perpendicular\n        var heightDistance = Math.max(start.properties.dist, stop.properties.dist);\n        var direction = bearing(start, stop);\n        var perpendicularPt1 = destination(pt, heightDistance, direction + 90, units);\n        var perpendicularPt2 = destination(pt, heightDistance, direction - 90, units);\n        var intersect = lineIntersects(\n            perpendicularPt1.geometry.coordinates[0],\n            perpendicularPt1.geometry.coordinates[1],\n            perpendicularPt2.geometry.coordinates[0],\n            perpendicularPt2.geometry.coordinates[1],\n            start.geometry.coordinates[0],\n            start.geometry.coordinates[1],\n            stop.geometry.coordinates[0],\n            stop.geometry.coordinates[1]\n        );\n        var intersectPt;\n        if (intersect) {\n            intersectPt = point(intersect);\n            intersectPt.properties.dist = distance(pt, intersectPt, units);\n            intersectPt.properties.location = length + distance(start, closestPt, units);\n        }\n\n        if (start.properties.dist < closestPt.properties.dist) {\n            closestPt = start;\n            closestPt.properties.index = i;\n            closestPt.properties.location = length;\n        }\n        if (stop.properties.dist < closestPt.properties.dist) {\n            closestPt = stop;\n            closestPt.properties.index = i + 1;\n            closestPt.properties.location = length + sectionLength;\n        }\n        if (intersectPt && intersectPt.properties.dist < closestPt.properties.dist) {\n            closestPt = intersectPt;\n            closestPt.properties.index = i;\n        }\n        // update length\n        length += sectionLength;\n    }\n\n    return closestPt;\n};\n\n// modified from http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\nfunction lineIntersects(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n    // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n    var denominator, a, b, numerator1, numerator2;\n    var result = {\n        x: null,\n        y: null,\n        onLine1: false,\n        onLine2: false\n    };\n    denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n    if (denominator === 0) {\n        if (result.x !== null && result.y !== null) {\n            return result;\n        } else {\n            return false;\n        }\n    }\n    a = line1StartY - line2StartY;\n    b = line1StartX - line2StartX;\n    numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n    numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n\n    // if we cast these lines infinitely in both directions, they intersect here:\n    result.x = line1StartX + (a * (line1EndX - line1StartX));\n    result.y = line1StartY + (a * (line1EndY - line1StartY));\n\n    // if line1 is a segment and line2 is infinite, they intersect if:\n    if (a > 0 && a < 1) {\n        result.onLine1 = true;\n    }\n    // if line2 is a segment and line1 is infinite, they intersect if:\n    if (b > 0 && b < 1) {\n        result.onLine2 = true;\n    }\n    // if line1 and line2 are segments, they intersect if both of the above are true\n    if (result.onLine1 && result.onLine2) {\n        return [result.x, result.y];\n    } else {\n        return false;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/point-on-line/index.js\n// module id = 89\n// module chunks = 0","var bearing = require('@turf/bearing');\nvar distance = require('@turf/distance');\nvar destination = require('@turf/destination');\nvar lineString = require('@turf/helpers').lineString;\n\n/**\n * Takes a {@link LineString|line}, a specified distance along the line to a start {@link Point},\n * and a specified  distance along the line to a stop point\n * and returns a subsection of the line in-between those points.\n *\n * This can be useful for extracting only the part of a route between two distances.\n *\n * @name lineSliceAlong\n * @param {Feature<LineString>|LineString} line input line\n * @param {number} startDist distance along the line to starting point\n * @param {number} stopDist distance along the line to ending point\n * @param {string} [units=kilometers] can be degrees, radians, miles, or kilometers\n * @returns {Feature<LineString>} sliced line\n * @example\n * var line = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *       [ 7.66845703125, 45.058001435398296 ],\n *       [ 9.20654296875, 45.460130637921004 ],\n *       [ 11.348876953125, 44.48866833139467 ],\n *       [ 12.1728515625, 45.43700828867389 ],\n *       [ 12.535400390625, 43.98491011404692 ],\n *       [ 12.425537109375, 41.86956082699455 ],\n *       [ 14.2437744140625, 40.83874913796459 ],\n *       [ 14.765625, 40.681679458715635 ]\n *     ]\n *   }\n * };\n * var start = 12.5;\n *\n * var stop = 25;\n *\n * var units = 'miles';\n *\n * var sliced = turf.lineSliceAlong(line, start, stop, units);\n *\n * //=line\n *\n * //=sliced\n */\nmodule.exports = function (line, startDist, stopDist, units) {\n    var coords;\n    var slice = [];\n    if (line.type === 'Feature') coords = line.geometry.coordinates;\n    else if (line.type === 'LineString') coords = line.coordinates;\n    else throw new Error('input must be a LineString Feature or Geometry');\n\n    var travelled = 0;\n    var overshot, direction, interpolated;\n    for (var i = 0; i < coords.length; i++) {\n        if (startDist >= travelled && i === coords.length - 1) break;\n        else if (travelled > startDist && slice.length === 0) {\n            overshot = startDist - travelled;\n            if (!overshot) {\n                slice.push(coords[i]);\n                return lineString(slice);\n            }\n            direction = bearing(coords[i], coords[i - 1]) - 180;\n            interpolated = destination(coords[i], overshot, direction, units);\n            slice.push(interpolated.geometry.coordinates);\n        }\n\n        if (travelled >= stopDist) {\n            overshot = stopDist - travelled;\n            if (!overshot) {\n                slice.push(coords[i]);\n                return lineString(slice);\n            }\n            direction = bearing(coords[i], coords[i - 1]) - 180;\n            interpolated = destination(coords[i], overshot, direction, units);\n            slice.push(interpolated.geometry.coordinates);\n            return lineString(slice);\n        }\n\n        if (travelled >= startDist) {\n            slice.push(coords[i]);\n        }\n\n        if (i === coords.length - 1) {\n            return lineString(slice);\n        }\n\n        travelled += distance(coords[i], coords[i + 1], units);\n    }\n    return lineString(coords[coords.length - 1]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/line-slice-along/index.js\n// module id = 90\n// module chunks = 0","var featureCollection = require('@turf/helpers').featureCollection;\nvar point = require('@turf/helpers').point;\nvar polygon = require('@turf/helpers').polygon;\nvar distance = require('@turf/distance');\nvar turfBBox = require('@turf/bbox');\n\n/**\n * Creates a square grid from a bounding box, {@link Feature} or {@link FeatureCollection}.\n *\n * @name squareGrid\n * @param {Array<number>|FeatureCollection|Feature<any>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSize width of each cell\n * @param {string} [units=kilometers] used in calculating cellSize, can be degrees, radians, miles, or kilometers\n * @param {boolean} [completelyWithin=false] adjust width & height cellSize to fit exactly within bbox\n * @returns {FeatureCollection<Polygon>} grid a grid of polygons\n * @example\n * var bbox = [-95, 30 ,-85, 40];\n * var cellSize = 50;\n * var units = 'miles';\n *\n * var squareGrid = turf.squareGrid(bbox, cellSize, units);\n * //=squareGrid\n */\nmodule.exports = function squareGrid(bbox, cellSize, units, completelyWithin) {\n    var results = [];\n\n    // validation\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) bbox = turfBBox(bbox); // Convert GeoJSON to bbox\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    // distance\n    var xDistance = distance(point([west, south]), point([east, south]), units);\n    var yDistance = distance(point([west, south]), point([west, north]), units);\n\n    // rows & columns\n    var columns = Math.ceil(xDistance / cellSize);\n    var rows = Math.ceil(yDistance / cellSize);\n\n    // columns | width | x\n    var xFraction = cellSize / xDistance;\n    var cellWidth = xFraction * (east - west);\n    if (completelyWithin === true) cellWidth = cellWidth * ((xDistance / cellSize) / columns);\n\n    // rows | height | y\n    var yFraction = cellSize / yDistance;\n    var cellHeight = yFraction * (north - south);\n    if (completelyWithin === true) cellHeight = cellHeight * ((yDistance / cellSize) / rows);\n\n    // iterate over columns & rows\n    var currentX = west;\n    for (var column = 0; column < columns; column++) {\n        var currentY = south;\n        for (var row = 0; row < rows; row++) {\n            var cellPoly = polygon([[\n                [currentX, currentY],\n                [currentX, currentY + cellHeight],\n                [currentX + cellWidth, currentY + cellHeight],\n                [currentX + cellWidth, currentY],\n                [currentX, currentY]\n            ]]);\n            results.push(cellPoly);\n\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n    return featureCollection(results);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/square-grid/index.js\n// module id = 91\n// module chunks = 0","var featurecollection = require('@turf/helpers').featureCollection;\nvar polygon = require('@turf/helpers').polygon;\nvar distance = require('@turf/distance');\n\n/**\n * Takes a bounding box and a cell depth and returns a set of triangular {@link Polygon|polygons} in a grid.\n *\n * @name triangleGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSize dimension of each cell\n * @param {string} [units=kilometers] used in calculating cellSize, can be degrees, radians, miles, or kilometers\n * @returns {FeatureCollection<Polygon>} grid of polygons\n * @example\n * var bbox = [-96,31,-84,40]\n * var cellSize = 10;\n * var units = 'miles';\n *\n * var triangleGrid = turf.triangleGrid(bbox, cellSize, units);\n *\n * //=triangleGrid\n */\nmodule.exports = function (bbox, cellSize, units) {\n    var fc = featurecollection([]);\n    var xFraction = cellSize / (distance([bbox[0], bbox[1]], [bbox[2], bbox[1]], units));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSize / (distance([bbox[0], bbox[1]], [bbox[0], bbox[3]], units));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n\n    var xi = 0;\n    var currentX = bbox[0];\n    while (currentX <= bbox[2]) {\n        var yi = 0;\n        var currentY = bbox[1];\n        while (currentY <= bbox[3]) {\n            if (xi % 2 === 0 && yi % 2 === 0) {\n                fc.features.push(polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]]), polygon([[\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY + cellHeight]\n                ]]));\n            } else if (xi % 2 === 0 && yi % 2 === 1) {\n                fc.features.push(polygon([[\n                    [currentX, currentY],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]]), polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX, currentY]\n                ]]));\n            } else if (yi % 2 === 0 && xi % 2 === 1) {\n                fc.features.push(polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX, currentY]\n                ]]), polygon([[\n                    [currentX, currentY],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]]));\n            } else if (yi % 2 === 1 && xi % 2 === 1) {\n                fc.features.push(polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]]), polygon([[\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY + cellHeight]\n                ]]));\n            }\n            currentY += cellHeight;\n            yi++;\n        }\n        xi++;\n        currentX += cellWidth;\n    }\n    return fc;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/triangle-grid/index.js\n// module id = 92\n// module chunks = 0","var point = require('@turf/helpers').point;\nvar polygon = require('@turf/helpers').polygon;\nvar distance = require('@turf/distance');\nvar featurecollection = require('@turf/helpers').featureCollection;\n\n//Precompute cosines and sines of angles used in hexagon creation\n// for performance gain\nvar cosines = [];\nvar sines = [];\nfor (var i = 0; i < 6; i++) {\n    var angle = 2 * Math.PI / 6 * i;\n    cosines.push(Math.cos(angle));\n    sines.push(Math.sin(angle));\n}\n\n/**\n * Takes a bounding box and a cell size in degrees and returns a {@link FeatureCollection} of flat-topped\n * hexagons ({@link Polygon} features) aligned in an \"odd-q\" vertical grid as\n * described in [Hexagonal Grids](http://www.redblobgames.com/grids/hexagons/).\n *\n * @name hexGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSize dimension of cell in specified units\n * @param {string} [units=kilometers] used in calculating cellSize, can be degrees, radians, miles, or kilometers\n * @param {boolean} [triangles=false] whether to return as triangles instead of hexagons\n * @returns {FeatureCollection<Polygon>} a hexagonal grid\n * @example\n * var bbox = [-96,31,-84,40];\n * var cellSize = 50;\n * var units = 'miles';\n *\n * var hexgrid = turf.hexGrid(bbox, cellSize, units);\n *\n * //=hexgrid\n */\nmodule.exports = function hexGrid(bbox, cellSize, units, triangles) {\n    var xFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[2], bbox[1]]), units));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[0], bbox[3]]), units));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n    var radius = cellWidth / 2;\n\n    var hex_width = radius * 2;\n    var hex_height = Math.sqrt(3) / 2 * cellHeight;\n\n    var box_width = bbox[2] - bbox[0];\n    var box_height = bbox[3] - bbox[1];\n\n    var x_interval = 3 / 4 * hex_width;\n    var y_interval = hex_height;\n\n    var x_span = box_width / (hex_width - radius / 2);\n    var x_count = Math.ceil(x_span);\n    if (Math.round(x_span) === x_count) {\n        x_count++;\n    }\n\n    var x_adjust = ((x_count * x_interval - radius / 2) - box_width) / 2 - radius / 2;\n\n    var y_count = Math.ceil(box_height / hex_height);\n\n    var y_adjust = (box_height - y_count * hex_height) / 2;\n\n    var hasOffsetY = y_count * hex_height - box_height > hex_height / 2;\n    if (hasOffsetY) {\n        y_adjust -= hex_height / 4;\n    }\n\n    var fc = featurecollection([]);\n    for (var x = 0; x < x_count; x++) {\n        for (var y = 0; y <= y_count; y++) {\n\n            var isOdd = x % 2 === 1;\n            if (y === 0 && isOdd) {\n                continue;\n            }\n\n            if (y === 0 && hasOffsetY) {\n                continue;\n            }\n\n            var center_x = x * x_interval + bbox[0] - x_adjust;\n            var center_y = y * y_interval + bbox[1] + y_adjust;\n\n            if (isOdd) {\n                center_y -= hex_height / 2;\n            }\n            if (triangles) {\n                fc.features.push.apply(fc.features, hexTriangles([center_x, center_y], cellWidth / 2, cellHeight / 2));\n            } else {\n                fc.features.push(hexagon([center_x, center_y], cellWidth / 2, cellHeight / 2));\n            }\n        }\n    }\n\n    return fc;\n};\n\n//Center should be [x, y]\nfunction hexagon(center, rx, ry) {\n    var vertices = [];\n    for (var i = 0; i < 6; i++) {\n        var x = center[0] + rx * cosines[i];\n        var y = center[1] + ry * sines[i];\n        vertices.push([x, y]);\n    }\n    //first and last vertex must be the same\n    vertices.push(vertices[0]);\n    return polygon([vertices]);\n}\n\n//Center should be [x, y]\nfunction hexTriangles(center, rx, ry) {\n    var triangles = [];\n    for (var i = 0; i < 6; i++) {\n        var vertices = [];\n        vertices.push(center);\n        vertices.push([\n            center[0] + rx * cosines[i],\n            center[1] + ry * sines[i]\n        ]);\n        vertices.push([\n            center[0] + rx * cosines[(i + 1) % 6],\n            center[1] + ry * sines[(i + 1) % 6]\n        ]);\n        vertices.push(center);\n        triangles.push(polygon([vertices]));\n    }\n    return triangles;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/hex-grid/index.js\n// module id = 93\n// module chunks = 0","var distance = require('@turf/distance');\nvar squareGrid = require('@turf/square-grid');\nvar centroid = require('@turf/centroid');\nvar bbox = require('@turf/bbox');\n\n/**\n *\n * Takes a FeatureCollection of points with known value, a power parameter, a cell depth, a unit of measurement\n * and returns a FeatureCollection of polygons in a square-grid with an interpolated value property \"IDW\" for each grid cell.\n * It finds application when in need of creating a continuous surface (i.e. rainfall, temperature, chemical dispersion surface...)\n * from a set of spatially scattered points.\n *\n * @name idw\n * @param {FeatureCollection<Point>} controlPoints Sampled points with known value\n * @param {string} valueField GeoJSON field containing the known value to interpolate on\n * @param {number} b Exponent regulating the distance-decay weighting\n * @param {number} cellWidth The distance across each cell\n * @param {string} [units=kilometers] used in calculating cellSize, can be degrees, radians, miles, or kilometers\n * @returns {FeatureCollection<Polygon>} grid A grid of polygons with a property field \"IDW\"\n */\nmodule.exports = function (controlPoints, valueField, b, cellWidth, units) {\n    // check if field containing data exists..\n    var filtered = controlPoints.features.filter(function (feature) {\n        return feature.properties &&\n            feature.properties.hasOwnProperty(valueField);\n    });\n    if (filtered.length !== 0) {\n      // create a sample square grid\n      // compared to a point grid helps visualizing the output (like a raster..)\n        var samplingGrid = squareGrid(bbox(controlPoints), cellWidth, units);\n        var N = samplingGrid.features.length;\n        for (var i = 0; i < N; i++) {\n            var zw = 0;\n            var sw = 0;\n            // calculate the distance from each control point to cell's centroid\n            for (var j = 0; j < controlPoints.features.length; j++) {\n                var d = distance(centroid(samplingGrid.features[i]), controlPoints.features[j], units);\n                if (d === 0) {\n                    zw = controlPoints.features[j].properties[valueField];\n                }\n                var w = 1.0 / Math.pow(d, b);\n                sw += w;\n                zw += w * controlPoints.features[j].properties[valueField];\n            }\n            // write IDW value for each grid cell\n            samplingGrid.features[i].properties.z = zw / sw;\n        }\n        return samplingGrid;\n    } else {\n        console.log('Specified Data Field is Missing');\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/idw/index.js\n// module id = 94\n// module chunks = 0","/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {(Feature|FeatureCollection)} layer any GeoJSON Feature or FeatureCollection\n * @param {number} [precision=6] coordinate decimal precision\n * @param {number} [coordinates=2] maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {(Feature|FeatureCollection)} layer with truncated geometry\n * @example\n * var point = {\n *     \"type\": \"Feature\",\n *     \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [\n *             70.46923055566859,\n *             58.11088890802906,\n *             1508\n *         ]\n *     },\n *     \"properties\": {}\n * };\n * var pointTrunc = turf.truncate(point);\n * //= pointTrunc\n */\nmodule.exports = function (layer, precision, coordinates) {\n    precision = precision || 6;\n    coordinates = coordinates || 2;\n\n    if (layer === undefined) { throw new Error('layer is required'); }\n\n    switch (layer.type) {\n    case 'FeatureCollection': {\n        layer.features = layer.features.map(function (feature) {\n            return truncate(feature, precision, coordinates);\n        });\n        return layer;\n    }\n    case 'Feature':\n        return truncate(layer, precision, coordinates);\n    default:\n        throw new Error('invalid type');\n    }\n};\n\nfunction truncate(feature, precision, coordinates) {\n    if (coordinates !== undefined) { feature.geometry.coordinates = deepSlice(feature.geometry.coordinates, 0, coordinates); }\n    feature.geometry.coordinates = toFix(feature.geometry.coordinates, precision);\n    return feature;\n}\n\nfunction toFix(array, precision) {\n    return array.map(function (value) {\n        if (typeof value === 'object') { return toFix(value, precision); }\n        return Number(value.toFixed(precision));\n    });\n}\n\n/**\n * Recursive Array.prototype.slice()\n * https://github.com/DenisCarriere/deep-slice\n *\n * @private\n * @param {Array} items Array input\n * @param {number} start The beginning of the specified portion of the array.\n * @param {number} end The end of the specified portion of the array.\n * @returns {Array} Returns a section of an array.\n * @example\n * deepSlice([[10, 20, 30], [40, 50, 60]], 0, 2)\n * //=[[10, 20], [40, 50]]\n */\nfunction deepSlice(items, start, end) {\n    if (typeof items[0] !== 'object') {\n        return items.slice(start, end);\n    }\n    return items.map(function (item) {\n        return deepSlice(item, start, end);\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@turf/truncate/index.js\n// module id = 95\n// module chunks = 0","import Point from './point'\nimport Shape from './shape'\n\nclass Editor {\n  constructor(canvas, ratio) {\n    this.canvas = canvas\n    this.ctx = canvas.getContext(\"2d\")\n    this.ratio = ratio || 20\n    canvas.addEventListener(\"mouseup\",this.mouseup.bind(this))\n    canvas.addEventListener(\"mousemove\",this.mousemove.bind(this))\n    this.points = []\n    this.currentPoint = null\n  }\n\n  getPointFromMouseEvent(e) {\n    return new Point(e.offsetX / this.ratio, e.offsetY / this.ratio)\n  }\n\n  mouseup(e) {\n    const tmpP = this.getPointFromMouseEvent(e)\n    const p = new Point(Math.round(tmpP.x),Math.round(tmpP.y))\n    if (this.points.length > 0 && this.points[0].equals(p)) {\n      this.addShape && this.addShape(new Shape(this.points))\n      this.points = []\n    } else {\n      this.points.push(p)\n    }\n    this.render()\n  }\n\n  mousemove(e) {\n    this.currentPoint = this.getPointFromMouseEvent(e)\n    this.render()\n  }\n\n  render() {\n    const ctx = this.ctx\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    ctx.fillStyle = \"#000000\"\n    ctx.save()\n    ctx.lineWidth = 2\n    if (this.points.length > 0) {\n      ctx.beginPath()\n      ctx.moveTo(this.points[0].x * this.ratio,this.points[0].y * this.ratio)\n      for (let i = 1; i < this.points.length;++i) {\n        ctx.lineTo(this.points[i].x * this.ratio,this.points[i].y * this.ratio)\n      }\n      if (this.currentPoint) {\n        ctx.lineTo(this.currentPoint.x * this.ratio,this.currentPoint.y * this.ratio)\n      }\n      ctx.stroke()\n    }\n    ctx.restore()\n  }\n\n  hide() {\n    this.canvas.style.display = \"none\"\n    this.points = []\n  }\n  show() {\n    this.canvas.style.display = \"block\"\n  }\n}\n\nexport default Editor\n\n\n// WEBPACK FOOTER //\n// ./src/editor.js","import Shape, {makeSquare} from './shape'\nimport Point from './point'\n\nconst L1 = {\n  initShapes:[\n    makeSquare(4,new Point(6,6)),\n    makeSquare(2,new Point(8,12),1),\n  ],\n  targetShapes:[\n    makeSquare(4,new Point(5,5)),\n    makeSquare(2,new Point(7,5),1),\n  ]\n}\n\nconst L2 = {\n  initShapes:[\n    makeSquare(4,new Point(1,4)),\n    makeSquare(4,new Point(15,4)),\n    makeSquare(4,new Point(8,10)),\n  ],\n  targetShapes:[\n    makeSquare(4,new Point(5,5)),\n    makeSquare(4,new Point(6,6)),\n    makeSquare(4,new Point(4,4)),\n  ]\n}\n\nexport function createFromJson(data) {\n  return data.map(item=>{\n    return {\n      initShapes:item.initShapes.map(s=>new Shape(\n        s.points.map(p=>new Point(p.x,p.y)),\n        new Point(s.origin.x, s.origin.y))),\n      targetShapes:item.targetShapes.map(s=>new Shape(\n        s.points.map(p=>new Point(p.x,p.y)),\n        new Point(s.origin.x, s.origin.y))),\n    }\n  })\n}\nexport const LEVELS = [L2, L1]\n\n\n// WEBPACK FOOTER //\n// ./src/level.js","'use strict';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nmodule.exports = Promise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise-polyfill/lib/index.js\n// module id = 98\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 99\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 100\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 101\n// module chunks = 0"],"sourceRoot":""}